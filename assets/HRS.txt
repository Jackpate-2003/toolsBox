{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Hcaptcha Solver (Automatically solves Hcaptcha in browser)","options":{"check_for_updates":false,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.imageidentify.com","https://cdnjs.cloudflare.com","https://cdn.jsdelivr.net","https://unpkg.com","https://*.hcaptcha.com/*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.hcaptcha.com/*hcaptcha-challenge*","https://*.hcaptcha.com/*checkbox*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"ts":1644656282231,"data":{}},"enabled":true,"position":1,"uuid":"d34f494d-527b-4260-b4aa-02d95d8ea47a","source":"","requires":[{"meta":{"name":"jimp.min.js","url":"https://unpkg.com/jimp@0.5.2/browser/lib/jimp.min.js","ts":1644656283764,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"tesseract.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/tesseract.js/2.0.0-alpha.2/tesseract.min.js","ts":1644656283623,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"tf.min.js","url":"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.13.0/dist/tf.min.js","ts":1644656285154,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"coco-ssd.min.js","url":"https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd@2.2.2/dist/coco-ssd.min.js","ts":1644656283790,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"mobilenet.min.js","url":"https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet@2.1.0/dist/mobilenet.min.js","ts":1644656283978,"mimetype":"text/javascript"},"source":""}]},{"name":"Bypass All Shortlinks","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["/^https:\\/\\/claimercorner\\.xyz\\/(claimer\\/dashboard|claimer\\/advertise|claimer\\/ptc|claimer\\/deposit|claimer\\/transfer|claimer\\/tasks|claimer\\/offerwall|claimer\\/profile|claimer\\/auto|claimer\\/mining|claimer\\/wheel)/"],"orig_includes":["/^(https?:\\/\\/)(tmearn|jobklic|additionalgamer|uformations|makemoneywithurl|rifurl|shrinkearn|esenr|adsforfaucets|skip-url|pennbookcenter|publicananker|mikl4forex|michaelemad|miklpro|zirof|forex-golds|nawahi1|mmo1s|mosqam|semawur|forex-trnd|hoshilink|bit-url|cuts-url|coinlyhub|popimed|phoenixshorts|rayusmedya|enburl|blog-forall|madar-24|katflys|shortenbuddy|kiemlua|kekolink|smoner|djbhojpurisongs|coinadfly|shornet|clixshort|earnflies|urlty|sakastau|adsmoker|claimclicks|doctor-groups|earnwithshortlink|bitzite|link1s|diadiemcheckin|tudiendanhngon|chooyomi|staaker|lucidcam|coinsparty|forexlap|forexmab|linkjust|forex-articles|ponselharian|liinkat|thegoneapp|alocd|mobi2c|0x-bit|studyuo|hookeaudio|fc-lc|expertvn|markipli|downphanmem|kingsleynyc|theicongenerator|healthy4pepole|kiktu|wrbloggers|1bitspace|healdad|marharo|ez4mods|try2link|ex-foary|discordserv|softechbharat|adcorto|movie4i|shopdorod|bitcoin-indo|crypto-news-hub|blogginglass|1shorten|amazingdarpon|lensabicara|tieutietkiem|bittalky|urlily|bablyfeed|crypto4tun|coin-free|dash-free|usdshort|coinsurl|cafenau|techacode|ls2earn|sevenjournals|mercedesellington|7misr4day|sama-pro|samaa-pro|imageresizertool|techrfour|ez4short|topnewsnew|gawishpro|ad-mezo|dz4link|skincarie|okrzone|dogemate|coinsearns|informaxonline|gaminplay|proviralhost|guardbolts|short-zero|infinitycoupon|mfk-shorter|donnaleehunt|gamalk-sehetk|adsafelink|cbshort)(\\.com)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(zolomix|cararegistrasi|5golink|birdurls|urlfiles|snkra|artiskini|sh2rt|byboe|medcpu|nousdecor|restorbio|bdnewsx|upshrink|gifans|jardima|askpaccosi|jobswd|dogeearn|gkqnaexam|imperialstudy|ovlinks|imagenesderopaparaperros|w4earn|url2link)(\\.com)(\\/.*)?/","/^(https?:\\/\\/)(sehati|boxlink|zoxlink|moxlink|foxlink|forex-lab|watchdoge|arenaboard|ccsl|xz2|mshort|shrinkpay|adsgo|gainprofit|foofly|adnit|bestshort|shon|crypto-faucet|short-cash2|toptechtalk|foodyrecipe|cutearn|infinityfreescripts|st4ch|wizzly|saqercoin|cryptoon|porofly|morofly|zorofly|worofly|nooz|tooz|mgnet|crypteen|dogeen|coocly|doodly|fauceteen|k-sport|z-sport|n-sport|adcorto|speedynews|tecboy|cutdl|marocclickers|9bitcoin|gameen|fameen|yameen|phoenixs|girlporo|girlmoro|girlzoro|girlworo|cryptocoinearn)(\\.xyz)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(insuranceblog|insurance-space|bcdshort|insurglobal|lootlinks|adinsurance|urbharat|claimercorner)(\\.xyz)(\\/.*)?/","/^(https?:\\/\\/)(bigb0ss|jiotech|neonlink|techydino|illink|digitalnaz|world-trips|cryptourl|yoshare|forex-gold|allcryptoz|topcryptoz|techtrickonline|uniqueten|7apple|zurls|ovavibe|ccurl|luckydice|link1s|bitcomarket)(\\.net)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(100count|fire-link|owllink|mozlink|ultraten)(\\.net)(\\/.*)?/","/^(https?:\\/\\/)(tnlink|jrlinks|shortzzy|coincity|techmart4u|linkres|9bitco|qualitystudymaterial|adoco|cuturl|missionhight|wpking|foodma|zagl|ls2earn|streamshort|cslink|coinbaze)(\\.in)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(cashurl|linkad|bitcoinly|crazyblog|zolomix|technologylover)(\\.in)(\\/.*)?/","/^(https?:\\/\\/)(aylink|linkszia|claimsatoshi|mynewsmedia|bitshort|gtlink|earnload|adfloz|linksly|droplink)(\\.co)(\\/.*)?/","/^(https?:\\/\\/)(ctbl|adsurfing|skyurl|girls-like|adsoro|gobits|zoss|shrinke|tlin|health-and|short.croclix)(\\.me)(\\/.*)?/","/^(https?:\\/\\/)(sitr|palpodcast|safelink|zipcrypto|cutgo|cutbits|shorthero|flylink|earncoin|downfile)(\\.site)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(bshopme|cekip|kolotoken)(\\.site)(\\/.*)?/","/^(https?:\\/\\/)(earnme|sanoybonito|forexat|automotur|1ist|kooza|atlai|claimbitco)(\\.club)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(mcrypto|usanewstoday)(\\.club)(\\/.*)?/","/^(https?:\\/\\/)(technicalramno1|paid4|vshort|freedoge|yousm|shortzzy)(\\.link)(\\/.*)?/","/^(https?:\\/\\/)(shurt|shortit|adsy|bitlinks|clik)(\\.pw)(\\/.*)?/","/^(https?:\\/\\/)(didhafairus|mycut|exee|onlineteori)(\\.my\\.id)(\\/.*)?/","/^(https?:\\/\\/)(coinshub|myhealths|kiiw|passgen|wordcounter)(\\.icu)(\\/.*)?/","/^(https?:\\/\\/)(luckybits|newforex|uebnews|wplink)(\\.online)(\\/.*)?/","/^(https?:\\/\\/)(exey|ezlinks|techmody|ouo|ex-e)(\\.io)(\\/.*)?/","/^(https?:\\/\\/)(zshort|earnfree|claimcrypto|cashearn)(\\.cc)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(fullreviews|freebcc)(\\.org)(\\/.*)?/","/^(https?:\\/\\/)(cryptoad|urlpay)(\\.org)(\\/.*)?/","/^(https?:\\/\\/)(linkmit|forexeen|zcpa|yalla-shoot-now|jameeltips|mitly)(\\.us)(\\/.*)?/","/^(https?:\\/\\/)(linksos|mixespecialidades|noweconomy|deportealdia|adshort)(\\.live)(\\/.*)?/","/^(https?:\\/\\/)(earnads|genpassword|shrlink)(\\.top)(\\/.*)?/","/^(https?:\\/\\/)(profitlink|zagl|scratch247)(\\.info)(\\/.*)?/","/^(https?:\\/\\/)(hcsbtc|alertcrypto|aboutprofit)(\\.eu)(\\/.*)?/","/^(https?:\\/\\/)(freebitcoin|freelitecoin)(\\.vip)(\\/.*)?/","/^(https?:\\/\\/)(iir|tei)(\\.ai)(\\/.*)?/","/^(https?:\\/\\/)(cryptoads|adshort|1bit)(\\.space)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(cryptolink|adz7short)(\\.space)(\\/.*)?/","/^(https?:\\/\\/)(makeeasybtc|petslots|softindex)(\\.website)(\\/.*)?/","/^(https?:\\/\\/)(dogecoin|icut)(\\.click)(\\/.*)?/","/^(https?:\\/\\/)(up-load|t2l)(\\.one)(\\/.*)?/","/^(https?:\\/\\/)(doge-mining|gamefaucet)(\\.win)(\\/.*)?/","/^(https?:\\/\\/)(url\\.)?(acefaucet|namaidani)(\\.com)(\\/.*)?/","/^(https?:\\/\\/)(link\\.)?(encyclopedia-24|tokenoto)(\\.com)(\\/.*)?/","/^(https?:\\/\\/)(cool-time|movies|anime|tech)(\\.dutchycorp\\.space)(\\/.*)?/"],"orig_matches":["*://satoshigratisotomatis.blogspot.com/*","*://dutchycorp.space/s*/*","*://dutchycorp.ovh/s*/*","*://*/recaptcha/*","*://stores.filmyzilla-in.xyz/*","*://blog.crypto-faucet.xyz/*","*://links.doctorcoin.xyz/*","*://cbs.trxking.xyz/*","*://link.egfly.xyz/*","*://shortlink.earnmotivation.com/*","*://shorts.lu/*","*://tny.so/*","*://ouo.press/*","*://ouo.today/*","*://up-load.one/*","*://*.linkfly.io/*","*://doge-mining.win/*","*://easyfaucet.fun/*","*://url.faucet77.tk/*","*://go.leolink.co/*","*://hitbits.io/slk/*","*://getitall.top/f/*","*://pentafaucet.com/f/*","*://short.goldenfaucet.io/*","*://sohexo.org/kisalink/*","*://short.toptap.website/*","*://toptap.website/short/*","*://short.clickscoin.com/*","*://url.namaidani.net/*","*://*.shortlinks.click/*","*://*.adcortoltda.agency/*","*://konstantinova.net/verify/*","*://sl.claimfreebits.com/*","*://arbweb.info/sl/*","*://www.yofaurls.com/*","*://cryptofuns.ru/*","*://shortlink.prz.pw/*","*://blog.earn4fun.in/*","*://phongcachsao.vn/*","*://go.lokak.fun/*","*://*.techgeek.digital/*","*://landing.adly.fun/*","*://azsoft.biz/*","*://*.123link.biz/*","*://romania.bz/*","*://dataf.pro/*","*://kimo.ma/*","*://t2l.one/*","*://c2g.at/*","*://fcc.lc/*","*://clk.asia/*","*://aii.sh/*","*://mdn.rest/*","*://median.uno/*","*://link.rota.cc/*","*://*.netfile.cc/*","*://blog.earn2fly.in/*","*://cryptolatest.news/*","*://money.alyoumeg.com/*","*://ashorturl.uk/*","*://techycontent.ml/*","*://th3dz.com/sl/*","*://crypto-adria.ga/*","*://cryptonetos.ru/page/redirect*","*://speedsatoshi.com/lootlinks/*","*://wp.womenhaircolors.review/*","*://store.filmyzilla-in.xyz/*","*://cryptotyphoon.com/short/*","*://clickscoin.com/shortccsl/*","*://dogeclick.net/ccsl/*","*://starfaucet.net/sl/*","*://redir.123file.li/*","*://android-mody.store/*","*://adcrypto.co/claim/*","*://11bit.co.in/bitshort/*","*://cryptofans.club/short/*","*://cryptofans.club/next/*","*://cryptofans.club/other/*","*://*.softairbay.com/shortSAB/*","*://faucetcrypto.com/claim/step/*","*://faucet.gold/BTC/?step*","*://faucet.gold/ETH/?step*","*://cryptofans.club/step*","*://clickscoin.com/short/*","*://dogeclick.net/short/*","*://*.adslinkfly.online/*","*://go.safeadlink.my.id/*","*://bildirim.eu/ph/*","*://nex-url.cyou/*","*://za.uy/*","*://za.gl/*","*://goads.ly/*","*://clk.ink/*","*://coin.mg/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1644867269249,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/431691-bypass-all-shortlinks/code/Bypass%20All%20Shortlinks.user.js","uuid":"e1323f31-8226-4de8-acfc-38713b18148b","source":""},{"name":"Recaptcha Solver (Automatically solves Recaptcha in browser)","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["engageub.pythonanywhere.com","engageub1.pythonanywhere.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/recaptcha/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1644867269294,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/430593-recaptcha-solver-automatically-solves-recaptcha-in-browser/code/Recaptcha%20Solver%20(Automatically%20solves%20Recaptcha%20in%20browser).user.js","uuid":"dc7c52f2-7c96-48bd-8d21-137b84d512b3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSZWNhcHRjaGEgU29sdmVyIChBdXRvbWF0aWNhbGx5IHNvbHZlcyBSZWNhcHRjaGEgaW4gYnJvd3NlcikKLy8gQG5hbWVzcGFjZSAgICBSZWNhcHRjaGEgU29sdmVyCi8vIEB2ZXJzaW9uICAgICAgMS42Ci8vIEBkZXNjcmlwdGlvbiAgUmVjYXB0Y2hhIFNvbHZlciBpbiBCcm93c2VyIHwgQXV0b21hdGljYWxseSBzb2x2ZXMgUmVjYXB0Y2hhIGluIGJyb3dzZXIKLy8gQGF1dGhvciAgICAgICBlbmdhZ2V1YgovLyBAbWF0Y2ggICAgICAgICo6Ly8qL3JlY2FwdGNoYS8qCi8vIEBjb25uZWN0ICAgICAgZW5nYWdldWIucHl0aG9uYW55d2hlcmUuY29tCi8vIEBjb25uZWN0ICAgICAgZW5nYWdldWIxLnB5dGhvbmFueXdoZXJlLmNvbQovLyBAZ3JhbnQgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0CgovLyA9PS9Vc2VyU2NyaXB0PT0KKGZ1bmN0aW9uKCkgewogICAgInVzZSBzdHJpY3QiO3ZhciBzb2x2ZWQ9ITEsY2hlY2tCb3hDbGlja2VkPSExLHdhaXRpbmdGb3JBdWRpb1Jlc3BvbnNlPSExO2NvbnN0IENIRUNLX0JPWD0iLnJlY2FwdGNoYS1jaGVja2JveC1ib3JkZXIiLEFVRElPX0JVVFRPTj0iI3JlY2FwdGNoYS1hdWRpby1idXR0b24iLFBMQVlfQlVUVE9OPSIucmMtYXVkaW9jaGFsbGVuZ2UtcGxheS1idXR0b24gLnJjLWJ1dHRvbi1kZWZhdWx0IixBVURJT19TT1VSQ0U9IiNhdWRpby1zb3VyY2UiLElNQUdFX1NFTEVDVD0iI3JjLWltYWdlc2VsZWN0IixSRVNQT05TRV9GSUVMRD0iLnJjLWF1ZGlvY2hhbGxlbmdlLXJlc3BvbnNlLWZpZWxkIixBVURJT19FUlJPUl9NRVNTQUdFPSIucmMtYXVkaW9jaGFsbGVuZ2UtZXJyb3ItbWVzc2FnZSIsQVVESU9fUkVTUE9OU0U9IiNhdWRpby1yZXNwb25zZSIsUkVMT0FEX0JVVFRPTj0iI3JlY2FwdGNoYS1yZWxvYWQtYnV0dG9uIixSRUNBUFRDSEFfU1RBVFVTPSIjcmVjYXB0Y2hhLWFjY2Vzc2libGUtc3RhdHVzIixET1NDQVBUQ0hBPSIucmMtZG9zY2FwdGNoYS1ib2R5IixWRVJJRllfQlVUVE9OPSIjcmVjYXB0Y2hhLXZlcmlmeS1idXR0b24iLE1BWF9BVFRFTVBUUz01O3ZhciByZXF1ZXN0Q291bnQ9MCxyZWNhcHRjaGFMYW5ndWFnZT1xU2VsZWN0b3IoImh0bWwiKS5nZXRBdHRyaWJ1dGUoImxhbmciKSxhdWRpb1VybD0iIixyZWNhcHRjaGFJbml0aWFsU3RhdHVzPXFTZWxlY3RvcihSRUNBUFRDSEFfU1RBVFVTKT9xU2VsZWN0b3IoUkVDQVBUQ0hBX1NUQVRVUykuaW5uZXJUZXh0OiIiO2Z1bmN0aW9uIGlzSGlkZGVuKGUpe3JldHVybiBudWxsPT09ZS5vZmZzZXRQYXJlbnR9YXN5bmMgZnVuY3Rpb24gZ2V0VGV4dEZyb21BdWRpbyhlKXtyZXF1ZXN0Q291bnQrPTEsZT1lLnJlcGxhY2UoInJlY2FwdGNoYS5uZXQiLCJnb29nbGUuY29tIikscmVjYXB0Y2hhTGFuZ3VhZ2UubGVuZ3RoPDEmJihjb25zb2xlLmxvZygiUmVjYXB0Y2hhIExhbmd1YWdlIGlzIG5vdCByZWNvZ25pemVkIikscmVjYXB0Y2hhTGFuZ3VhZ2U9ImVuLVVTIiksY29uc29sZS5sb2coIlJlY2FwdGNoYSBMYW5ndWFnZSBpcyAiK3JlY2FwdGNoYUxhbmd1YWdlKTt2YXIgbz1NYXRoLmZsb29yKDIqTWF0aC5yYW5kb20oKSk/Imh0dHBzOi8vZW5nYWdldWIucHl0aG9uYW55d2hlcmUuY29tIjoiaHR0cHM6Ly9lbmdhZ2V1YjEucHl0aG9uYW55d2hlcmUuY29tIjtHTV94bWxodHRwUmVxdWVzdCh7bWV0aG9kOiJQT1NUIix1cmw6byxoZWFkZXJzOnsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIn0sZGF0YToiaW5wdXQ9IitlbmNvZGVVUklDb21wb25lbnQoZSkrIiZsYW5nPSIrcmVjYXB0Y2hhTGFuZ3VhZ2UsdGltZW91dDo2ZTQsb25sb2FkOmZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJSZXNwb25zZTo6IitlLnJlc3BvbnNlVGV4dCk7dHJ5e3ZhciBvO2UmJmUucmVzcG9uc2VUZXh0JiYoIjAiPT0obz1lLnJlc3BvbnNlVGV4dCl8fG8uaW5jbHVkZXMoIjwiKXx8by5pbmNsdWRlcygiPiIpfHxvLmxlbmd0aDwyfHw1MDxvLmxlbmd0aD9jb25zb2xlLmxvZygiSW52YWxpZCBSZXNwb25zZS4gUmV0cnlpbmcuLiIpOnFTZWxlY3RvcihBVURJT19TT1VSQ0UpJiZxU2VsZWN0b3IoQVVESU9fU09VUkNFKS5zcmMmJmF1ZGlvVXJsPT1xU2VsZWN0b3IoQVVESU9fU09VUkNFKS5zcmMmJnFTZWxlY3RvcihBVURJT19SRVNQT05TRSkmJiFxU2VsZWN0b3IoQVVESU9fUkVTUE9OU0UpLnZhbHVlJiYibm9uZSI9PXFTZWxlY3RvcihBVURJT19CVVRUT04pLnN0eWxlLmRpc3BsYXkmJnFTZWxlY3RvcihWRVJJRllfQlVUVE9OKT8ocVNlbGVjdG9yKEFVRElPX1JFU1BPTlNFKS52YWx1ZT1vLHFTZWxlY3RvcihWRVJJRllfQlVUVE9OKS5jbGljaygpKTpjb25zb2xlLmxvZygiQ291bGQgbm90IGxvY2F0ZSB0ZXh0IGlucHV0IGJveCIpLHdhaXRpbmdGb3JBdWRpb1Jlc3BvbnNlPSExKX1jYXRjaChlKXtjb25zb2xlLmxvZyhlLm1lc3NhZ2UpLGNvbnNvbGUubG9nKCJFeGNlcHRpb24gaGFuZGxpbmcgcmVzcG9uc2UuIFJldHJ5aW5nLi4iKSx3YWl0aW5nRm9yQXVkaW9SZXNwb25zZT0hMX19LG9uZXJyb3I6ZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coZSksd2FpdGluZ0ZvckF1ZGlvUmVzcG9uc2U9ITF9LG9udGltZW91dDpmdW5jdGlvbigpe2NvbnNvbGUubG9nKCJSZXNwb25zZSBUaW1lZCBvdXQuIFJldHJ5aW5nLi4iKSx3YWl0aW5nRm9yQXVkaW9SZXNwb25zZT0hMX19KX1mdW5jdGlvbiBxU2VsZWN0b3JBbGwoZSl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZSl9ZnVuY3Rpb24gcVNlbGVjdG9yKGUpe3JldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpfXFTZWxlY3RvcihDSEVDS19CT1gpJiZxU2VsZWN0b3IoQ0hFQ0tfQk9YKS5jbGljaygpO3ZhciBzdGFydEludGVydmFsPXNldEludGVydmFsKGZ1bmN0aW9uKCl7dHJ5e2NoZWNrQm94Q2xpY2tlZHx8IXFTZWxlY3RvcihDSEVDS19CT1gpfHxpc0hpZGRlbihxU2VsZWN0b3IoQ0hFQ0tfQk9YKSl8fChxU2VsZWN0b3IoQ0hFQ0tfQk9YKS5jbGljaygpLGNoZWNrQm94Q2xpY2tlZD0hMCkscVNlbGVjdG9yKFJFQ0FQVENIQV9TVEFUVVMpJiZxU2VsZWN0b3IoUkVDQVBUQ0hBX1NUQVRVUykuaW5uZXJUZXh0IT1yZWNhcHRjaGFJbml0aWFsU3RhdHVzJiYoc29sdmVkPSEwLGNvbnNvbGUubG9nKCJTT0xWRUQiKSxjbGVhckludGVydmFsKHN0YXJ0SW50ZXJ2YWwpKSxyZXF1ZXN0Q291bnQ+TUFYX0FUVEVNUFRTJiYoY29uc29sZS5sb2coIkF0dGVtcHRlZCBNYXggUmV0cmllcy4gU3RvcHBpbmcgdGhlIHNvbHZlciIpLHNvbHZlZD0hMCxjbGVhckludGVydmFsKHN0YXJ0SW50ZXJ2YWwpKSxzb2x2ZWR8fChxU2VsZWN0b3IoQVVESU9fQlVUVE9OKSYmIWlzSGlkZGVuKHFTZWxlY3RvcihBVURJT19CVVRUT04pKSYmcVNlbGVjdG9yKElNQUdFX1NFTEVDVCkmJnFTZWxlY3RvcihBVURJT19CVVRUT04pLmNsaWNrKCksIXdhaXRpbmdGb3JBdWRpb1Jlc3BvbnNlJiZxU2VsZWN0b3IoQVVESU9fU09VUkNFKSYmcVNlbGVjdG9yKEFVRElPX1NPVVJDRSkuc3JjJiYwPHFTZWxlY3RvcihBVURJT19TT1VSQ0UpLnNyYy5sZW5ndGgmJmF1ZGlvVXJsPT1xU2VsZWN0b3IoQVVESU9fU09VUkNFKS5zcmMmJnFTZWxlY3RvcihSRUxPQURfQlVUVE9OKXx8cVNlbGVjdG9yKEFVRElPX0VSUk9SX01FU1NBR0UpJiYwPHFTZWxlY3RvcihBVURJT19FUlJPUl9NRVNTQUdFKS5pbm5lclRleHQubGVuZ3RoJiZxU2VsZWN0b3IoUkVMT0FEX0JVVFRPTikmJiFxU2VsZWN0b3IoUkVMT0FEX0JVVFRPTikuZGlzYWJsZWQ/cVNlbGVjdG9yKFJFTE9BRF9CVVRUT04pLmNsaWNrKCk6IXdhaXRpbmdGb3JBdWRpb1Jlc3BvbnNlJiZxU2VsZWN0b3IoUkVTUE9OU0VfRklFTEQpJiYhaXNIaWRkZW4ocVNlbGVjdG9yKFJFU1BPTlNFX0ZJRUxEKSkmJiFxU2VsZWN0b3IoQVVESU9fUkVTUE9OU0UpLnZhbHVlJiZxU2VsZWN0b3IoQVVESU9fU09VUkNFKSYmcVNlbGVjdG9yKEFVRElPX1NPVVJDRSkuc3JjJiYwPHFTZWxlY3RvcihBVURJT19TT1VSQ0UpLnNyYy5sZW5ndGgmJmF1ZGlvVXJsIT1xU2VsZWN0b3IoQVVESU9fU09VUkNFKS5zcmMmJnJlcXVlc3RDb3VudDw9TUFYX0FUVEVNUFRTJiYod2FpdGluZ0ZvckF1ZGlvUmVzcG9uc2U9ITAsZ2V0VGV4dEZyb21BdWRpbyhhdWRpb1VybD1xU2VsZWN0b3IoQVVESU9fU09VUkNFKS5zcmMpKSkscVNlbGVjdG9yKERPU0NBUFRDSEEpJiYwPHFTZWxlY3RvcihET1NDQVBUQ0hBKS5pbm5lclRleHQubGVuZ3RoJiYoY29uc29sZS5sb2coIkF1dG9tYXRlZCBRdWVyaWVzIERldGVjdGVkIiksY2xlYXJJbnRlcnZhbChzdGFydEludGVydmFsKSl9Y2F0Y2goZSl7Y29uc29sZS5sb2coZS5tZXNzYWdlKSxjb25zb2xlLmxvZygiQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgc29sdmluZy4gU3RvcHBpbmcgdGhlIHNvbHZlci4iKSxjbGVhckludGVydmFsKHN0YXJ0SW50ZXJ2YWwpfX0sNWUzKTsKfSkoKTs="},{"name":"adLBypasser [v1.2] || Ouo.Io, Uii.Io, Exe.Io, Bc.Vc, Adf.Ly & More ✔ NO ADS","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.ouo.io/*","*://*.ouo.press/*","*://*.uii.io/*","*://*.passgen.icu/*","*://*.wordcounter.icu/*","*://*.exe.io/*","*://*.exey.io/*","*://*.exey.app/*","*://*.bc.vc/*","*://*.bcvc.live/*","*://*.ouo.today/*","*://*.doaipomer.com/*","*://*.adf.ly/*","*://*.hurirk.net/*","*://*.usfinf.net/*","*://*.pro/*","*://*.met.bz/*","*://*.shrinkearn.com/*","*://*.tei.ai/*","*://*.makemoneywithurl.com/*","*://*.clk.sh/*","*://*.iir.ai/*","*://*.shrink.pe/*","*://*.aii.sh/*","*://*.shrtfly.com/*","*://*.stfly.me/*","*://*.nbyts.online/*","*://*.shrinkurl.org/*","*://*.shrinkme.io/*","*://*.shrinke.me/*","*://*.smoner.com/*","*://*.tr.link/*","*://*.aylink.co/*","*://*.yindex.xyz/*","*://*.gitizle.vip/*","*://*.uzunversiyon.xyz/*","*://*.shtms.co/*","*://*.findi.pro/*","*://*.gitlink.pro/*","*://*.bildirim.eu/*","*://*.ppcnt.net/*","*://*.pnd.tl/*","*://*.pnd.one/*","*://*.pnd.money/*","*://*.pnd.fyi/*","*://*.pndx.live/*","*://*.shr.cash/*","*://*.acn.vin/*","*://*.pubiza.com/*","*://*.lnk.parts/*","*://*.lnkparts.com/*","*://*.zunsoach.com/*","*://*.recaptcha.net/recaptcha/*","*://*.google.com/recaptcha/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1644867269320,"data":{}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/439469-adlbypasser-v1-2-ouo-io-uii-io-exe-io-bc-vc-adf-ly-more-no-ads/code/adLBypasser%20%5Bv12%5D%20%7C%7C%20OuoIo,%20UiiIo,%20ExeIo,%20BcVc,%20AdfLy%20%20More%20%E2%9C%94%20NO%20ADS.user.js","uuid":"31b6d950-f518-4a7f-85e2-95c90bed2202","source":"","requires":[{"meta":{"name":"jquery-3.6.0.min.js","url":"https://code.jquery.com/jquery-3.6.0.min.js","ts":1644867269312,"mimetype":"text/javascript"},"source":""}]},{"name":"AdsBypasser","options":{"check_for_updates":false,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["https://tools-box.vercel.app/assets/js/*"],"orig_excludes":[],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"ts":1644870468103,"data":{"version":"n3"}},"enabled":true,"position":5,"file_url":"https://adsbypasser.github.io/releases/adsbypasser.user.js","uuid":"4e07b4b2-cd56-4812-9598-2044eef058b6","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIEFkc0J5cGFzc2VyCi8vIEBuYW1lc3BhY2UgICAgICBBZHNCeXBhc3NlcgovLyBAZGVzY3JpcHRpb24gICAgQnlwYXNzIEFkcwovLyBAY29weXJpZ2h0ICAgICAgMjAxMissIFdlaS1DaGVuZyBQYW4gKGxlZ25hbGV1cmMpCi8vIEB2ZXJzaW9uICAgICAgICA1LjU1LjAKLy8gQGxpY2Vuc2UgICAgICAgIEJTRAovLyBAaG9tZXBhZ2VVUkwgICAgaHR0cHM6Ly9hZHNieXBhc3Nlci5naXRodWIuaW8vCi8vIEBzdXBwb3J0VVJMICAgICBodHRwczovL2dpdGh1Yi5jb20vYWRzYnlwYXNzZXIvYWRzYnlwYXNzZXIvaXNzdWVzCi8vIEB1cGRhdGVVUkwgICAgICBodHRwczovL2Fkc2J5cGFzc2VyLmdpdGh1Yi5pby9yZWxlYXNlcy9hZHNieXBhc3Nlci5tZXRhLmpzCi8vIEBkb3dubG9hZFVSTCAgICBodHRwczovL2Fkc2J5cGFzc2VyLmdpdGh1Yi5pby9yZWxlYXNlcy9hZHNieXBhc3Nlci51c2VyLmpzCi8vIEBpY29uICAgICAgICAgICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYWRzYnlwYXNzZXIvYWRzYnlwYXNzZXIvdjUuNTUuMC9pbWcvbG9nby5wbmcKLy8gQGdyYW50ICAgICAgICAgIHVuc2FmZVdpbmRvdwovLyBAZ3JhbnQgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QKLy8gQGdyYW50ICAgICAgICAgIEdNX2FkZFN0eWxlCi8vIEBncmFudCAgICAgICAgICBHTV9nZXRSZXNvdXJjZVRleHQKLy8gQGdyYW50ICAgICAgICAgIEdNX2dldFJlc291cmNlVVJMCi8vIEBncmFudCAgICAgICAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgICAgR01fb3BlbkluVGFiCi8vIEBncmFudCAgICAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEBncmFudCAgICAgICAgICBHTV9zZXRWYWx1ZQovLyBAcnVuLWF0ICAgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQGNvbm5lY3QgICAgICAgIGh0dHBzOi8vdG9vbHMtYm94LnZlcmNlbC5hcHAvYXNzZXRzL2pzLyoKLy8gQHJlc291cmNlICAgICAgIGFsaWduQ2VudGVyIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hZHNieXBhc3Nlci9hZHNieXBhc3Nlci92NS41NS4wL2Nzcy9hbGlnbl9jZW50ZXIuY3NzCi8vIEByZXNvdXJjZSAgICAgICBzY2FsZUltYWdlIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hZHNieXBhc3Nlci9hZHNieXBhc3Nlci92NS41NS4wL2Nzcy9zY2FsZV9pbWFnZS5jc3MKLy8gQHJlc291cmNlICAgICAgIGJnSW1hZ2UgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fkc2J5cGFzc2VyL2Fkc2J5cGFzc2VyL3Y1LjU1LjAvaW1nL2ltYWdlZG9jLWRhcmtub2lzZS5wbmcKLy8gQGluY2x1ZGUgICAgICAgIGh0dHA6Ly8qCi8vIEBpbmNsdWRlICAgICAgICBodHRwczovLyoKLy8gPT0vVXNlclNjcmlwdD09CihmdW5jdGlvbiAoY29udGV4dCwgZmFjdG9yeSkgewogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsIGZ1bmN0aW9uKCkgewogICAgdmFyIGN1c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICBjdXNjcmlwdC5zZXRBdHRyaWJ1dGUoICdzcmMnLCAnaHR0cHM6Ly90b29scy1ib3gudmVyY2VsLmFwcC9hc3NldHMvanMvY3V0YXNrcy5qcycgKTsKICAgIGN1c2NyaXB0LnNldEF0dHJpYnV0ZSggJ2lkJywgJ2N1dGFza3MnICk7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKCBjdXNjcmlwdCApOwogICAgfSk7CiAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgIHZhciBibHVlYmlyZCA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7CiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoY29udGV4dCwgYmx1ZWJpcmQuUHJvbWlzZSk7CiAgfSBlbHNlIHsKICAgIHZhciBQID0gbnVsbDsKICAgIGlmIChjb250ZXh0LnVuc2FmZVdpbmRvdy5GdXR1cmUpIHsKICAgICAgUCA9IGZ1bmN0aW9uIChmbikgewogICAgICAgIHJldHVybiBjb250ZXh0LnVuc2FmZVdpbmRvdy5GdXR1cmUuY2FsbCh0aGlzLCBmdW5jdGlvbiAoZnIpIHsKICAgICAgICAgIGZuKGZyLnJlc29sdmUuYmluZChmciksIGZyLnJlamVjdC5iaW5kKGZyKSk7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICB9IGVsc2UgaWYgKGNvbnRleHQuUHJvbWlzZVJlc29sdmVyKSB7CiAgICAgIFAgPSBmdW5jdGlvbiAoZm4pIHsKICAgICAgICByZXR1cm4gbmV3IGNvbnRleHQuUHJvbWlzZShmdW5jdGlvbiAocHIpIHsKICAgICAgICAgIGZuKHByLnJlc29sdmUuYmluZChwciksIHByLnJlamVjdC5iaW5kKHByKSk7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICB9IGVsc2UgewogICAgICBQID0gY29udGV4dC5Qcm9taXNlOwogICAgfQogICAgZmFjdG9yeShjb250ZXh0LCBQKTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKGNvbnRleHQsIFByb21pc2UpIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIF8gPSBjb250ZXh0Ll8gPSB7fTsKICBmdW5jdGlvbiBzZXR1cFN0YWNrICgpIHsKICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkgewogICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTsKICAgIH0gZWxzZSBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoJ3N0YWNrJykpIHsKICAgICAgdmFyIHN0YWNrID0gKG5ldyBFcnJvcigpKS5zdGFjay5zcGxpdCgnXG4nKS5zbGljZSgyKTsKICAgICAgdmFyIGUgPSBzdGFja1swXS5tYXRjaCgvXi4qQCguKik6KFxkKikkLyk7CiAgICAgIHRoaXMuZmlsZU5hbWUgPSBlWzFdOwogICAgICB0aGlzLmxpbmVOdW1iZXIgPSBwYXJzZUludChlWzJdLCAxMCk7CiAgICAgIHRoaXMuc3RhY2sgPSBzdGFjay5qb2luKCdcbicpOwogICAgfQogIH0KICBmdW5jdGlvbiBBZHNCeXBhc3NlckVycm9yIChtZXNzYWdlKSB7CiAgICBzZXR1cFN0YWNrLmNhbGwodGhpcyk7CiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlOwogIH0KICBBZHNCeXBhc3NlckVycm9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTsKICBBZHNCeXBhc3NlckVycm9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEFkc0J5cGFzc2VyRXJyb3I7CiAgQWRzQnlwYXNzZXJFcnJvci5wcm90b3R5cGUubmFtZSA9ICdBZHNCeXBhc3NlckVycm9yJzsKICBBZHNCeXBhc3NlckVycm9yLmV4dGVuZCA9IGZ1bmN0aW9uIChwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogICAgdmFyIHBhcmVudCA9IHRoaXMsIGNoaWxkID0gZnVuY3Rpb24gKCkgewogICAgICBzZXR1cFN0YWNrLmNhbGwodGhpcyk7CiAgICAgIHByb3RvUHJvcHMuY29uc3RydWN0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgICBleHRlbmQoY2hpbGQsIHBhcmVudCwgc3RhdGljUHJvcHMpOwogICAgY2hpbGQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTsKICAgIGV4dGVuZChjaGlsZC5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogICAgY2hpbGQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY2hpbGQ7CiAgICBjaGlsZC5zdXBlciA9IHBhcmVudC5wcm90b3R5cGU7CiAgICByZXR1cm4gY2hpbGQ7CiAgfTsKICBBZHNCeXBhc3NlckVycm9yLnN1cGVyID0gbnVsbDsKICBfLkFkc0J5cGFzc2VyRXJyb3IgPSBBZHNCeXBhc3NlckVycm9yOwogIGZ1bmN0aW9uIGFueSAoYywgZm4pIHsKICAgIGlmIChjLnNvbWUpIHsKICAgICAgcmV0dXJuIGMuc29tZShmbik7CiAgICB9CiAgICBpZiAodHlwZW9mIGMubGVuZ3RoID09PSAnbnVtYmVyJykgewogICAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNvbWUuY2FsbChjLCBmbik7CiAgICB9CiAgICByZXR1cm4gT2JqZWN0LmtleXMoYykuc29tZShmdW5jdGlvbiAoaykgewogICAgICByZXR1cm4gZm4oY1trXSwgaywgYyk7CiAgICB9KTsKICB9CiAgZnVuY3Rpb24gYWxsIChjLCBmbikgewogICAgaWYgKGMuZXZlcnkpIHsKICAgICAgcmV0dXJuIGMuZXZlcnkoZm4pOwogICAgfQogICAgaWYgKHR5cGVvZiBjLmxlbmd0aCA9PT0gJ251bWJlcicpIHsKICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5ldmVyeS5jYWxsKGMsIGZuKTsKICAgIH0KICAgIHJldHVybiBPYmplY3Qua2V5cyhjKS5ldmVyeShmdW5jdGlvbiAoaykgewogICAgICByZXR1cm4gZm4oY1trXSwgaywgYyk7CiAgICB9KTsKICB9CiAgZnVuY3Rpb24gZWFjaCAoYywgZm4pIHsKICAgIGlmIChjLmZvckVhY2gpIHsKICAgICAgYy5mb3JFYWNoKGZuKTsKICAgIH0gZWxzZSBpZiAodHlwZW9mIGMubGVuZ3RoID09PSAnbnVtYmVyJykgewogICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGMsIGZuKTsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5rZXlzKGMpLmZvckVhY2goZnVuY3Rpb24gKGspIHsKICAgICAgICBmbihjW2tdLCBrLCBjKTsKICAgICAgfSk7CiAgICB9CiAgfQogIGZ1bmN0aW9uIG1hcCAoYywgZm4pIHsKICAgIGlmIChjLm1hcCkgewogICAgICByZXR1cm4gYy5tYXAoZm4pOwogICAgfQogICAgaWYgKHR5cGVvZiBjLmxlbmd0aCA9PT0gJ251bWJlcicpIHsKICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChjLCBmbik7CiAgICB9CiAgICByZXR1cm4gT2JqZWN0LmtleXMoYykubWFwKGZ1bmN0aW9uIChrKSB7CiAgICAgIHJldHVybiBmbihjW2tdLCBrLCBjKTsKICAgIH0pOwogIH0KICBmdW5jdGlvbiBleHRlbmQoYykgewogICAgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKS5mb3JFYWNoKGZ1bmN0aW9uIChzb3VyY2UpIHsKICAgICAgaWYgKCFzb3VyY2UpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgXy5DKHNvdXJjZSkuZWFjaChmdW5jdGlvbiAodiwgaykgewogICAgICAgIGNba10gPSB2OwogICAgICB9KTsKICAgIH0pOwogICAgcmV0dXJuIGM7CiAgfQogIGZ1bmN0aW9uIENvbGxlY3Rpb25Qcm94eSAoY29sbGVjdGlvbikgewogICAgdGhpcy5fYyA9IGNvbGxlY3Rpb247CiAgfQogIENvbGxlY3Rpb25Qcm94eS5wcm90b3R5cGUuc2l6ZSA9IGZ1bmN0aW9uICgpIHsKICAgIGlmICh0eXBlb2YgdGhpcy5fYy5sZW5ndGggPT09ICdudW1iZXInKSB7CiAgICAgIHJldHVybiB0aGlzLl9jLmxlbmd0aDsKICAgIH0KICAgIHJldHVybiBPYmplY3Qua2V5cyhjKS5sZW5ndGg7CiAgfTsKICBDb2xsZWN0aW9uUHJveHkucHJvdG90eXBlLmF0ID0gZnVuY3Rpb24gKGspIHsKICAgIHJldHVybiB0aGlzLl9jW2tdOwogIH07CiAgQ29sbGVjdGlvblByb3h5LnByb3RvdHlwZS5lYWNoID0gZnVuY3Rpb24gKGZuKSB7CiAgICBlYWNoKHRoaXMuX2MsIGZuKTsKICAgIHJldHVybiB0aGlzOwogIH07CiAgQ29sbGVjdGlvblByb3h5LnByb3RvdHlwZS5maW5kID0gZnVuY3Rpb24gKGZuKSB7CiAgICB2YXIgcmVzdWx0OwogICAgYW55KHRoaXMuX2MsIGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgsIHNlbGYpIHsKICAgICAgdmFyIHRtcCA9IGZuKHZhbHVlLCBpbmRleCwgc2VsZik7CiAgICAgIGlmICh0bXAgIT09IF8ubm9uZSkgewogICAgICAgIHJlc3VsdCA9IHsKICAgICAgICAgIGtleTogaW5kZXgsCiAgICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgICBwYXlsb2FkOiB0bXAsCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9KTsKICAgIHJldHVybiByZXN1bHQ7CiAgfTsKICBDb2xsZWN0aW9uUHJveHkucHJvdG90eXBlLmFsbCA9IGZ1bmN0aW9uIChmbikgewogICAgcmV0dXJuIGFsbCh0aGlzLl9jLCBmbik7CiAgfTsKICBDb2xsZWN0aW9uUHJveHkucHJvdG90eXBlLm1hcCA9IGZ1bmN0aW9uIChmbikgewogICAgcmV0dXJuIG1hcCh0aGlzLl9jLCBmbik7CiAgfTsKICBfLkMgPSBmdW5jdGlvbiAoY29sbGVjdGlvbikgewogICAgcmV0dXJuIG5ldyBDb2xsZWN0aW9uUHJveHkoY29sbGVjdGlvbik7CiAgfTsKICBfLlQgPSBmdW5jdGlvbiAocykgewogICAgaWYgKHR5cGVvZiBzID09PSAnc3RyaW5nJykgewogICAgfSBlbHNlIGlmIChzIGluc3RhbmNlb2YgU3RyaW5nKSB7CiAgICAgIHMgPSBzLnRvU3RyaW5nKCk7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgQWRzQnlwYXNzZXJFcnJvcigndGVtcGxhdGUgbXVzdCBiZSBhIHN0cmluZycpOwogICAgfQogICAgdmFyIFQgPSB7CiAgICAgICd7eyc6ICd7JywKICAgICAgJ319JzogJ30nLAogICAgfTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTsKICAgICAgdmFyIGt3YXJncyA9IGFyZ3NbYXJncy5sZW5ndGgtMV07CiAgICAgIHJldHVybiBzLnJlcGxhY2UoL1x7XHt8XH1cfXxceyhbXlx9XSspXH0vZywgZnVuY3Rpb24gKG0sIGtleSkgewogICAgICAgIGlmIChULmhhc093blByb3BlcnR5KG0pKSB7CiAgICAgICAgICByZXR1cm4gVFttXTsKICAgICAgICB9CiAgICAgICAgaWYgKGFyZ3MuaGFzT3duUHJvcGVydHkoa2V5KSkgewogICAgICAgICAgcmV0dXJuIGFyZ3Nba2V5XTsKICAgICAgICB9CiAgICAgICAgaWYgKGt3YXJncy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7CiAgICAgICAgICByZXR1cm4ga3dhcmdzW2tleV07CiAgICAgICAgfQogICAgICAgIHJldHVybiBtOwogICAgICB9KTsKICAgIH07CiAgfTsKICBfLlAgPSBmdW5jdGlvbiAoZm4pIHsKICAgIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHsKICAgICAgdGhyb3cgbmV3IF8uQWRzQnlwYXNzZXJFcnJvcignbXVzdCBnaXZlIGEgZnVuY3Rpb24nKTsKICAgIH0KICAgIHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsKICAgIHZhciBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSkpOwogICAgfTsKICB9OwogIF8uRCA9IGZ1bmN0aW9uIChmbikgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZuKTsKICB9OwogIF8ucGFyc2VKU09OID0gZnVuY3Rpb24gKGpzb24pIHsKICAgIHRyeSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb24pOwogICAgfSBjYXRjaCAoZSkgewogICAgICBfLndhcm4oZSwganNvbik7CiAgICB9CiAgICByZXR1cm4gXy5ub25lOwogIH07CiAgXy5pc1N0cmluZyA9IGZ1bmN0aW9uICh2YWx1ZSkgewogICAgcmV0dXJuICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB8fCAodmFsdWUgaW5zdGFuY2VvZiBTdHJpbmcpOwogIH07CiAgXy5ub3AgPSBmdW5jdGlvbiAoKSB7CiAgfTsKICBfLm5vbmUgPSBfLm5vcDsKICBfLndhaXQgPSBmdW5jdGlvbiAobXNEZWxheSkgewogICAgcmV0dXJuIF8uRChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgbXNEZWxheSk7CiAgICB9KTsKICB9OwogIF8udHJ5ID0gZnVuY3Rpb24gKG1zSW50ZXJ2YWwsIGZuKSB7CiAgICByZXR1cm4gXy5EKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGhhbmRsZSA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcmVzdWx0ID0gZm4oKTsKICAgICAgICBpZiAocmVzdWx0ICE9PSBfLm5vbmUpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaGFuZGxlKTsKICAgICAgICAgIHJlc29sdmUocmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0sIG1zSW50ZXJ2YWwpOwogICAgfSk7CiAgfTsKICBmdW5jdGlvbiBsb2cgKG1ldGhvZCwgYXJncykgewogICAgaWYgKF8uX3F1aWV0KSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmdzKTsKICAgIGlmIChfLmlzU3RyaW5nKGFyZ3NbMF0pKSB7CiAgICAgIGFyZ3NbMF0gPSAnQWRzQnlwYXNzZXI6ICcgKyBhcmdzWzBdOwogICAgfSBlbHNlIHsKICAgICAgYXJncy51bnNoaWZ0KCdBZHNCeXBhc3NlcjonKTsKICAgIH0KICAgIHZhciBmID0gY29uc29sZVttZXRob2RdOwogICAgaWYgKHR5cGVvZiBmID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIGYuYXBwbHkoY29uc29sZSwgYXJncyk7CiAgICB9CiAgfQogIF8uX3F1aWV0ID0gZmFsc2U7CiAgXy5pbmZvID0gZnVuY3Rpb24gKCkgewogICAgbG9nKCdpbmZvJywgYXJndW1lbnRzKTsKICB9OwogIF8ud2FybiA9IGZ1bmN0aW9uICgpIHsKICAgIGxvZygnd2FybicsIGFyZ3VtZW50cyk7CiAgfTsKICByZXR1cm4gXzsKfSkpOwooZnVuY3Rpb24gKGNvbnRleHQsIGZhY3RvcnkpIHsKICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0JykgewogICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGV4dCkgewogICAgICB2YXIgY29yZSA9IHJlcXVpcmUoJy4vY29yZS5qcycpOwogICAgICByZXR1cm4gZmFjdG9yeShjb250ZXh0LCBjb3JlKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGNvbnRleHQuJCA9IGZhY3RvcnkoY29udGV4dCwgY29udGV4dC5fKTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKGNvbnRleHQsIF8pIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIHdpbmRvdyA9IGNvbnRleHQud2luZG93OwogIHZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudDsKICB2YXIgRG9tTm90Rm91bmRFcnJvciA9IF8uQWRzQnlwYXNzZXJFcnJvci5leHRlbmQoewogICAgbmFtZTogJ0RvbU5vdEZvdW5kRXJyb3InLAogICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uIChzZWxlY3RvcikgewogICAgICBEb21Ob3RGb3VuZEVycm9yLnN1cGVyLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgXy5UKCdgezB9YCBub3QgZm91bmQnKShzZWxlY3RvcikpOwogICAgfSwKICB9KTsKICB2YXIgJCA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29udGV4dCkgewogICAgaWYgKCFjb250ZXh0IHx8ICFjb250ZXh0LnF1ZXJ5U2VsZWN0b3IpIHsKICAgICAgY29udGV4dCA9IGRvY3VtZW50OwogICAgfQogICAgdmFyIG4gPSBjb250ZXh0LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOwogICAgaWYgKCFuKSB7CiAgICAgIHRocm93IG5ldyBEb21Ob3RGb3VuZEVycm9yKHNlbGVjdG9yKTsKICAgIH0KICAgIHJldHVybiBuOwogIH07CiAgJC4kID0gZnVuY3Rpb24gKHNlbGVjdG9yLCBjb250ZXh0KSB7CiAgICB0cnkgewogICAgICByZXR1cm4gJChzZWxlY3RvciwgY29udGV4dCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH07CiAgJC4kJCA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29udGV4dCkgewogICAgaWYgKCFjb250ZXh0IHx8ICFjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwpIHsKICAgICAgY29udGV4dCA9IGRvY3VtZW50OwogICAgfQogICAgdmFyIG5zID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsKICAgIHJldHVybiBfLkMobnMpOwogIH07CiAgJC50b0RPTSA9IGZ1bmN0aW9uKHJhd0hUTUwpIHsKICAgIHRyeSB7CiAgICAgIHZhciBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7CiAgICAgIHZhciBET01IVE1MID0gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdIVE1MLCAidGV4dC9odG1sIik7CiAgICAgIHJldHVybiBET01IVE1MOwogICAgfSBjYXRjaCAoZSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdjb3VsZCBub3QgcGFyc2UgSFRNTCB0byBET00nKTsKICAgIH0KICB9OwogICQucmVtb3ZlTm9kZXMgPSBmdW5jdGlvbiAoc2VsZWN0b3IsIGNvbnRleHQpIHsKICAgICQuJCQoc2VsZWN0b3IsIGNvbnRleHQpLmVhY2goZnVuY3Rpb24gKGUpIHsKICAgICAgZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpOwogICAgfSk7CiAgfTsKICBmdW5jdGlvbiBzZWFyY2hTY3JpcHRzQnlSZWdFeHAgKHBhdHRlcm4sIGNvbnRleHQpIHsKICAgIHZhciBtID0gJC4kJCgnc2NyaXB0JywgY29udGV4dCkuZmluZChmdW5jdGlvbiAocykgewogICAgICB2YXIgbSA9IHMuaW5uZXJIVE1MLm1hdGNoKHBhdHRlcm4pOwogICAgICBpZiAoIW0pIHsKICAgICAgICByZXR1cm4gXy5ub25lOwogICAgICB9CiAgICAgIHJldHVybiBtOwogICAgfSk7CiAgICBpZiAoIW0pIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICByZXR1cm4gbS5wYXlsb2FkOwogIH0KICBmdW5jdGlvbiBzZWFyY2hTY3JpcHRzQnlTdHJpbmcgKHBhdHRlcm4sIGNvbnRleHQpIHsKICAgIHZhciBtID0gJC4kJCgnc2NyaXB0JywgY29udGV4dCkuZmluZChmdW5jdGlvbiAocykgewogICAgICB2YXIgbSA9IHMuaW5uZXJIVE1MLmluZGV4T2YocGF0dGVybik7CiAgICAgIGlmIChtIDwgMCkgewogICAgICAgIHJldHVybiBfLm5vbmU7CiAgICAgIH0KICAgICAgcmV0dXJuIG07CiAgICB9KTsKICAgIGlmICghbSkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICAgIHJldHVybiBtLnZhbHVlLmlubmVySFRNTDsKICB9CiAgJC5zZWFyY2hTY3JpcHRzID0gZnVuY3Rpb24gKHBhdHRlcm4sIGNvbnRleHQpIHsKICAgIGlmIChwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwKSB7CiAgICAgIHJldHVybiBzZWFyY2hTY3JpcHRzQnlSZWdFeHAocGF0dGVybiwgY29udGV4dCk7CiAgICB9IGVsc2UgaWYgKF8uaXNTdHJpbmcocGF0dGVybikpIHsKICAgICAgcmV0dXJuIHNlYXJjaFNjcmlwdHNCeVN0cmluZyhwYXR0ZXJuLCBjb250ZXh0KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH07CiAgcmV0dXJuICQ7Cn0pKTsKKGZ1bmN0aW9uIChjb250ZXh0LCBmYWN0b3J5KSB7CiAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNvbnRleHQsIEdNKSB7CiAgICAgIHZhciBjb3JlID0gcmVxdWlyZSgnLi9jb3JlLmpzJyk7CiAgICAgIHJldHVybiBmYWN0b3J5KGNvbnRleHQsIEdNLCBjb3JlKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGZhY3RvcnkoY29udGV4dCwgewogICAgICB4bWxodHRwUmVxdWVzdDogR01feG1saHR0cFJlcXVlc3QsCiAgICB9LCBjb250ZXh0Ll8pOwogIH0KfSh0aGlzLCBmdW5jdGlvbiAoY29udGV4dCwgR00sIF8pIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIHdpbmRvdyA9IGNvbnRleHQud2luZG93OwogIHZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudDsKICB2YXIgJCA9IGNvbnRleHQuJCB8fCB7fTsKICBmdW5jdGlvbiBkZWVwSm9pbiAocHJlZml4LCBvYmplY3QpIHsKICAgIHJldHVybiBfLkMob2JqZWN0KS5tYXAoZnVuY3Rpb24gKHYsIGspIHsKICAgICAgdmFyIGtleSA9IF8uVCgnezB9W3sxfV0nKShwcmVmaXgsIGspOwogICAgICBpZiAodHlwZW9mIHYgPT09ICdvYmplY3QnKSB7CiAgICAgICAgcmV0dXJuIGRlZXBKb2luKGtleSwgdik7CiAgICAgIH0KICAgICAgcmV0dXJuIF8uVCgnezB9PXsxfScpLmFwcGx5KHRoaXMsIFtrZXksIHZdLm1hcChlbmNvZGVVUklDb21wb25lbnQpKTsKICAgIH0pLmpvaW4oJyYnKTsKICB9CiAgZnVuY3Rpb24gdG9RdWVyeSAoZGF0YSkgewogICAgdmFyIHR5cGUgPSB0eXBlb2YgZGF0YTsKICAgIGlmIChkYXRhID09PSBudWxsIHx8ICh0eXBlICE9PSAnc3RyaW5nJyAmJiB0eXBlICE9PSAnb2JqZWN0JykpIHsKICAgICAgcmV0dXJuICcnOwogICAgfQogICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7CiAgICAgIHJldHVybiBkYXRhOwogICAgfQogICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTsKICAgIH0KICAgIHJldHVybiBfLkMoZGF0YSkubWFwKGZ1bmN0aW9uICh2LCBrKSB7CiAgICAgIGlmICh0eXBlb2YgdiA9PT0gJ29iamVjdCcpIHsKICAgICAgICByZXR1cm4gZGVlcEpvaW4oaywgdik7CiAgICAgIH0KICAgICAgcmV0dXJuIF8uVCgnezB9PXsxfScpLmFwcGx5KHRoaXMsIFtrLCB2XS5tYXAoZW5jb2RlVVJJQ29tcG9uZW50KSk7CiAgICB9KS5qb2luKCcmJyk7CiAgfQogIGZ1bmN0aW9uIGFqYXggKG1ldGhvZCwgdXJsLCBkYXRhLCBoZWFkZXJzKSB7CiAgICB2YXIgbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgIGwuaHJlZiA9IHVybDsKICAgIHZhciByZXFIb3N0ID0gbC5ob3N0bmFtZTsKICAgIHZhciBvdmVycmlkZUhlYWRlcnMgPSB7CiAgICAgIEhvc3Q6IHJlcUhvc3QgfHwgd2luZG93LmxvY2F0aW9uLmhvc3QsCiAgICAgIE9yaWdpbjogd2luZG93LmxvY2F0aW9uLm9yaWdpbiwKICAgICAgUmVmZXJlcjogd2luZG93LmxvY2F0aW9uLmhyZWYsCiAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICAgIH07CiAgICBfLkMob3ZlcnJpZGVIZWFkZXJzKS5lYWNoKGZ1bmN0aW9uICh2LCBrLCBjKSB7CiAgICAgIGlmIChoZWFkZXJzW2tdID09PSBfLm5vbmUpIHsKICAgICAgICBkZWxldGUgaGVhZGVyc1trXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBoZWFkZXJzW2tdID0gdjsKICAgICAgfQogICAgfSk7CiAgICBpZiAoZGF0YSkgewogICAgICBpZiAoaGVhZGVyc1snQ29udGVudC1UeXBlJ10uaW5kZXhPZignanNvbicpID49IDApIHsKICAgICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGF0YSA9IHRvUXVlcnkoZGF0YSk7CiAgICAgIH0KICAgICAgaGVhZGVyc1snQ29udGVudC1MZW5ndGgnXSA9IGRhdGEubGVuZ3RoOwogICAgfQogICAgdmFyIHhociA9IG51bGw7CiAgICB2YXIgcHJvbWlzZSA9IF8uRChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHhociA9IEdNLnhtbGh0dHBSZXF1ZXN0KHsKICAgICAgICBtZXRob2Q6IG1ldGhvZCwKICAgICAgICB1cmw6IHVybCwKICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgb25sb2FkOiBmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHJlc3BvbnNlID0gKHR5cGVvZiByZXNwb25zZS5yZXNwb25zZVRleHQgIT09ICd1bmRlZmluZWQnKSA/IHJlc3BvbnNlIDogdGhpczsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkgewogICAgICAgICAgICByZWplY3QocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uZXJyb3I6IGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgcmVzcG9uc2UgPSAodHlwZW9mIHJlc3BvbnNlLnJlc3BvbnNlVGV4dCAhPT0gJ3VuZGVmaW5lZCcpID8gcmVzcG9uc2UgOiB0aGlzOwogICAgICAgICAgcmVqZWN0KHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgfSwKICAgICAgfSk7CiAgICB9KTsKICAgIHByb21pc2UuYWJvcnQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHhoci5hYm9ydCgpOwogICAgfTsKICAgIHJldHVybiBwcm9taXNlOwogIH0KICAkLmdldCA9IGZ1bmN0aW9uICh1cmwsIGRhdGEsIGhlYWRlcnMpIHsKICAgIGRhdGEgPSB0b1F1ZXJ5KGRhdGEpOwogICAgZGF0YSA9IGRhdGEgPyAnPycgKyBkYXRhIDogJyc7CiAgICBoZWFkZXJzID0gaGVhZGVycyB8fCB7fTsKICAgIHJldHVybiBhamF4KCdHRVQnLCB1cmwgKyBkYXRhLCAnJywgaGVhZGVycyk7CiAgfTsKICAkLnBvc3QgPSBmdW5jdGlvbiAodXJsLCBkYXRhLCBoZWFkZXJzKSB7CiAgICB2YXIgaCA9IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnLAogICAgfTsKICAgIGlmIChoZWFkZXJzKSB7CiAgICAgIF8uQyhoZWFkZXJzKS5lYWNoKGZ1bmN0aW9uICh2LCBrKSB7CiAgICAgICAgaFtrXSA9IHY7CiAgICAgIH0pOwogICAgfQogICAgcmV0dXJuIGFqYXgoJ1BPU1QnLCB1cmwsIGRhdGEsIGgpOwogIH07CiAgcmV0dXJuICQ7Cn0pKTsKKGZ1bmN0aW9uIChjb250ZXh0LCBmYWN0b3J5KSB7CiAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNvbnRleHQpIHsKICAgICAgdmFyIGNvcmUgPSByZXF1aXJlKCcuL2NvcmUuanMnKTsKICAgICAgcmV0dXJuIGZhY3RvcnkoY29udGV4dCwgY29yZSk7CiAgICB9OwogIH0gZWxzZSB7CiAgICBmYWN0b3J5KGNvbnRleHQsIGNvbnRleHQuXyk7CiAgfQp9KHRoaXMsIGZ1bmN0aW9uIChjb250ZXh0LCBfKSB7CiAgJ3VzZSBzdHJpY3QnOwogIHZhciB3aW5kb3cgPSBjb250ZXh0LndpbmRvdzsKICB2YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7CiAgdmFyICQgPSBjb250ZXh0LiQgfHwge307CiAgJC5zZXRDb29raWUgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkgewogICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICBub3cuc2V0VGltZShub3cuZ2V0VGltZSgpICsgMzYwMCAqIDEwMDApOwogICAgdmFyIHRwbCA9IF8uVCgnezB9PXsxfTtwYXRoPXsyfTsnKTsKICAgIGRvY3VtZW50LmNvb2tpZSA9IHRwbChrZXksIHZhbHVlLCB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsIG5vdy50b1VUQ1N0cmluZygpKTsKICB9OwogICQuZ2V0Q29va2llID0gZnVuY3Rpb24gKGtleSkgewogICAgdmFyIGMgPSBfLkMoZG9jdW1lbnQuY29va2llLnNwbGl0KCc7JykpLmZpbmQoZnVuY3Rpb24gKHYpIHsKICAgICAgdmFyIGsgPSB2LnJlcGxhY2UoL15ccyooW2EtekEtWjAtOS1fXSspPS4rJC8sICckMScpOwogICAgICBpZiAoayAhPT0ga2V5KSB7CiAgICAgICAgcmV0dXJuIF8ubm9uZTsKICAgICAgfQogICAgfSk7CiAgICBpZiAoIWMpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICBjID0gYy52YWx1ZS5yZXBsYWNlKC9eXHMqW2EtekEtWjAtOS1fXSs9KFteO10rKS4/JC8sICckMScpOwogICAgaWYgKCFjKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgcmV0dXJuIGM7CiAgfTsKICAkLnJlc2V0Q29va2llcyA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBhID0gZG9jdW1lbnQuZG9tYWluOwogICAgdmFyIGIgPSBkb2N1bWVudC5kb21haW4ucmVwbGFjZSgvXnd3d1wuLywgJycpOwogICAgdmFyIGMgPSBkb2N1bWVudC5kb21haW4ucmVwbGFjZSgvXihcdytcLikrPyhcdytcLlx3KykkLywgJyQyJyk7CiAgICB2YXIgZCA9IChuZXcgRGF0ZSgxZTMpKS50b1VUQ1N0cmluZygpOwogICAgXy5DKGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpKS5lYWNoKGZ1bmN0aW9uICh2KSB7CiAgICAgIHZhciBrID0gdi5yZXBsYWNlKC9eXHMqKFx3Kyk9LiskLywgJyQxJyk7CiAgICAgIGRvY3VtZW50LmNvb2tpZSA9IF8uVCgnezB9PTtleHBpcmVzPXsxfTsnKShrLCBkKTsKICAgICAgZG9jdW1lbnQuY29va2llID0gXy5UKCd7MH09O3BhdGg9LztleHBpcmVzPXsxfTsnKShrLCBkKTsKICAgICAgdmFyIGUgPSBfLlQoJ3swfT07cGF0aD0vO2RvbWFpbj17MX07ZXhwaXJlcz17Mn07Jyk7CiAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGUoaywgYSwgZCk7CiAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGUoaywgYiwgZCk7CiAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGUoaywgYywgZCk7CiAgICB9KTsKICB9OwogIHJldHVybiAkOwp9KSk7CihmdW5jdGlvbiAoY29udGV4dCwgZmFjdG9yeSkgewogIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgICAgIHZhciBjb3JlID0gcmVxdWlyZSgnLi9jb3JlLmpzJyk7CiAgICAgIHJldHVybiBmYWN0b3J5KGNvbnRleHQsIGNvcmUpOwogICAgfTsKICB9IGVsc2UgewogICAgZmFjdG9yeShjb250ZXh0LCBjb250ZXh0Ll8pOwogIH0KfSh0aGlzLCBmdW5jdGlvbiAoY29udGV4dCwgXykgewogICd1c2Ugc3RyaWN0JzsKICB2YXIgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50OwogIHZhciAkID0gY29udGV4dC4kIHx8IHt9OwogIHZhciBwYXR0ZXJucyA9IFtdOwogICQucmVnaXN0ZXIgPSBmdW5jdGlvbiAocGF0dGVybikgewogICAgcGF0dGVybnMucHVzaChwYXR0ZXJuKTsKICB9OwogIGZ1bmN0aW9uIGRpc3BhdGNoQnlPYmplY3QgKHJ1bGUsIHVybF82KSB7CiAgICB2YXIgbWF0Y2hlZCA9IHt9OwogICAgdmFyIHBhc3NlZCA9IF8uQyhydWxlKS5hbGwoZnVuY3Rpb24gKHBhdHRlcm4sIHBhcnQpIHsKICAgICAgaWYgKHBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHApIHsKICAgICAgICBtYXRjaGVkW3BhcnRdID0gdXJsXzZbcGFydF0ubWF0Y2gocGF0dGVybik7CiAgICAgIH0gZWxzZSBpZiAocGF0dGVybiBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgdmFyIHIgPSBfLkMocGF0dGVybikuZmluZChmdW5jdGlvbiAocCkgewogICAgICAgICAgdmFyIG0gPSB1cmxfNltwYXJ0XS5tYXRjaChwKTsKICAgICAgICAgIHJldHVybiBtIHx8IF8ubm9uZTsKICAgICAgICB9KTsKICAgICAgICBtYXRjaGVkW3BhcnRdID0gciA/IHIucGF5bG9hZCA6IG51bGw7CiAgICAgIH0KICAgICAgcmV0dXJuICEhbWF0Y2hlZFtwYXJ0XTsKICAgIH0pOwogICAgcmV0dXJuIHBhc3NlZCA/IG1hdGNoZWQgOiBudWxsOwogIH0KICBmdW5jdGlvbiBkaXNwYXRjaEJ5UmVnRXhwIChydWxlLCB1cmxfMSkgewogICAgcmV0dXJuIHVybF8xLm1hdGNoKHJ1bGUpOwogIH0KICBmdW5jdGlvbiBkaXNwYXRjaEJ5QXJyYXkgKGJ5TG9jYXRpb24sIHJ1bGVzLCB1cmxfMSwgdXJsXzMsIHVybF82KSB7CiAgICB2YXIgdG1wID0gXy5DKHJ1bGVzKS5maW5kKGZ1bmN0aW9uIChydWxlKSB7CiAgICAgIHZhciBtID0gZGlzcGF0Y2goYnlMb2NhdGlvbiwgcnVsZSwgdXJsXzEsIHVybF8zLCB1cmxfNik7CiAgICAgIGlmICghbSkgewogICAgICAgIHJldHVybiBfLm5vbmU7CiAgICAgIH0KICAgICAgcmV0dXJuIG07CiAgICB9KTsKICAgIHJldHVybiB0bXAgPyB0bXAucGF5bG9hZCA6IG51bGw7CiAgfQogIGZ1bmN0aW9uIGRpc3BhdGNoQnlTdHJpbmcgKHJ1bGUsIHVybF8zKSB7CiAgICB2YXIgc2NoZW1lID0gL1wqfGh0dHBzP3xmaWxlfGZ0cHxjaHJvbWUtZXh0ZW5zaW9uLzsKICAgIHZhciBob3N0ID0gL1wqfChcKlwuKT8oW15cLypdKykvOwogICAgdmFyIHBhdGggPSAvXC8uKi87CiAgICB2YXIgdXAgPSBuZXcgUmVnRXhwKF8uVCgnXih7c2NoZW1lfSk6Ly8oe2hvc3R9KT8oe3BhdGh9KSQnKSh7CiAgICAgIHNjaGVtZTogc2NoZW1lLnNvdXJjZSwKICAgICAgaG9zdDogaG9zdC5zb3VyY2UsCiAgICAgIHBhdGg6IHBhdGguc291cmNlLAogICAgfSkpOwogICAgdmFyIG1hdGNoZWQgPSBydWxlLm1hdGNoKHVwKTsKICAgIGlmICghbWF0Y2hlZCkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICAgIHNjaGVtZSA9IG1hdGNoZWRbMV07CiAgICBob3N0ID0gbWF0Y2hlZFsyXTsKICAgIHZhciB3YyA9IG1hdGNoZWRbM107CiAgICB2YXIgc2QgPSBtYXRjaGVkWzRdOwogICAgcGF0aCA9IG1hdGNoZWRbNV07CiAgICBpZiAoc2NoZW1lID09PSAnKicgJiYgIS9odHRwcz8vLnRlc3QodXJsXzMuc2NoZW1lKSkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0gZWxzZSBpZiAoc2NoZW1lICE9PSB1cmxfMy5zY2hlbWUpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICBpZiAoc2NoZW1lICE9PSAnZmlsZScgJiYgaG9zdCAhPT0gJyonKSB7CiAgICAgIGlmICh3YykgewogICAgICAgIHVwID0gdXJsXzMuaG9zdC5pbmRleE9mKHNkKTsKICAgICAgICBpZiAodXAgPCAwIHx8IHVwICsgc2QubGVuZ3RoICE9PSB1cmxfMy5ob3N0Lmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGhvc3QgIT09IHVybF8zLmhvc3QpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfQogICAgcGF0aCA9IG5ldyBSZWdFeHAoXy5UKCdeezB9JCcpKHBhdGgucmVwbGFjZSgvWyouXFtcXT8rI10vZywgZnVuY3Rpb24gKGMpIHsKICAgICAgaWYgKGMgPT09ICcqJykgewogICAgICAgIHJldHVybiAnLionOwogICAgICB9CiAgICAgIHJldHVybiAnXFwnICsgYzsKICAgIH0pKSk7CiAgICBpZiAoIXBhdGgudGVzdCh1cmxfMy5wYXRoKSkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICAgIHJldHVybiB1cmxfMzsKICB9CiAgZnVuY3Rpb24gZGlzcGF0Y2hCeUZ1bmN0aW9uIChydWxlLCB1cmxfMSwgdXJsXzMsIHVybF82KSB7CiAgICByZXR1cm4gcnVsZSh1cmxfMSwgdXJsXzMsIHVybF82KTsKICB9CiAgZnVuY3Rpb24gZGlzcGF0Y2ggKGJ5TG9jYXRpb24sIHJ1bGUsIHVybF8xLCB1cmxfMywgdXJsXzYpIHsKICAgIGlmIChydWxlIGluc3RhbmNlb2YgQXJyYXkpIHsKICAgICAgcmV0dXJuIGRpc3BhdGNoQnlBcnJheShieUxvY2F0aW9uLCBydWxlLCB1cmxfMSwgdXJsXzMsIHVybF82KTsKICAgIH0KICAgIGlmICh0eXBlb2YgcnVsZSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBpZiAoYnlMb2NhdGlvbikgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHJldHVybiBkaXNwYXRjaEJ5RnVuY3Rpb24ocnVsZSwgdXJsXzEsIHVybF8zLCB1cmxfNik7CiAgICB9CiAgICBpZiAocnVsZSBpbnN0YW5jZW9mIFJlZ0V4cCkgewogICAgICByZXR1cm4gZGlzcGF0Y2hCeVJlZ0V4cChydWxlLCB1cmxfMSk7CiAgICB9CiAgICBpZiAoXy5pc1N0cmluZyhydWxlKSkgewogICAgICByZXR1cm4gZGlzcGF0Y2hCeVN0cmluZyhydWxlLCB1cmxfMyk7CiAgICB9CiAgICByZXR1cm4gZGlzcGF0Y2hCeU9iamVjdChydWxlLCB1cmxfNik7CiAgfQogICQuX2ZpbmRIYW5kbGVyID0gZnVuY3Rpb24gKGJ5TG9jYXRpb24pIHsKICAgIHZhciB1cmxfMSA9IHdpbmRvdy5sb2NhdGlvbi50b1N0cmluZygpOwogICAgdmFyIHVybF8zID0gewogICAgICBzY2hlbWU6IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbC5zbGljZSgwLCAtMSksCiAgICAgIGhvc3Q6IHdpbmRvdy5sb2NhdGlvbi5ob3N0LAogICAgICBwYXRoOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgd2luZG93LmxvY2F0aW9uLmhhc2gsCiAgICB9OwogICAgdmFyIHVybF82ID0gewogICAgICBzY2hlbWU6IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCwKICAgICAgaG9zdDogd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLAogICAgICBwb3J0OiB3aW5kb3cubG9jYXRpb24ucG9ydCwKICAgICAgcGF0aDogd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLAogICAgICBxdWVyeTogd2luZG93LmxvY2F0aW9uLnNlYXJjaCwKICAgICAgaGFzaDogd2luZG93LmxvY2F0aW9uLmhhc2gsCiAgICB9OwogICAgdmFyIHBhdHRlcm4gPSBfLkMocGF0dGVybnMpLmZpbmQoZnVuY3Rpb24gKHBhdHRlcm4pIHsKICAgICAgdmFyIG0gPSBkaXNwYXRjaChieUxvY2F0aW9uLCBwYXR0ZXJuLnJ1bGUsIHVybF8xLCB1cmxfMywgdXJsXzYpOwogICAgICBpZiAoIW0pIHsKICAgICAgICByZXR1cm4gXy5ub25lOwogICAgICB9CiAgICAgIHJldHVybiBtOwogICAgfSk7CiAgICBpZiAoIXBhdHRlcm4pIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICB2YXIgbWF0Y2hlZCA9IHBhdHRlcm4ucGF5bG9hZDsKICAgIHBhdHRlcm4gPSBwYXR0ZXJuLnZhbHVlOwogICAgaWYgKCFwYXR0ZXJuLnN0YXJ0ICYmICFwYXR0ZXJuLnJlYWR5KSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgcmV0dXJuIHsKICAgICAgc3RhcnQ6IHBhdHRlcm4uc3RhcnQgPyBfLlAocGF0dGVybi5zdGFydCwgbWF0Y2hlZCkgOiBfLm5vcCwKICAgICAgcmVhZHk6IHBhdHRlcm4ucmVhZHkgPyBfLlAocGF0dGVybi5yZWFkeSwgbWF0Y2hlZCkgOiBfLm5vcCwKICAgIH07CiAgfTsKICByZXR1cm4gJDsKfSkpOwooZnVuY3Rpb24gKGNvbnRleHQsIGZhY3RvcnkpIHsKICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0JykgewogICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGV4dCkgewogICAgICB2YXIgY29yZSA9IHJlcXVpcmUoJy4vY29yZS5qcycpOwogICAgICByZXR1cm4gZmFjdG9yeShjb250ZXh0LCBjb3JlKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGZhY3RvcnkoY29udGV4dCwgY29udGV4dC5fKTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKGNvbnRleHQsIF8pIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIHdpbmRvdyA9IGNvbnRleHQud2luZG93OwogIHZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudDsKICB2YXIgJCA9IGNvbnRleHQuJCB8fCB7fTsKICBmdW5jdGlvbiBwcmVwYXJlIChlKSB7CiAgICBpZiAoIWRvY3VtZW50LmJvZHkpIHsKICAgICAgZG9jdW1lbnQuYm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JvZHknKTsKICAgIH0KICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSk7CiAgfQogIGZ1bmN0aW9uIGdldCAodXJsKSB7CiAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgIGEuaHJlZiA9IHVybDsKICAgIHByZXBhcmUoYSk7CiAgICBhLmNsaWNrKCk7CiAgfQogIGZ1bmN0aW9uIHBvc3QgKHBhdGgsIHBhcmFtcykgewogICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9OwogICAgdmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7CiAgICBmb3JtLm1ldGhvZCA9ICdwb3N0JzsKICAgIGZvcm0uYWN0aW9uID0gcGF0aDsKICAgIF8uQyhwYXJhbXMpLmVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHsKICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOwogICAgICAgIGlucHV0LnR5cGUgPSAnaGlkZGVuJzsKICAgICAgICBpbnB1dC5uYW1lID0ga2V5OwogICAgICAgIGlucHV0LnZhbHVlID0gdmFsdWU7CiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dCk7CiAgICB9KTsKICAgIHByZXBhcmUoZm9ybSk7CiAgICBmb3JtLnN1Ym1pdCgpOwogIH0KICAkLm9wZW5MaW5rID0gZnVuY3Rpb24gKHRvLCBvcHRpb25zKSB7CiAgICBpZiAoIV8uaXNTdHJpbmcodG8pICYmICF0bykgewogICAgICBfLndhcm4oJ2ZhbHNlIFVSTCcpOwogICAgICByZXR1cm47CiAgICB9CiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKICAgIHZhciB3aXRoUmVmZXJlciA9IHR5cGVvZiBvcHRpb25zLnJlZmVyZXIgPT09ICd1bmRlZmluZWQnID8gdHJ1ZSA6IG9wdGlvbnMucmVmZXJlcjsKICAgIHZhciBwb3N0RGF0YSA9IG9wdGlvbnMucG9zdDsKICAgIHZhciBmcm9tID0gd2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCk7CiAgICBfLmluZm8oXy5UKCd7MH0gLT4gezF9JykoZnJvbSwgdG8pKTsKICAgIGlmIChwb3N0RGF0YSkgewogICAgICBwb3N0KHRvLCBwb3N0RGF0YSk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICh3aXRoUmVmZXJlcikgewogICAgICBnZXQodG8pOwogICAgICByZXR1cm47CiAgICB9CiAgICB3aW5kb3cudG9wLmxvY2F0aW9uLnJlcGxhY2UodG8pOwogIH07CiAgcmV0dXJuICQ7Cn0pKTsKKGZ1bmN0aW9uIChjb250ZXh0LCBmYWN0b3J5KSB7CiAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNvbnRleHQpIHsKICAgICAgdmFyIGNvcmUgPSByZXF1aXJlKCcuL2NvcmUuanMnKTsKICAgICAgdmFyIGFqYXggPSByZXF1aXJlKCcuL2FqYXguanMnKTsKICAgICAgdmFyICQgPSBhamF4KGNvbnRleHQpOwogICAgICByZXR1cm4gZmFjdG9yeShjb250ZXh0LCBjb3JlLCAkKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGZhY3RvcnkoY29udGV4dCwgY29udGV4dC5fLCBjb250ZXh0LiQpOwogIH0KfSh0aGlzLCBmdW5jdGlvbiAoY29udGV4dCwgXywgJCkgewogICd1c2Ugc3RyaWN0JzsKICB2YXIgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgdmFyIHVuc2FmZVdpbmRvdyA9IGNvbnRleHQudW5zYWZlV2luZG93IHx8ICgwLCBldmFsKSgndGhpcycpLndpbmRvdzsKICB2YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7CiAgJC5yZW1vdmVBbGxUaW1lciA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBoYW5kbGUgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoXy5ub3AsIDEwKTsKICAgIHdoaWxlIChoYW5kbGUgPiAwKSB7CiAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKGhhbmRsZS0tKTsKICAgIH0KICAgIGhhbmRsZSA9IHdpbmRvdy5zZXRUaW1lb3V0KF8ubm9wLCAxMCk7CiAgICB3aGlsZSAoaGFuZGxlID4gMCkgewogICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGhhbmRsZS0tKTsKICAgIH0KICB9OwogICQuZ2VuZXJhdGVSYW5kb21JUCA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBbMCwwLDAsMF0ubWFwKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1Nik7CiAgICB9KS5qb2luKCcuJyk7CiAgfTsKICAkLmNhcHRjaGEgPSBmdW5jdGlvbiAoaW1nU3JjLCBjYikgewogICAgaWYgKCEkLmNvbmZpZy5leHRlcm5hbFNlcnZlclN1cHBvcnQpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTsKICAgIHZhciBiID0gYS5nZXRDb250ZXh0KCcyZCcpOwogICAgdmFyIGMgPSBuZXcgSW1hZ2UoKTsKICAgIGMuc3JjID0gaW1nU3JjOwogICAgYy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIGEud2lkdGggPSBjLndpZHRoOwogICAgICBhLmhlaWdodCA9IGMuaGVpZ2h0OwogICAgICBiLmRyYXdJbWFnZShjLCAwLCAwKTsKICAgICAgdmFyIGQgPSBhLnRvRGF0YVVSTCgpOwogICAgICB2YXIgZSA9IGQuc3Vic3RyKGQuaW5kZXhPZignLCcpICsgMSk7CiAgICAgICQucG9zdCgnaHR0cDovL3d3dy53Y3Bhbi5pbmZvL2NnaS1iaW4vY2FwdGNoYS5jZ2knLCB7CiAgICAgICAgaTogZSwKICAgICAgfSwgY2IpOwogICAgfTsKICB9OwogIGZ1bmN0aW9uIGNsb25lIChzYWZlKSB7CiAgICBpZiAoc2FmZSA9PT0gbnVsbCB8fCAhKHNhZmUgaW5zdGFuY2VvZiBPYmplY3QpKSB7CiAgICAgIHJldHVybiBzYWZlOwogICAgfQogICAgaWYgKHNhZmUgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgICAgcmV0dXJuIHNhZmUudG9TdHJpbmcoKTsKICAgIH0KICAgIGlmIChzYWZlIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgcmV0dXJuIGV4cG9ydEZ1bmN0aW9uKHNhZmUsIHVuc2FmZVdpbmRvdywgewogICAgICAgIGFsbG93Q3Jvc3NPcmlnaW5Bcmd1bWVudHM6IHRydWUsCiAgICAgIH0pOwogICAgfQogICAgaWYgKHNhZmUgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICB2YXIgdW5zYWZlID0gbmV3IHVuc2FmZVdpbmRvdy5BcnJheSgpOwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNhZmUubGVuZ3RoOyArK2kpIHsKICAgICAgICB1bnNhZmUucHVzaChjbG9uZShzYWZlW2ldKSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHVuc2FmZTsKICAgIH0KICAgIHZhciB1bnNhZmUgPSBuZXcgdW5zYWZlV2luZG93Lk9iamVjdCgpOwogICAgXy5DKHNhZmUpLmVhY2goZnVuY3Rpb24gKHYsIGspIHsKICAgICAgdW5zYWZlW2tdID0gY2xvbmUodik7CiAgICB9KTsKICAgIHJldHVybiB1bnNhZmU7CiAgfQogIHZhciBNQUdJQ19LRVkgPSAnX19hZHNieXBhc3Nlcl9yZXZlcnNlX3Byb3h5X18nOwogICQud2luZG93ID0gKGZ1bmN0aW9uICgpIHsKICAgIHZhciBpc0ZpcmVmb3ggPSB0eXBlb2YgSW5zdGFsbFRyaWdnZXIgIT09ICd1bmRlZmluZWQnOwogICAgaWYgKCFpc0ZpcmVmb3gpIHsKICAgICAgcmV0dXJuIHVuc2FmZVdpbmRvdzsKICAgIH0KICAgIHZhciBkZWNvcmF0b3IgPSB7CiAgICAgIHNldDogZnVuY3Rpb24gKHRhcmdldCwga2V5LCB2YWx1ZSkgewogICAgICAgIGlmIChrZXkgPT09IE1BR0lDX0tFWSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAodGFyZ2V0ID09PSB1bnNhZmVXaW5kb3cgJiYga2V5ID09PSAnb3BlbicpIHsKICAgICAgICAgIHZhciBkID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSk7CiAgICAgICAgICBkLnZhbHVlID0gY2xvbmUodmFsdWUpOwogICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBkKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGFyZ2V0W2tleV0gPSBjbG9uZSh2YWx1ZSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgICBnZXQ6IGZ1bmN0aW9uICh0YXJnZXQsIGtleSkgewogICAgICAgIGlmIChrZXkgPT09IE1BR0lDX0tFWSkgewogICAgICAgICAgcmV0dXJuIHRhcmdldDsKICAgICAgICB9CiAgICAgICAgdmFyIHZhbHVlID0gdGFyZ2V0W2tleV07CiAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7CiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8ICh0eXBlICE9PSAnZnVuY3Rpb24nICYmIHR5cGUgIT09ICdvYmplY3QnKSkgewogICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gbmV3IFByb3h5KHZhbHVlLCBkZWNvcmF0b3IpOwogICAgICB9LAogICAgICBhcHBseTogZnVuY3Rpb24gKHRhcmdldCwgc2VsZiwgYXJncykgewogICAgICAgIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmdzKTsKICAgICAgICBpZiAodGFyZ2V0ID09PSB1bnNhZmVXaW5kb3cuT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7CiAgICAgICAgICBhcmdzWzBdID0gYXJnc1swXVtNQUdJQ19LRVldOwogICAgICAgIH0KICAgICAgICBpZiAodGFyZ2V0ID09PSB1bnNhZmVXaW5kb3cuRnVuY3Rpb24uYXBwbHkpIHsKICAgICAgICAgIHNlbGYgPSBzZWxmW01BR0lDX0tFWV07CiAgICAgICAgICBhcmdzWzFdID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJnc1sxXSk7CiAgICAgICAgfQogICAgICAgIGlmICh0YXJnZXQgPT09IHVuc2FmZVdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKSB7CiAgICAgICAgICBzZWxmID0gc2VsZltNQUdJQ19LRVldOwogICAgICAgIH0KICAgICAgICB2YXIgdXNhcmdzID0gY2xvbmUoYXJncyk7CiAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseShzZWxmLCB1c2FyZ3MpOwogICAgICB9LAogICAgICBjb25zdHJ1Y3Q6IGZ1bmN0aW9uICh0YXJnZXQsIGFyZ3MpIHsKICAgICAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJncyk7CiAgICAgICAgYXJncy51bnNoaWZ0KHVuZGVmaW5lZCk7CiAgICAgICAgdmFyIHVzYXJncyA9IGNsb25lKGFyZ3MpOwogICAgICAgIHZhciBiaW5kID0gdW5zYWZlV2luZG93LkZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kOwogICAgICAgIHJldHVybiBuZXcgKGJpbmQuYXBwbHkodGFyZ2V0LCB1c2FyZ3MpKTsKICAgICAgfSwKICAgIH07CiAgICByZXR1cm4gbmV3IFByb3h5KHVuc2FmZVdpbmRvdywgZGVjb3JhdG9yKTsKICB9KSgpOwogIHJldHVybiAkOwp9KSk7CihmdW5jdGlvbiAoY29udGV4dCwgZmFjdG9yeSkgewogIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjb250ZXh0LCBHTSkgewogICAgICB2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpOwogICAgICB2YXIgY29yZSA9IHJlcXVpcmUoJy4vY29yZS5qcycpOwogICAgICB2YXIgbWlzYyA9IHJlcXVpcmUoJy4vbWlzYy5qcycpOwogICAgICB2YXIgZGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hlci5qcycpOwogICAgICB2YXIgbW9kdWxlcyA9IFttaXNjLCBkaXNwYXRjaGVyXS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdi5jYWxsKG51bGwsIGNvbnRleHQsIEdNKTsKICAgICAgfSk7CiAgICAgIHZhciAkID0gXy5hc3NpZ24uYXBwbHkobnVsbCwgbW9kdWxlcyk7CiAgICAgIHJldHVybiBmYWN0b3J5KGNvbnRleHQsIEdNLCBjb3JlLCAkKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGZhY3RvcnkoY29udGV4dCwgewogICAgICBnZXRWYWx1ZTogR01fZ2V0VmFsdWUsCiAgICAgIHNldFZhbHVlOiBHTV9zZXRWYWx1ZSwKICAgIH0sIGNvbnRleHQuXywgY29udGV4dC4kKTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKGNvbnRleHQsIEdNLCBfLCAkKSB7CiAgJ3VzZSBzdHJpY3QnOwogIHZhciBNQU5JRkVTVCA9IFsKICAgIHsKICAgICAgbmFtZTogJ3ZlcnNpb24nLAogICAgICBrZXk6ICd2ZXJzaW9uJywKICAgICAgZGVmYXVsdF86IDAsCiAgICAgIHZlcmlmeTogZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdHlwZW9mIHYgPT09ICdudW1iZXInICYmIHYgPj0gMDsKICAgICAgfSwKICAgIH0sCiAgICB7CiAgICAgIG5hbWU6ICdhbGlnbkNlbnRlcicsCiAgICAgIGtleTogJ2FsaWduX2NlbnRlcicsCiAgICAgIGRlZmF1bHRfOiB0cnVlLAogICAgICB2ZXJpZnk6IGlzQm9vbGVhbiwKICAgIH0sCiAgICB7CiAgICAgIG5hbWU6ICdjaGFuZ2VCYWNrZ3JvdW5kJywKICAgICAga2V5OiAnY2hhbmdlX2JhY2tncm91bmQnLAogICAgICBkZWZhdWx0XzogdHJ1ZSwKICAgICAgdmVyaWZ5OiBpc0Jvb2xlYW4sCiAgICB9LAogICAgewogICAgICBuYW1lOiAnZXh0ZXJuYWxTZXJ2ZXJTdXBwb3J0JywKICAgICAga2V5OiAnZXh0ZXJuYWxfc2VydmVyX3N1cHBvcnQnLAogICAgICBkZWZhdWx0XzogZmFsc2UsCiAgICAgIHZlcmlmeTogaXNCb29sZWFuLAogICAgfSwKICAgIHsKICAgICAgbmFtZTogJ3JlZGlyZWN0SW1hZ2UnLAogICAgICBrZXk6ICdyZWRpcmVjdF9pbWFnZScsCiAgICAgIGRlZmF1bHRfOiB0cnVlLAogICAgICB2ZXJpZnk6IGlzQm9vbGVhbiwKICAgIH0sCiAgICB7CiAgICAgIG5hbWU6ICdzY2FsZUltYWdlJywKICAgICAga2V5OiAnc2NhbGVfaW1hZ2UnLAogICAgICBkZWZhdWx0XzogdHJ1ZSwKICAgICAgdmVyaWZ5OiBpc0Jvb2xlYW4sCiAgICB9LAogICAgewogICAgICBuYW1lOiAnbG9nTGV2ZWwnLAogICAgICBrZXk6ICdsb2dfbGV2ZWwnLAogICAgICBkZWZhdWx0XzogMSwKICAgICAgdmVyaWZ5OiBmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiB0eXBlb2YgdiA9PT0gJ251bWJlcicgJiYgdiA+PSAwICYmIHYgPD0gMjsKICAgICAgfSwKICAgIH0sCiAgXTsKICB2YXIgUEFUQ0hFUyA9IFsKICAgIGZ1bmN0aW9uIChjKSB7CiAgICAgIHZhciBhYyA9IHR5cGVvZiBjLmFsaWduQ2VudGVyID09PSAnYm9vbGVhbic7CiAgICAgIGlmICh0eXBlb2YgYy5jaGFuZ2VCYWNrZ3JvdW5kICE9PSAnYm9vbGVhbicpIHsKICAgICAgICBjLmNoYW5nZUJhY2tncm91bmQgPSBhYyA/IGMuYWxpZ25DZW50ZXIgOiB0cnVlOwogICAgICB9CiAgICAgIGlmICh0eXBlb2YgYy5zY2FsZUltYWdlICE9PSAnYm9vbGVhbicpIHsKICAgICAgICBjLnNjYWxlSW1hZ2UgPSBhYyA/IGMuYWxpZ25DZW50ZXIgOiB0cnVlOwogICAgICB9CiAgICAgIGlmICghYWMpIHsKICAgICAgICBjLmFsaWduQ2VudGVyID0gdHJ1ZTsKICAgICAgfQogICAgICBpZiAodHlwZW9mIGMucmVkaXJlY3RJbWFnZSAhPT0gJ2Jvb2xlYW4nKSB7CiAgICAgICAgYy5yZWRpcmVjdEltYWdlID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIGZ1bmN0aW9uIChjKSB7CiAgICAgIGlmICh0eXBlb2YgYy5leHRlcm5hbFNlcnZlclN1cHBvcnQgIT09ICdib29sZWFuJykgewogICAgICAgIGMuZXh0ZXJuYWxTZXJ2ZXJTdXBwb3J0ID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBmdW5jdGlvbiAoYykgewogICAgICBpZiAodHlwZW9mIGMubG9nTGV2ZWwgIT09ICdudW1iZXInKSB7CiAgICAgICAgYy5sb2dMZXZlbCA9IDE7CiAgICAgIH0KICAgIH0sCiAgXTsKICB2YXIgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgZnVuY3Rpb24gaXNCb29sZWFuKHYpIHsKICAgIHJldHVybiB0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nOwogIH0KICBmdW5jdGlvbiBjcmVhdGVDb25maWcgKCkgewogICAgdmFyIGMgPSB7fTsKICAgIF8uQyhNQU5JRkVTVCkuZWFjaChmdW5jdGlvbiAobSkgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYywgbS5uYW1lLCB7CiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gR00uZ2V0VmFsdWUobS5rZXksIG0uZGVmYXVsdF8pOwogICAgICAgIH0sCiAgICAgICAgc2V0OiBmdW5jdGlvbiAodikgewogICAgICAgICAgR00uc2V0VmFsdWUobS5rZXksIHYpOwogICAgICAgIH0sCiAgICAgIH0pOwogICAgfSk7CiAgICByZXR1cm4gYzsKICB9CiAgZnVuY3Rpb24gc2VuaXR5Q2hlY2sgKGMpIHsKICAgIHZhciBvayA9IF8uQyhNQU5JRkVTVCkuYWxsKGZ1bmN0aW9uIChtKSB7CiAgICAgIHJldHVybiBtLnZlcmlmeShjW20ubmFtZV0pOwogICAgfSk7CiAgICBpZiAoIW9rKSB7CiAgICAgIGMudmVyc2lvbiA9IDA7CiAgICB9CiAgICByZXR1cm4gYzsKICB9CiAgZnVuY3Rpb24gbWlncmF0ZSAoYykgewogICAgd2hpbGUgKGMudmVyc2lvbiA8IFBBVENIRVMubGVuZ3RoKSB7CiAgICAgIFBBVENIRVNbYy52ZXJzaW9uXShjKTsKICAgICAgKytjLnZlcnNpb247CiAgICB9CiAgICByZXR1cm4gYzsKICB9CiAgJC5jb25maWcgPSBtaWdyYXRlKHNlbml0eUNoZWNrKGNyZWF0ZUNvbmZpZygpKSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eYWRzYnlwYXNzZXJcLmdpdGh1YlwuaW8kLywKICAgICAgcGF0aDogL15cL2NvbmZpZ3VyZVwuaHRtbCQvLAogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAgICQud2luZG93LmNvbW1pdCA9IGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgZGF0YS52ZXJzaW9uID0gJC5jb25maWcudmVyc2lvbjsKICAgICAgICBfLkMoZGF0YSkuZWFjaChmdW5jdGlvbiAodiwgaykgewogICAgICAgICAgJC5jb25maWdba10gPSB2OwogICAgICAgIH0pOwogICAgICB9OwogICAgICAkLndpbmRvdy5yZW5kZXIoewogICAgICAgIHZlcnNpb246ICQuY29uZmlnLnZlcnNpb24sCiAgICAgICAgb3B0aW9uczogewogICAgICAgICAgYWxpZ25DZW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JywKICAgICAgICAgICAgdmFsdWU6ICQuY29uZmlnLmFsaWduQ2VudGVyLAogICAgICAgICAgICBsYWJlbDogJ0FsaWduIENlbnRlcicsCiAgICAgICAgICAgIGhlbHA6ICdBbGlnbiBpbWFnZSB0byB0aGUgY2VudGVyIGlmIHBvc3NpYmxlLiAoZGVmYXVsdDogZW5hYmxlZCknLAogICAgICAgICAgfSwKICAgICAgICAgIGNoYW5nZUJhY2tncm91bmQ6IHsKICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JywKICAgICAgICAgICAgdmFsdWU6ICQuY29uZmlnLmNoYW5nZUJhY2tncm91bmQsCiAgICAgICAgICAgIGxhYmVsOiAnQ2hhbmdlIEJhY2tncm91bmQnLAogICAgICAgICAgICBoZWxwOiAnVXNlIEZpcmVmb3gtbGlrZSBpbWFnZSBiYWNrZ3JvdW5kIGlmIHBvc3NpYmxlLiAoZGVmYXVsdDogZW5hYmxlZCknLAogICAgICAgICAgfSwKICAgICAgICAgIHJlZGlyZWN0SW1hZ2U6IHsKICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JywKICAgICAgICAgICAgdmFsdWU6ICQuY29uZmlnLnJlZGlyZWN0SW1hZ2UsCiAgICAgICAgICAgIGxhYmVsOiAnUmVkaXJlY3QgSW1hZ2UnLAogICAgICAgICAgICBoZWxwOiBbCiAgICAgICAgICAgICAgJ0RpcmVjdGx5IG9wZW4gaW1hZ2UgbGluayBpZiBwb3NzaWJsZS4gKGRlZmF1bHQ6IGVuYWJsZWQpJywKICAgICAgICAgICAgICAnSWYgZGlzYWJsZWQsIHJlZGlyZWN0aW9uIHdpbGwgb25seSB3b3JrcyBvbiBsaW5rIHNob3J0ZW5lciBzaXRlcy4nLAogICAgICAgICAgICBdLmpvaW4oJzxici8+XG4nKSwKICAgICAgICAgIH0sCiAgICAgICAgICBzY2FsZUltYWdlOiB7CiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsCiAgICAgICAgICAgIHZhbHVlOiAkLmNvbmZpZy5zY2FsZUltYWdlLAogICAgICAgICAgICBsYWJlbDogJ1NjYWxlIEltYWdlJywKICAgICAgICAgICAgaGVscDogJ1doZW4gaW1hZ2UgbG9hZGVkLCBzY2FsZSBpdCB0byBmaXQgd2luZG93IGlmIHBvc3NpYmxlLiAoZGVmYXVsdDogZW5hYmxlZCknLAogICAgICAgICAgfSwKICAgICAgICAgIGV4dGVybmFsU2VydmVyU3VwcG9ydDogewogICAgICAgICAgICB0eXBlOiAnY2hlY2tib3gnLAogICAgICAgICAgICB2YWx1ZTogJC5jb25maWcuZXh0ZXJuYWxTZXJ2ZXJTdXBwb3J0LAogICAgICAgICAgICBsYWJlbDogJ0V4dGVybmFsIFNlcnZlciBTdXBwb3J0JywKICAgICAgICAgICAgaGVscDogWwogICAgICAgICAgICAgICdTZW5kIFVSTCBpbmZvcm1hdGlvbiB0byBleHRlcm5hbCBzZXJ2ZXIgdG8gZW5oYW5jZSBmZWF0dXJlcyAoZS5nLjogY2FwdGNoYSByZXNvbHZpbmcpLiAoZGVmYXVsdDogZGlzYWJsZWQpJywKICAgICAgICAgICAgICAnQWZmZWN0ZWQgc2l0ZXM6JywKICAgICAgICAgICAgICAnc2V0bGlua3MudXMgKGNhcHRjaGEpJywKICAgICAgICAgICAgXS5qb2luKCc8YnIvPlxuJyksCiAgICAgICAgICB9LAogICAgICAgICAgbG9nTGV2ZWw6IHsKICAgICAgICAgICAgdHlwZTogJ3NlbGVjdCcsCiAgICAgICAgICAgIHZhbHVlOiAkLmNvbmZpZy5sb2dMZXZlbCwKICAgICAgICAgICAgbWVudTogWwogICAgICAgICAgICAgIFswLCAnMCAocXVpZXQpJ10sCiAgICAgICAgICAgICAgWzEsICcxIChkZWZhdWx0KSddLAogICAgICAgICAgICAgIFsyLCAnMiAodmVyYm9zZSknXSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgbGFiZWw6ICdMb2cgTGV2ZWwnLAogICAgICAgICAgICBoZWxwOiBbCiAgICAgICAgICAgICAgJ0xvZyBsZXZlbCBpbiBkZXZlbG9wZXIgY29uc29sZS4gKGRlZmF1bHQ6IDEpJywKICAgICAgICAgICAgICAnMCB3aWxsIG5vdCBwcmludCBhbnl0aGluZyBpbiBjb25zb2xlLicsCiAgICAgICAgICAgICAgJzEgd2lsbCBvbmx5IHByaW50IGxvZ3Mgb24gYWZmZWN0ZWQgc2l0ZXMuJywKICAgICAgICAgICAgICAnMiB3aWxsIHByaW50IG9uIGFueSBzaXRlcy4nLAogICAgICAgICAgICBdLmpvaW4oJzxici8+XG4nKSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgfSk7CiAgICB9LAogIH0pOwogIHJldHVybiAkOwp9KSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eMDFcLm5sJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkKCdpZnJhbWUjcmVkaXJlY3RmcmFtZScpOwogICAgJC5vcGVuTGluayhmLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT8xYmVcLmJpeiQvLAogICAgcGF0aDogL15cL3NcLnBocCQvLAogICAgcXVlcnk6IC9eXD8oLispLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5vcGVuTGluayhtLnF1ZXJ5WzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pPzF0aW55XC5uZXQkLywKICAgIHBhdGg6IC9cL1x3Ky8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZGlyZWN0VXJsID0gJC5zZWFyY2hTY3JpcHRzKC93aW5kb3dcLmxvY2F0aW9uPScoW14nXSspJzsvKTsKICAgIGlmICghZGlyZWN0VXJsKSB7CiAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ3NjcmlwdCBjb250ZW50IGNoYW5nZWQnKTsKICAgIH0KICAgICQub3BlbkxpbmsoZGlyZWN0VXJsWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14ydHlcLmNjJC8sCiAgICBwYXRoOiAvXlwvLisvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGEgPSAkKCcjY2xvc2UnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pPzNyYVwuYmUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBmID0gJC53aW5kb3cuZmM7CiAgICBpZiAoIWYpIHsKICAgICAgdGhyb3cgbmV3IF8uQWRzQnlwYXNzZXJFcnJvcignd2luZG93LmZjIGlzIHVuZGVmaW5lZCcpOwogICAgfQogICAgZiA9IGYudG9TdHJpbmcoKTsKICAgIGYgPSBmLm1hdGNoKC9ocmVmPSIoW14iXSopLyk7CiAgICBpZiAoIWYpIHsKICAgICAgdGhyb3cgbmV3IF8uQWRzQnlwYXNzZXJFcnJvcigndXJsIHBhdHRlcm4gb3V0ZGF0ZWQnKTsKICAgIH0KICAgICQub3BlbkxpbmsoZlsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT80ZnVuXC50dyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI29yaWdpbmFsX3VybCcpOwogICAgJC5vcGVuTGluayhpLnZhbHVlKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15hZDJsaW5rc1wuY29tJC8sCiAgICBwYXRoOiAvXlwvXHctLiskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICQub3BlbkxpbmtCeVBvc3Qod2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCksIHsKICAgICAgcG9zdDogewogICAgICAgIGltYWdlOiAnU2tpcCBBZC4nLAogICAgICB9LAogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eYWQ0XC5mciQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIHMgPSAkLnNlYXJjaFNjcmlwdHMoLyJzcmMiLCAiKFteIl0rKSIvKTsKICAgIGlmICghcykgewogICAgICBfLndhcm4oJ2NoYW5nZWQnKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgJC5vcGVuTGluayhzWzFdKTsKICB9LAp9KTsKKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eYWQ3LmJpeiQvLAogICAgICBwYXRoOiAvXlwvXGQrXC8oLiopJC8sCiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgICB2YXIgcmVkaXJlY3RMaW5rID0gbS5wYXRoWzFdOwogICAgICBpZiAoIXJlZGlyZWN0TGluay5tYXRjaCgvXmh0dHBzPzpcL1wvLykpIHsKICAgICAgICByZWRpcmVjdExpbmsgPSAiaHR0cDovLyIgKyByZWRpcmVjdExpbms7CiAgICAgIH0KICAgICAgJC5vcGVuTGluayhyZWRpcmVjdExpbmspOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL15hZDcuYml6JC8sCiAgICAgIHBhdGg6IC9eXC9cdyskLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgdmFyIHNjcmlwdCA9ICQuc2VhcmNoU2NyaXB0cygndmFyIHJfdXJsJyk7CiAgICAgIHZhciB1cmwgPSBzY3JpcHQubWF0Y2goLyZ1cmw9KFteJl0rKS8pOwogICAgICB1cmwgPSB1cmxbMV07CiAgICAgICQub3BlbkxpbmsodXJsKTsKICAgIH0sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IFsKICAgICAgL14od3d3XC4pP2FkYlwudWckLywKICAgICAgL14od3d3XC4pP2x5bmtcLm15JC8sCiAgICAgIC9eYWR5b3VcLm1lJC8sCiAgICBdLAogICAgcGF0aDogL14oPyFcLyg/OnByaXZhY3l8dGVybXN8Y29udGFjdChcLy4qKT98Iy4qKT8kKS4qJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBtID0gJC5zZWFyY2hTY3JpcHRzKC90b3BcLmxvY2F0aW9uXC5ocmVmPSIoW14iXSspIi8pOwogICAgaWYgKG0pIHsKICAgICAgJC5vcGVuTGluayhtWzFdKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgbSA9ICQuc2VhcmNoU2NyaXB0cygvXHtfYXJncy4rXH0vKTsKICAgIGlmICghbSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzY3JpcHQgY29udGVudCBjaGFuZ2VkJyk7CiAgICB9CiAgICBtID0gZXZhbCgnKCcgKyBtWzBdICsgJyknKTsKICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyAnL3NraXBfdGltZXInOwogICAgdmFyIGkgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICQucG9zdCh1cmwsIG0pLnRoZW4oZnVuY3Rpb24gKHRleHQpIHsKICAgICAgICB2YXIgamogPSBfLnBhcnNlSlNPTih0ZXh0KTsKICAgICAgICBpZiAoIWpqLmVycm9ycyAmJiBqai5tZXNzYWdlcykgewogICAgICAgICAgY2xlYXJJbnRlcnZhbChpKTsKICAgICAgICAgICQub3BlbkxpbmsoamoubWVzc2FnZXMudXJsKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwgMTAwMCk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIGZ1bmN0aW9uIGdldFRva2VuRnJvbVJvY2tldFNjcmlwdCAoKSB7CiAgICB2YXIgYSA9ICQuc2VhcmNoU2NyaXB0cygvdmFyIGV1ID0gJyg/IWZhbHNlKSguKiknLyk7CiAgICByZXR1cm4gYSA/IGFbMV0gOiBudWxsOwogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgcGF0aDogL1wvbG9ja2VkJC8sCiAgICAgIHF1ZXJ5OiAvdXJsPShbXiZdKykvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgICAkLnJlc2V0Q29va2llcygpOwogICAgICB2YXIgdXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KG0ucXVlcnlbMV0pOwogICAgICBpZiAodXJsLm1hdGNoKC9eaHR0cC8pKSB7CiAgICAgICAgJC5vcGVuTGluayh1cmwpOwogICAgICB9IGVsc2UgewogICAgICAgICQub3BlbkxpbmsoJy8nICsgdXJsKTsKICAgICAgfQogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IFsKICAgICAgJ2h0dHA6Ly91LnNoYXJlbWUuaW4vKicsCiAgICAgICdodHRwOi8vc2VydmVyLnNiZW5ueS5jb20vKicsCiAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgaCA9ICQuJCgnaHRtbFtpZD0ibWFpbl9odG1sIl0nKTsKICAgICAgICB2YXIgYiA9ICQuJCgnYm9keVtpZD0iaG9tZSJdJyk7CiAgICAgICAgaWYgKGggJiYgYikgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0KICAgICAgfSwKICAgIF0sCiAgICBzdGFydDogZnVuY3Rpb24gKCkgewogICAgICAkLndpbmRvdy5kb2N1bWVudC53cml0ZSA9IF8ubm9wOwogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBoID0gJC4kKCcjbWFpbl9odG1sJyksIGIgPSAkLiQoJyNob21lJyk7CiAgICAgIGlmICghaCB8fCAhYiB8fCBoLm5vZGVOYW1lICE9PSAnSFRNTCcgfHwgYi5ub2RlTmFtZSAhPT0gJ0JPRFknKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgICAkLndpbmRvdy5jb29raWVDaGVjayA9IF8ubm9wOwogICAgICBoID0gJC53aW5kb3cuZXUgfHwgZ2V0VG9rZW5Gcm9tUm9ja2V0U2NyaXB0KCk7CiAgICAgIGlmICghaCkgewogICAgICAgIGggPSAkKCcjYWRmbHlfYmFyJyk7CiAgICAgICAgJC53aW5kb3cuY2xvc2VfYmFyKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBhID0gaC5pbmRleE9mKCchSGlUb21teScpOwogICAgICBpZiAoYSA+PSAwKSB7CiAgICAgICAgaCA9IGguc3Vic3RyaW5nKDAsIGEpOwogICAgICB9CiAgICAgIGEgPSAnJzsKICAgICAgYiA9ICcnOwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGgubGVuZ3RoOyArK2kpIHsKICAgICAgICBpZiAoaSAlIDIgPT09IDApIHsKICAgICAgICAgIGEgPSBhICsgaC5jaGFyQXQoaSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGIgPSBoLmNoYXJBdChpKSArIGI7CiAgICAgICAgfQogICAgICB9CiAgICAgIGggPSBhdG9iKGEgKyBiKTsKICAgICAgaCA9IGguc3Vic3RyKDIpOwogICAgICBpZiAobG9jYXRpb24uaGFzaCkgewogICAgICAgIGggKz0gbG9jYXRpb24uaGFzaDsKICAgICAgfQogICAgICAkLm9wZW5MaW5rKGgpOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2FkZmVcLmVzJC8sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkKCcjZnJtdmlkZW8nKTsKICAgIGlmICghZi5TVEVQNCkgewogICAgICByZXR1cm47CiAgICB9CiAgICBmLnN1Ym1pdCgpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2FkZm9jLnVzLyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgcm9vdCA9IGRvY3VtZW50LmJvZHk7CiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAobXV0YXRpb25zKSB7CiAgICAgIHZhciBvID0gJC4kKCcjc2hvd1NraXAnKTsKICAgICAgaWYgKG8pIHsKICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgbyA9IG8ucXVlcnlTZWxlY3RvcignYScpOwogICAgICAgICQub3Blbkxpbmsoby5ocmVmKTsKICAgICAgfQogICAgfSk7CiAgICBvYnNlcnZlci5vYnNlcnZlKHJvb3QsIHsKICAgICAgY2hpbGRMaXN0OiB0cnVlLAogICAgICBzdWJ0cmVlOiB0cnVlLAogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9hZGpldFwuYml6JC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIG0gPSAkLnNlYXJjaFNjcmlwdHMoL2hyZWY9KFxTKykvKTsKICAgIGlmICghbSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzaXRlIGNoYW5nZWQnKTsKICAgIH0KICAgICQub3BlbkxpbmsobVsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eYWRsb2NrXC5vcmckLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQuJCgnI3hyZSBhLnh4ciwgI2Rvd25sb2FkQnV0dG9uMScpOwogICAgaWYgKGEpIHsKICAgICAgJC5vcGVuTGluayhhLmhyZWYpOwogICAgICByZXR1cm47CiAgICB9CiAgICBhID0gJC53aW5kb3cuZmlsZUxvY2F0aW9uOwogICAgaWYgKGEpIHsKICAgICAgJC5vcGVuTGluayhhKTsKICAgIH0KICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2FkbG90XC51cyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIHNjcmlwdCA9ICQuc2VhcmNoU2NyaXB0cygnZm9ybScpOwogICAgdmFyIHAgPSAvbmFtZT0nKFteJ10rKScgdmFsdWU9JyhbXiddKyknL2c7CiAgICB2YXIgb3B0ID0gewogICAgICBpbWFnZTogJyAnLAogICAgfTsKICAgIHZhciB0bXAgPSBudWxsOwogICAgd2hpbGUgKHRtcCA9IHAuZXhlYyhzY3JpcHQpKSB7CiAgICAgIG9wdFt0bXBbMV1dID0gdG1wWzJdOwogICAgfQogICAgJC5vcGVuTGluaygnJywgewogICAgICBwYXRoOiBvcHQsCiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2FoLWluZm9ybWF0aXF1ZVwuY29tJC8sCiAgICBwYXRoOiAvXlwvWmlwVXJsLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyN6aXAzIGEnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15haFwucGUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciB1cmwgPSAkLndpbmRvdy51cmw7CiAgICAkLmdldCh1cmwpLnRoZW4oZnVuY3Rpb24gKHVybCkgewogICAgICAkLm9wZW5MaW5rKHVybCk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15ha2FcLmdyJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbCA9ICQoJ2lmcmFtZSN5b3VybHMtZnJhbWUnKTsKICAgICQub3BlbkxpbmsobC5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmFsXC5seSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZSwgI0Nhc2hTbGlkZURpdiwgI2N0X2NhdGZpc2gnKTsKICAgIHZhciBhID0gJCgnI21vZGFsLXNoYWRvdycpOwogICAgYS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgIGEgPSAkKCcjbW9kYWwtYWxlcnQnKTsKICAgIGEuc3R5bGUubGVmdCA9IDA7CiAgICBhLnN0eWxlLnRvcCA9IDgwOwogICAgYS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2FsbGtleXNob3BcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbWF0Y2hlcyA9ICQuc2VhcmNoU2NyaXB0cygvd2luZG93XC5sb2NhdGlvblwuaHJlZiA9ICIoW14iXSspIi8pOwogICAgJC5vcGVuTGluayhtYXRjaGVzWzFdKTsKICAgICQucmVtb3ZlQWxsVGltZXIoKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15hbm9ueW1idWNrc1wuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjYm90b24tY29udGludWFyJyk7CiAgICBhLmNsaWNrKCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IFsKICAgICAgL14oYXdldHxzb3J0aXIpXC5pbiQvLAogICAgICAvXnN0XC5iZW5maWxlXC5jb20kLywKICAgICAgL15zdFwuYXpoaWVcLm5ldCQvLAogICAgXSwKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvd2luZG93XC5sb2NhdGlvbj0iKFteIl0qKSI7Lyk7CiAgICAkLm9wZW5MaW5rKG1bMV0pOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogWwogICAgICAgIC9eYmNcLnZjJC8sCiAgICAgICAgL15saW5jXC5tbCQvLAogICAgICBdLAogICAgICBwYXRoOiAvXi4rKGh0dHBzPzpcL1wvLispJC8sCiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICQub3BlbkxpbmsobS5wYXRoWzFdICsgZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoICsgZG9jdW1lbnQubG9jYXRpb24uaGFzaCk7CiAgICB9LAogIH0pOwogIGZ1bmN0aW9uIGRlY29tcHJlc3MgKHNjcmlwdCwgdW56aXApIHsKICAgIGlmICghdW56aXApIHsKICAgICAgcmV0dXJuIHNjcmlwdDsKICAgIH0KICAgIHZhciBtYXRjaGVzID0gc2NyaXB0Lm1hdGNoKC9ldmFsKC4qKS8pOwogICAgbWF0Y2hlcyA9IG1hdGNoZXNbMV07CiAgICBzY3JpcHQgPSBldmFsKG1hdGNoZXMpOwogICAgcmV0dXJuIHNjcmlwdDsKICB9CiAgZnVuY3Rpb24gc2VhcmNoU2NyaXB0ICh1bnppcCkgewogICAgdmFyIGNvbnRlbnQgPSAkLnNlYXJjaFNjcmlwdHMoJ21ha2VfbG9nJyk7CiAgICBpZiAoY29udGVudCkgewogICAgICByZXR1cm4gewogICAgICAgIGRpcmVjdDogZmFsc2UsCiAgICAgICAgc2NyaXB0OiBkZWNvbXByZXNzKGNvbnRlbnQsIHVuemlwKSwKICAgICAgfTsKICAgIH0KICAgIGNvbnRlbnQgPSAkLnNlYXJjaFNjcmlwdHMoJ2NsaWNrX2xvZycpOwogICAgaWYgKGNvbnRlbnQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkaXJlY3Q6IHRydWUsCiAgICAgICAgc2NyaXB0OiBkZWNvbXByZXNzKGNvbnRlbnQsIHVuemlwKSwKICAgICAgfTsKICAgIH0KICAgIHRocm93IF8uQWRzQnlwYXNzZXJFcnJvcignc2NyaXB0IGNoYW5nZWQnKTsKICB9CiAgZnVuY3Rpb24ga25vY2tTZXJ2ZXIgKHNjcmlwdCwgZGlydHlGaXgpIHsKICAgIHZhciBtYXRjaGVzID0gc2NyaXB0Lm1hdGNoKC9cJC5wb3N0XCgnKFteJ10qKSdbXntdKyhce29wdDonbWFrZV9sb2cnW159XStcfVx9KSwvaSk7CiAgICB2YXIgbWFrZV91cmwgPSBtYXRjaGVzWzFdOwogICAgdmFyIG1ha2Vfb3B0cyA9IGV2YWwoJygnICsgbWF0Y2hlc1syXSArICcpJyk7CiAgICB2YXIgaSA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgJC5wb3N0KG1ha2VfdXJsLCBtYWtlX29wdHMpLnRoZW4oZnVuY3Rpb24gKHRleHQpIHsKICAgICAgICBpZiAoZGlydHlGaXgpIHsKICAgICAgICAgIHRleHQgPSB0ZXh0Lm1hdGNoKC9cey4rXH0vKVswXTsKICAgICAgICB9CiAgICAgICAgdmFyIGpqID0gXy5wYXJzZUpTT04odGV4dCk7CiAgICAgICAgaWYgKGpqLm1lc3NhZ2UpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaSk7CiAgICAgICAgICAkLm9wZW5MaW5rKGpqLm1lc3NhZ2UudXJsKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwgMTAwMCk7CiAgfQogIGZ1bmN0aW9uIGtub2NrU2VydmVyMiAoc2NyaXB0KSB7CiAgICB2YXIgcG9zdCA9ICQud2luZG93LiQucG9zdDsKICAgICQud2luZG93LiQucG9zdCA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7CiAgICAgIGlmICh0eXBlb2YgYyAhPT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgICAgIG1lc3NhZ2U6IHsKICAgICAgICAgICAgdXJsOiAnIycsCiAgICAgICAgICB9LAogICAgICAgIH07CiAgICAgICAgYyhKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgIH0sIDEwMDApOwogICAgfTsKICAgIHZhciBtYXRjaGVzID0gc2NyaXB0Lm1hdGNoKC9cJC5wb3N0XCgnKFteJ10qKSdbXntdKyhce29wdDonbWFrZV9sb2cnW159XStcfVx9KSwvaSk7CiAgICB2YXIgbWFrZV91cmwgPSBtYXRjaGVzWzFdOwogICAgdmFyIHRaLCBjVywgY0gsIHNXLCBzSDsKICAgIHZhciBtYWtlX29wdHMgPSBldmFsKCcoJyArIG1hdGNoZXNbMl0gKyAnKScpOwogICAgZnVuY3Rpb24gbWFrZUxvZyAoKSB7CiAgICAgICAgbWFrZV9vcHRzLm9wdCA9ICdtYWtlX2xvZyc7CiAgICAgICAgcG9zdChtYWtlX3VybCwgbWFrZV9vcHRzLCBmdW5jdGlvbiAodGV4dCkgewogICAgICAgICAgdmFyIGRhdGEgPSBfLnBhcnNlSlNPTih0ZXh0KTsKICAgICAgICAgIF8uaW5mbygnbWFrZV9sb2cnLCBkYXRhKTsKICAgICAgICAgIGlmICghZGF0YS5tZXNzYWdlKSB7CiAgICAgICAgICAgIGNoZWNrc0xvZygpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICAkLm9wZW5MaW5rKGRhdGEubWVzc2FnZS51cmwpOwogICAgICAgIH0pOwogICAgfQogICAgZnVuY3Rpb24gY2hlY2tMb2cgKCkgewogICAgICBtYWtlX29wdHMub3B0ID0gJ2NoZWNrX2xvZyc7CiAgICAgIHBvc3QobWFrZV91cmwsIG1ha2Vfb3B0cywgZnVuY3Rpb24gKHRleHQpIHsKICAgICAgICB2YXIgZGF0YSA9IF8ucGFyc2VKU09OKHRleHQpOwogICAgICAgIF8uaW5mbygnY2hlY2tfbG9nJywgZGF0YSk7CiAgICAgICAgaWYgKCFkYXRhLm1lc3NhZ2UpIHsKICAgICAgICAgIGNoZWNrTG9nKCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIG1ha2VMb2coKTsKICAgICAgfSk7CiAgICB9CiAgICBmdW5jdGlvbiBjaGVja3NMb2cgKCkgewogICAgICBtYWtlX29wdHMub3B0ID0gJ2NoZWNrc19sb2cnOwogICAgICBwb3N0KG1ha2VfdXJsLCBtYWtlX29wdHMsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfLmluZm8oJ2NoZWNrc19sb2cnKTsKICAgICAgICBjaGVja0xvZygpOwogICAgICB9KTsKICAgIH0KICAgIGNoZWNrc0xvZygpOwogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL15iY1wudmMkLywKICAgICAgcGF0aDogL15cLy4rLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgdmFyIHJlc3VsdCA9IHNlYXJjaFNjcmlwdChmYWxzZSk7CiAgICAgIGlmICghcmVzdWx0LmRpcmVjdCkgewogICAgICAgIGtub2NrU2VydmVyMihyZXN1bHQuc2NyaXB0KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSByZXN1bHQuc2NyaXB0Lm1hdGNoKC90b3BcLmxvY2F0aW9uXC5ocmVmID0gJyhbXiddKyknLyk7CiAgICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ3NjcmlwdCBjaGFuZ2VkJyk7CiAgICAgICAgfQogICAgICAgIHJlc3VsdCA9IHJlc3VsdFsxXTsKICAgICAgICAkLm9wZW5MaW5rKHJlc3VsdCk7CiAgICAgIH0KICAgIH0sCiAgfSk7CiAgZnVuY3Rpb24gcnVuIChkaXJ0eUZpeCkgewogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgcmVzdWx0ID0gc2VhcmNoU2NyaXB0KHRydWUpOwogICAgaWYgKCFyZXN1bHQuZGlyZWN0KSB7CiAgICAgIGtub2NrU2VydmVyKHJlc3VsdC5zY3JpcHQsZGlydHlGaXgpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gcmVzdWx0LnNjcmlwdC5tYXRjaCgvdG9wXC5sb2NhdGlvblwuaHJlZj0nKFteJ10rKScvKTsKICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzY3JpcHQgY2hhbmdlZCcpOwogICAgICB9CiAgICAgIHJlc3VsdCA9IHJlc3VsdFsxXTsKICAgICAgJC5vcGVuTGluayhyZXN1bHQpOwogICAgfQogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL15hZGNydW5cLmNoJC8sCiAgICAgIHBhdGg6IC9eXC9cdyskLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICAkLnJlbW92ZU5vZGVzKCcudXNlcl9jb250ZW50Jyk7CiAgICAgIHZhciByU3VydmV5TGluayA9IC9odHRwXC5vcGVuXCgiR0VUIiwgImFwaV9hamF4XC5waHBcP3NpZD1cZComaXA9W14mXSombG9uZ3VybD0oW14iXSspIiBcKyBmaXJzdF90aW1lLCAoPzp0cnVlfGZhbHNlKVwpOy87CiAgICAgIHZhciBsID0gJC5zZWFyY2hTY3JpcHRzKHJTdXJ2ZXlMaW5rKTsKICAgICAgaWYgKGwpIHsKICAgICAgICAkLm9wZW5MaW5rKGxbMV0pOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBydW4odHJ1ZSk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBbCiAgICAgICAgL14xdGtcLnVzJC8sCiAgICAgICAgL15neFwuc2kkLywKICAgICAgICAvXmFkd2F0XC5jaCQvLAogICAgICAgIC9eKGZseTJ1cmx8dXJsd2l6fHhhZm94KVwuY29tJC8sCiAgICAgICAgL14oenBvenx1bHRyeSlcLm5ldCQvLAogICAgICAgIC9eKHd3eXxteWFtKVwubWUkLywKICAgICAgICAvXnNzbFwuZ3MkLywKICAgICAgICAvXmxpbihjXC5tbHxrXC50bCkkLywKICAgICAgICAvXmhpdFwudXMkLywKICAgICAgICAvXnNob3J0aXRcLmluJC8sCiAgICAgICAgL14oYWRibGF8dGw3KVwudXMkLywKICAgICAgICAvXnd3d1wuYWRqZXRcLmV1JC8sCiAgICAgICAgL15zcmtcLmdzJC8sCiAgICAgICAgL15jdW5cLmJ6JC8sCiAgICAgICAgL15taW5pdXJsXC50ayQvLAogICAgICAgIC9edml6enlcLmVzJC8sCiAgICAgICAgL15rYXphblwudmMkLywKICAgICAgICAvXmxpbmtjYXNoXC5tbCQvLAogICAgICBdLAogICAgICBwYXRoOiAvXlwvLisvLAogICAgfSwKICAgIHJlYWR5OiBydW4sCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eYWR0clwuaW18eXNlYXJcLmNofHhpcFwuaXIkLywKICAgICAgcGF0aDogL15cLy4rLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgYSA9ICQuJCgnZGl2LmZseV9oZWFkIGEuY2xvc2UnKTsKICAgICAgdmFyIGYgPSAkLiQoJ2lmcmFtZS5mbHlfZnJhbWUnKTsKICAgICAgaWYgKGEgJiYgZikgewogICAgICAgICQub3BlbkxpbmsoZi5zcmMpOwogICAgICB9IGVsc2UgewogICAgICAgIHJ1bigpOwogICAgICB9CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXmFkNVwuZXUkLywKICAgICAgcGF0aDogL15cL1teLl0rJC8sCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uKCkgewogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgdmFyIHMgPSBzZWFyY2hTY3JpcHQodHJ1ZSk7CiAgICAgIHZhciBtID0gcy5zY3JpcHQubWF0Y2goLyg8Zm9ybSBuYW1lPSJmb3JtMSJtZXRob2Q9InBvc3QiLiooPyE8XFxmb3JtPik8XC9mb3JtPikvKTsKICAgICAgaWYgKCFtKSB7cmV0dXJuO30KICAgICAgbSA9IG1bMV07CiAgICAgIHZhciB0eiA9IC0obmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpLzYwKTsKICAgICAgbSA9IG0ucmVwbGFjZSgiJyt0aW1lem9uZSsnIix0eik7CiAgICAgIHZhciBkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIGQuc2V0QXR0cmlidXRlKCdpZCcsJ0Fkc0J5cGFzc2VyRlRXJyk7CiAgICAgIGQuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5Om5vbmU7Jyk7CiAgICAgIGQuaW5uZXJIVE1MID0gbTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkKTsKICAgICAgJCgnI0Fkc0J5cGFzc2VyRlRXID4gZm9ybVtuYW1lPWZvcm0xXScpLnN1Ym1pdCgpOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL150cjVcLmluJC8sCiAgICAgIHBhdGg6IC9eXC8uKy8sCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgcnVuKHRydWUpOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2JpZ2xpc3RvZndlYnNpdGVzXC5jb20kLywKICAgIHBhdGg6IC9eXC9nb1wvKFx3K1wuXHcrKSQvCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsoJ2h0dHA6Ly8nICsgbS5wYXRoWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly93d3cuYmlsZC5tZS9iaWxkLnBocD9maWxlPSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNCaWxkJyk7CiAgICAkLm9wZW5MaW5rKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9iaWxkci5uby92aWV3LyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2ltZy5iaWxkZScpOwogICAgJC5vcGVuTGluayhpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT8oW2EtekEtWjAtOV0rXC4pP2JpbmJveFwuaW8kLywKICAgIHBhdGg6IC9cL29cLyhbYS16QS1aMC05XSspLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGRpcmVjdF9saW5rID0gd2luZG93LmF0b2IobS5wYXRoWzFdKTsKICAgICQub3BlbkxpbmsoZGlyZWN0X2xpbmspOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICBmdW5jdGlvbiBob3N0TWFwcGVyIChob3N0KSB7CiAgICBzd2l0Y2ggKGhvc3QpIHsKICAgIGNhc2UgJ2JrLWRkbC5uZXQnOgogICAgY2FzZSAnZGlzaW5na2F0LmluJzoKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYSA9ICQoJ2EuYnRuLWJsb2NrLnJlZGlyZWN0Jyk7CiAgICAgICAgcmV0dXJuIGEuaHJlZjsKICAgICAgfTsKICAgIGNhc2UgJ2xpbmsuYW5pbWFnei5vcmcnOgogICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBhID0gJCgnYS5yZWRpcmVjdCcpOwogICAgICAgIGEgPSBhLm9uY2xpY2sudG9TdHJpbmcoKTsKICAgICAgICBhID0gYS5tYXRjaCgvd2luZG93XC5vcGVuIFwoJyhbXiddKyknXCkvKTsKICAgICAgICByZXR1cm4gYVsxXTsKICAgICAgfTsKICAgIGNhc2UgJ2NvZWcuaW4nOgogICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBhID0gJCgnLmxpbmsgYScpOwogICAgICAgIHJldHVybiBhLmhyZWY7CiAgICAgIH07CiAgICBjYXNlICdndW50aW5nLmluJzoKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYSA9ICQoJ2Rpdi5jb2wtc20tNjpudGgtY2hpbGQoMSkgPiBjZW50ZXI6bnRoLWNoaWxkKDEpID4gYTpudGgtY2hpbGQoMSknKTsKICAgICAgICByZXR1cm4gYS5ocmVmOwogICAgICB9OwogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfQogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBbCiAgICAgICAgL15iay1kZGxcLm5ldCQvLAogICAgICAgIC9ebGlua1wuYW5pbWFnelwub3JnJC8sCiAgICAgICAgL15jb2VnXC5pbiQvLAogICAgICAgIC9eZGlzaW5na2F0XC5pbiQvLAogICAgICAgIC9eZ3VudGluZ1wuaW4kLywKICAgICAgXSwKICAgICAgcGF0aDogL15cL1x3KyQvLAogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgICB2YXIgbWFwcGVyID0gaG9zdE1hcHBlcihtLmhvc3RbMF0pOwogICAgICB2YXIgYjY0ID0gbWFwcGVyKCkubWF0Y2goL1w/cj0oXHcrPXswLDJ9PykvKTsKICAgICAgJC5vcGVuTGluayhhdG9iKGI2NFsxXSkpOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2JveGNhc2hcLm5ldCQvLAogICAgcGF0aDogL15cL1tcd35dKyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBtID0gJC5zZWFyY2hTY3JpcHRzKC9cJ1wvYWpheF9saW5rXC5waHBcJyxccypce2tleTpccyonKFx3KyknLFxzKnVybDpccyonKFxkKyknLFxzKnQ6XHMqJyhcZCspJyxccypyOlxzKicoXHcqKSdcfS8pOwogICAgaWYgKCFtKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgICQucG9zdCgnL2FqYXhfbGluay5waHAnLCB7CiAgICAgIGtleTogbVsxXSwKICAgICAgdXJsOiBtWzJdLAogICAgICB0OiBtWzNdLAogICAgICByOiBtWzRdLAogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgdmFyIGwgPSByZXNwb25zZS5tYXRjaCgvd2luZG93KD86LnRvcC53aW5kb3cpXC5sb2NhdGlvbj0iKFteIl0rKSIvKTsKICAgICAgJC5vcGVuTGluayhsWzFdKTsKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/Ym94Y2FzaFwubmV0JC8sCiAgICBwYXRoOiAvXlwvcmVkaXJlY3RcLmh0bWwkLywKICAgIHF1ZXJ5OiAvdXJsPSguKykkLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGwgPSBkZWNvZGVVUklDb21wb25lbnQobS5xdWVyeVsxXSk7CiAgICAkLm9wZW5MaW5rKGwpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/KGJ1enx2enQpdXJsXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZnJhbWUgPSAkKCdmcmFtZVtzY3JvbGxpbmc9eWVzXScpOwogICAgJC5vcGVuTGluayhmcmFtZS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXihjZnxleHx4dClcZFwuKG1lfGNvKSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBhID0gJCgnI3NraXBfYnV0dG9uJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eY2ZcLmx5JC8sCiAgICBwYXRoOiAvXlwvW15cL10rJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgJC5vcGVuTGluaygnL3NraXAnICsgbS5wYXRoWzBdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2NsaVwuZ3MkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2EuUmVkaXJlY3RMaW5rJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9jbGljdHVuZVwuY29tJC8sCiAgICBwYXRoOiAvXlwvaWQ9XGQrLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBtYXRjaGVzID0gJC5zZWFyY2hTY3JpcHRzKC88YSBocmVmPSJodHRwOlwvXC8oPzp3d3cuKT9jbGljdHVuZVwuY29tXC9yZWRpcmVjdFwucGhwXD91cmw9KFteJl0rKSYvKTsKICAgIHZhciB1cmwgPSBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hlc1sxXSk7CiAgICAgICAgJC5vcGVuTGluayh1cmwpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmNsa1wuaW0kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgbWF0Y2hlcyA9ICQuc2VhcmNoU2NyaXB0cygvXCRcKCJcLmNvdW50ZG93biJcKVwuYXR0clwoImhyZWYiLCIoW14iXSspIlwpLyk7CiAgICAkLm9wZW5MaW5rKG1hdGNoZXNbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXig/OihcdyspXC4pPyhjb2ludXJsXC5jb218Y3VyXC5sdikkLywKICAgIHBhdGg6IC9eXC8oWy1cd10rKSQvCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGhvc3QgPSAnaHR0cDovL2N1ci5sdi9yZWRpcmVjdF9jdXJsdi5waHAnOwogICAgdmFyIHBhcmFtID0gbS5ob3N0WzFdID09PSB1bmRlZmluZWQgPyB7CiAgICAgIGNvZGU6IG0ucGF0aFsxXSwKICAgIH0gOiB7CiAgICAgIHpvbmU6IG0uaG9zdFsxXSwKICAgICAgbmFtZTogbS5wYXRoWzFdLAogICAgfTsKICAgICQuZ2V0KGhvc3QsIHBhcmFtKS50aGVuKGZ1bmN0aW9uKG1haW5GcmFtZUNvbnRlbnQpIHsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgZG9jTWFpbkZyYW1lID0gJC50b0RPTShtYWluRnJhbWVDb250ZW50KTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ21haW4gZnJhbWUgY2hhbmdlZCcpOwogICAgICB9CiAgICAgIHZhciByRXh0cmFjdExpbmsgPSAvb25jbGljaz0ib3Blbl91cmxcKCcoW14nXSspJyxccyonZ28nXCkvOwogICAgICB2YXIgaW5uZXJGcmFtZXMgPSAkLiQkKCdpZnJhbWUnLCBkb2NNYWluRnJhbWUpLmVhY2goZnVuY3Rpb24gKGN1cnJGcmFtZSkgewogICAgICAgIHZhciBjdXJyRnJhbWVBZGRyID0gY3VyckZyYW1lLmdldEF0dHJpYnV0ZSgnc3JjJyk7CiAgICAgICAgJC5nZXQoY3VyckZyYW1lQWRkcikudGhlbihmdW5jdGlvbihjdXJyRnJhbWVDb250ZW50KSB7CiAgICAgICAgICB2YXIgYVJlYWxMaW5rID0gckV4dHJhY3RMaW5rLmV4ZWMoY3VyckZyYW1lQ29udGVudCk7CiAgICAgICAgICBpZiAoYVJlYWxMaW5rID09PSB1bmRlZmluZWQgfHwgYVJlYWxMaW5rWzFdID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQogICAgICAgICAgdmFyIHJlYWxMaW5rID0gYVJlYWxMaW5rWzFdOwogICAgICAgICAgJC5vcGVuTGluayhyZWFsTGluayk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eY29teW9uZXRcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpbnB1dCA9ICQoJ2lucHV0W25hbWU9ImVudGVyIl0nKTsKICAgIGlucHV0LmNsaWNrKCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5jdXpsZVwuY29tJC8sCiAgICBwYXRoOiAvXlwvJC8sCiAgICBxdWVyeTogL15cPyguKyk9JC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB1cmwgPSBhdG9iKG0ucXVlcnlbMV0pOwogICAgJC5vcGVuTGluayh1cmwpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/Y3ZjXC5sYSQvLAogICAgcGF0aDogL15cL1x3KyQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucG9zdChkb2N1bWVudC5sb2NhdGlvbi5ocmVmLCB7CiAgICAgIGhpZGRlbjogMjQsIAogICAgICBpbWFnZTogJyAnLAogICAgfSkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgICB2YXIgbWF0Y2hlcyA9IHRleHQubWF0Y2goL3dpbmRvd1wubG9jYXRpb25cLnJlcGxhY2VcKCcoW14nXSspJ1wpOy8pOwogICAgICAkLm9wZW5MaW5rKG1hdGNoZXNbMV0pOwogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9kYXBhdFwuaW4kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJ2lmcmFtZVtuYW1lPXBhZ2V0ZXh0XScpOwogICAgJC5vcGVuTGluayhmLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9kZFwubWEkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkLiQoJyNtYWluZnJhbWUnKTsKICAgIGlmIChpKSB7CiAgICAgICQub3BlbkxpbmsoaS5zcmMpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgYSA9ICQoJyNidG5fb3BlbiBhJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9kZXJlZmVyZXJcLndlYnNpdGUkLywKICAgIHF1ZXJ5OiAvXlw/KC4rKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsobS5xdWVyeVsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5kZXdhdXJsXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJy5mcmFtZWRSZWRpcmVjdFRvcEZyYW1lJyk7CiAgICAkLmdldChmLnNyYykudGhlbihmdW5jdGlvbiAoaHRtbCkgewogICAgICBodG1sID0gJC50b0RPTShodG1sKTsKICAgICAgdmFyIGEgPSAkKCcjY29udGludWVCdXR0b24gPiBhJywgaHRtbCk7CiAgICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgIF8ud2FybihlKTsKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmRpa2l0XC5pbiQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGEgPSAkKCcuZGlzY2xhaW1lciBhJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LmR1bXBwaXguY29tL3ZpZXdlci5waHA/KicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJC4kKCcjYm9yaW5nJyk7CiAgICBpZiAoaSkgewogICAgICAkLm9wZW5MaW5rKGkuc3JjKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgaSA9ICQoJ3RhYmxlIHRkOm50aC1jaGlsZCgxKSBhJyk7CiAgICAkLm9wZW5MaW5rKGkuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eZHVybFwubWUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2FbY2xhc3M9InByb2NlZWRCdG4iXScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvZWFzeXVybFwubmV0fChhdHV8Y2xpY2t0aHJ1fHJlZGlyZWN0c3xyZWFkdGhpcylcLmNhfGdvc2hyaW5rXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJ2ZyYW1lW25hbWU9bWFpbl0nKTsKICAgICQub3BlbkxpbmsoZi5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvZW1waXJlbG9hZFwuY29tJC8sCiAgICBwYXRoOiAvXlwvcGx1Z2luXC5waHAkLywKICAgIHF1ZXJ5OiAvXlw/aWQ9bGlua291dCZ1cmw9KFteJl0rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAkLm9wZW5MaW5rKG0ucXVlcnlbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiBbCiAgICAJL15ldGhpXC5pbiQvLAogICAgCS9ec3RcLndhcmRoYW5pbWVcLm5ldCQvLAogICAgXSwKICAgIHBhdGg6IC9eXC9pXC9cZCskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyN3cmFwcGVyID4gW2NsYXNzXj0idG9tYm8iXSA+IGFbdGFyZ2V0PSJfYmxhbmsiXScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/Zmlsb29wcy5pbmZvJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyN0ZXh0ID4gY2VudGVyIGEsICN0ZXh0ID4gZGl2W2FsaWduPWNlbnRlcl0gYScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmZpdFwuc2gkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCcuY29udGFpbmVyLWJvZHknKTsKICAgIHZhciBtID0gJC5zZWFyY2hTY3JpcHRzKC90b2tlbj0iKFteIl0rKSIvKTsKICAgIGlmICghbSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzaXRlIGNoYW5nZWQnKTsKICAgIH0KICAgIG0gPSBtWzFdOwogICAgdmFyIGludGVyTGluayA9ICcvZ28vJyArIG0gKyAnP2ZhPTE1NDY2JmE9JyArIHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAkLm9wZW5MaW5rKGludGVyTGluayk7CiAgICB9LCA2MDAwKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTp7CiAgICBob3N0Oi9eKHd3d1wuKT9maXV4eVwubmV0JC8sCiAgICBwYXRoOi9eXC9saW5rXC9cPy4qJC8KICB9LAogIHJlYWR5OmZ1bmN0aW9uKCl7CiAgICAkLm9wZW5MaW5rKCQoJ2EuYnRuLmEnKS5ocmVmKTsKICB9Cn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnd3d1wuZm9yYmVzXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbyA9ICQud2luZG93Lm94X3pvbmVzOwogICAgaWYgKG8pIHsKICAgICAgJC5vcGVuTGluayhvLnBhZ2VfdXJsKTsKICAgIH0KICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLmZyZWUtdHYtdmlkZW8tb25saW5lXC5pbmZvJC8sCiAgICBwYXRoOiAvXlwvaW50ZXJzdGl0aWFsMlwuaHRtbCQvLAogICAgcXVlcnk6IC9sbms9KFteJl0rKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB1cmwgPSBkZWNvZGVVUklDb21wb25lbnQobS5xdWVyeVsxXSk7CiAgICAkLm9wZW5MaW5rKHVybCk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXih3d3dcLik/ZnVuZHVybFwuY29tJC8sCiAgICAgIHF1ZXJ5OiAvaT0oW14mXSspLywKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICAgJC5vcGVuTGluayhtLnF1ZXJ5WzFdKTsKICAgIH0sCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eKHd3d1wuKT9mdW5kdXJsXC5jb20kLywKICAgICAgcGF0aDogL15cLyhnby1cdyt8bG9hZFwucGhwKSQvLAogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBmID0gJCgnaWZyYW1lW25hbWU9ZnBhZ2UzXScpOwogICAgICAkLm9wZW5MaW5rKGYuc3JjKTsKICAgIH0sCiAgfSk7Cn0pKCk7CihmdW5jdGlvbiAoKSB7CiAgdmFyIGhvc3RzID0gL15nY2FcLnNofHJlcGxhXC5jciQvOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0cywKICAgICAgcGF0aDogL15cL2FkdlwvXHcrXC8oLiopJC8sCiAgICAgIHF1ZXJ5OiAvXiguKikkLywKICAgICAgaGFzaDogL14oLiopJC8sCiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICd1c2Ugc3RyaWN0JzsKICAgICAgdmFyIGwgPSBtLnBhdGhbMV0gKyBtLnF1ZXJ5WzFdICsgbS5oYXNoWzFdOwogICAgICAkLm9wZW5MaW5rKGwpOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogaG9zdHMsCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgJ3VzZSBzdHJpY3QnOwogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgdmFyIGpRdWVyeSA9ICQud2luZG93LiQ7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGpRdWVyeSgiI2NhcHRjaGEtZGlhbG9nIikuZGlhbG9nKCJvcGVuIik7CiAgICAgIH0sIDEwMDApOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15na3VybFwudXMkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaWZyYW1lID0gJCgnI2drdXJsLWZyYW1lJyk7CiAgICAkLm9wZW5MaW5rKGlmcmFtZS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnVcLmdvMlwubWUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaWZyYW1lID0gJCgnaWZyYW1lJyk7CiAgICAkLm9wZW5MaW5rKGlmcmFtZS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmhvdHNob3J0dXJsXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZnJhbWUgPSAkKCdmcmFtZVtzY3JvbGxpbmc9eWVzXScpOwogICAgJC5vcGVuTGluayhmcmFtZS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/KGlsaXhcLmlufHByaXZhXC51cykkLywKICAgIHBhdGg6IC9cLyhcdyspLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIHJlYWxIb3N0ID0gJ2lsaXguaW4nOwogICAgaWYgKG0uaG9zdFsyXSAhPT0gcmVhbEhvc3QpIHsKICAgICAgdmFyIHJlYWxVUkwgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UobS5ob3N0WzJdLCByZWFsSG9zdCk7CiAgICAgICQub3BlbkxpbmsocmVhbFVSTCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHZhciBmID0gJC4kKCdpZnJhbWVbbmFtZT1pZnJhbV0nKTsKICAgIGlmIChmKSB7CiAgICAgICQub3BlbkxpbmsoZi5zcmMpOwogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoISQuJCgnaW1nI2NhcHRjaGEnKSkgewogICAgICAkKCdmb3JtW25hbWU9ZnJtXScpLnN1Ym1pdCgpOwogICAgfQogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXml0d1wubWUkLywKICAgIHBhdGg6IC9eXC9yXC8vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBmID0gJCgnLmdvLWZvcm0nKTsKICAgIGYuc3VibWl0KCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaXR5XC5pbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBmID0gJC4kKCcjbWFpbicpOwogICAgaWYgKGYpIHsKICAgICAgJC5vcGVuTGluayhmLnNyYyk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGYgPSAkLiQkKCdmcmFtZScpLmZpbmQoZnVuY3Rpb24gKGZyYW1lKSB7CiAgICAgIGlmIChmcmFtZS5zcmMuaW5kZXhPZignaW50ZXJoZWFkZXIucGhwJykgPCAwKSB7CiAgICAgICAgcmV0dXJuIF8ubm9uZTsKICAgICAgfQogICAgICByZXR1cm4gZnJhbWUuc3JjOwogICAgfSk7CiAgICBpZiAoZikgewogICAgICAkLm9wZW5MaW5rKGYucGF5bG9hZCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGYgPSAkLnNlYXJjaFNjcmlwdHMoL2tyeXB0ZWQ9KFteJl0rKS8pOwogICAgaWYgKCFmKSB7CiAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ3NpdGUgY2hhbmdlZCcpOwogICAgfQogICAgZiA9IGZbMV07CiAgICB2YXIgZGF0YSA9ICQud2luZG93LmRlcygna3Nuc2xtdG1rMHY0UGR2aXVzYWpxdScsICQud2luZG93LmhleFRvU3RyaW5nKGYpLCAwLCAwKTsKICAgIGlmIChkYXRhKSB7CiAgICAgICQub3BlbkxpbmsoJ2h0dHA6Ly9pdHkuaW0vMTEwNF8yMV81MDg0Nl8nICsgZGF0YSk7CiAgICB9CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9raW5nb2ZzaHJpbmtcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBsID0gJCgnI3RleHRyZXN1bHQgPiBhJyk7CiAgICAkLm9wZW5MaW5rKGwuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9sZWVjaGJkXC50ayQvLAogICAgcGF0aDogL15cL1Nob3J0ZW5lclwvKFx3KykkLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5nZXQoJy9TaG9ydGVuZXIvQVBJL3JlYWQvZ2V0Jywge2lkOiBtLnBhdGhbMV0sIHR5cGU6ICdqc29uJ30pLnRoZW4oZnVuY3Rpb24gKHRleHQpIHsKICAgICAgdmFyIHIgPSBfLnBhcnNlSlNPTih0ZXh0KTsKICAgICAgaWYgKHIuc3VjY2VzcyA9PSB0cnVlICYmIHIuZGF0YS5mdWxsKSB7CiAgICAgICAgJC5vcGVuTGluayhyLmRhdGEuZnVsbCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgXy53YXJuKCdBUEkgRXJyb3IgJyArIHIuZXJyb3IuY29kZSArICcgOiAnICsgci5lcnJvci5tc2cpOwogICAgICB9CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15sZWVjaHByZW1pdW1cLnNwYWNlJC8sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjYnRuLW1haW4nKTsKICAgIHZhciBpID0gYS5ocmVmLmxhc3RJbmRleE9mKCdodHRwJyk7CiAgICBhID0gYS5ocmVmLnN1YnN0cihpKTsKICAgICQub3BlbkxpbmsoYSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LmxpZW5zY2FzaC5jb20vbC8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjcmVkaXJfYnRuJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9cdytcLmxpbmstcHJvdGVjdG9yXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkKCdmb3JtW3N0eWxlPSJmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEyO2ZvbnQtZmFtaWx5OlZlcmRhbmE7Il0nKTsKICAgICQub3BlbkxpbmsoZi5hY3Rpb24pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/bGlua1wuaW0kLywKICAgIHBhdGg6IC9eXC9cdyskLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnBvc3QoZG9jdW1lbnQubG9jYXRpb24uaHJlZiwgewogICAgICBpbWFnZTogJ0NvbnRpbnVlJywKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRleHQpIHsKICAgICAgdmFyIG0gPSB0ZXh0Lm1hdGNoKC93aW5kb3dcLmxvY2F0aW9uXC5yZXBsYWNlXCgnKFteJ10rKSdcKS8pOwogICAgICAkLm9wZW5MaW5rKG1bMV0pOwogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9cLmxpbmsyZG9sbGFyXC5jb20kLywKICAgIHBhdGg6IC9eXC9cZCskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvdmFyIHJsaW5rID0gJyhbXiddKyknOy8pOwogICAgaWYgKCFtKSB7CiAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ3NpdGUgY2hhbmdlZCcpOwogICAgfQogICAgbSA9IG1bMV07CiAgICAkLm9wZW5MaW5rKG0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmxpbmsyeW91XC5ydSQvLAogICAgcGF0aDogL15cL1xkK1wvKC4rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdXJsID0gbS5wYXRoWzFdOwogICAgaWYgKCF1cmwubWF0Y2goL15odHRwcz86XC9cLy8pKSB7CiAgICAgIHVybCA9ICcvLycgKyB1cmw7CiAgICB9CiAgICAkLm9wZW5MaW5rKHVybCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ebGluayg0YWR8YWpjKVwuY29tJC8sCiAgICBwYXRoOiAvXlwvKC4rKSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZCA9ICQoJ2RpdltpZF49bW9kdWxlX10nKTsKICAgIGQgPSBkLmlkLm1hdGNoKC9tb2R1bGVfKFxkKykvKTsKICAgIGQgPSBkWzFdOwogICAgJC5wb3N0KCdmb3JtLnBocD9ibG9ja19pZD0nICsgZCwgewogICAgICBjbWQ6ICdnZXRfc291cmNlJywKICAgICAgYWN0OiAnd2FpdGluZycsCiAgICAgIGlkOiBtLnBhdGhbMV0sCiAgICB9KS50aGVuKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgJC5vcGVuTGluayh1cmwpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgXy53YXJuKGUpOwogICAgfSk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIGZ1bmN0aW9uIHNlbmRSZXF1ZXN0IChvcHRzKSB7CiAgICByZXR1cm4gJC5wb3N0KCcvYWpheC9yLnBocCcsIG9wdHMpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgaWYgKGRhdGEubGVuZ3RoIDw9IDEpIHsKICAgICAgICByZXR1cm4gc2VuZFJlcXVlc3Qob3B0cyk7CiAgICAgIH0KICAgICAgdmFyIGEgPSAkLnRvRE9NKGRhdGEpOwogICAgICBhID0gJCgnYScsIGEpOwogICAgICByZXR1cm4gYS5ocmVmOwogICAgfSk7CiAgfQogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXmxpbms1c1wuY29tJC8sCiAgICAgIHBhdGg6IC9eXC8oW15cL10rKSQvLAogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgICAkLndpbmRvdy4kID0gbnVsbDsKICAgICAgdmFyIGkgPSAkKCcjaWZyYW1lSUQnKTsKICAgICAgdmFyIG9wdHMgPSB7CiAgICAgICAgcGFnZTogbS5wYXRoWzFdLAogICAgICAgIGFkdklEOiBpLmRhdGFzZXQuY21wLAogICAgICAgIHU6IGkuZGF0YXNldC51LAogICAgICB9OwogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgc2VuZFJlcXVlc3Qob3B0cykudGhlbihmdW5jdGlvbiAodXJsKSB7CiAgICAgICAgJC5vcGVuTGluayh1cmwpOwogICAgICB9KTsKICAgIH0sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5saW5rYXJ1c1wuY29tJC8sCiAgICBwYXRoOiAvXlwvc2tpcFwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBtID0gJC5zZWFyY2hTY3JpcHRzKC9hY3Rpb249IihbXiJdKykiLyk7CiAgICBtID0gbVsxXTsKICAgICQub3BlbkxpbmsobSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5saW5rYXJ1c1wuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvdmFyIGNvdW50ZXIgPSAoXGQrKTsvKTsKICAgIG0gPSBwYXJzZUludChtWzFdLCAxMCk7CiAgICBtID0gbSAqIDEwMDAgKyA1MDA7CiAgICBfLndhaXQobSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBhID0gJCgnI3NraXAtYWQnKTsKICAgICAgJC5vcGVuTGluayhhLmhyZWYpOwogICAgfSk7CiAgfSwKfSk7CihmdW5jdGlvbigpIHsKICBmdW5jdGlvbiBDb252ZXJ0RnJvbUhleCAoc3RyKSB7CiAgICB2YXIgcmVzdWx0ID0gW107CiAgICB3aGlsZSAoc3RyLmxlbmd0aCA+PSAyKSB7CiAgICAgIHJlc3VsdC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoc3RyLnN1YnN0cmluZygwLCAyKSwgMTYpKSk7CiAgICAgIHN0ciA9IHN0ci5zdWJzdHJpbmcoMiwgc3RyLmxlbmd0aCk7CiAgICB9CiAgICByZXR1cm4gcmVzdWx0LmpvaW4oIiIpOwogIH0KICB2YXIgRW5jb2RlID0gZnVuY3Rpb24gKHN0cikgewogICAgdmFyIHMgPSBbXSwgaiA9IDAsIHgsIHJlcyA9ICcnLCBrID0gYXJndW1lbnRzLmNhbGxlZS50b1N0cmluZygpLnJlcGxhY2UoL1xzKy9nLCAiIik7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgaSsrKSB7CiAgICAgIHNbaV0gPSBpOwogICAgfQogICAgZm9yIChpID0gMDsgaSA8IDI1NjsgaSsrKSB7CiAgICAgIGogPSAoaiArIHNbaV0gKyBrLmNoYXJDb2RlQXQoaSAlIGsubGVuZ3RoKSkgJSAyNTY7CiAgICAgIHggPSBzW2ldOwogICAgICBzW2ldID0gc1tqXTsKICAgICAgc1tqXSA9IHg7CiAgICB9CiAgICBpID0gMDsKICAgIGogPSAwOwogICAgZm9yICh2YXIgeSA9IDA7IHkgPCBzdHIubGVuZ3RoOyB5KyspIHsKICAgICAgaSA9IChpICsgMSkgJSAyNTY7CiAgICAgIGogPSAoaiArIHNbaV0pICUgMjU2OwogICAgICB4ID0gc1tpXTsKICAgICAgc1tpXSA9IHNbal07CiAgICAgIHNbal0gPSB4OwogICAgICByZXMgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShzdHIuY2hhckNvZGVBdCh5KSBeIHNbKHNbaV0gKyBzW2pdKSAlIDI1Nl0pOwogICAgfQogICAgcmV0dXJuIHJlczsKICB9OwogIHZhciBob3N0UnVsZXMgPSBbCiAgICAvXigoW1x3XXs4fXx3d3cpXC4pPyhhbGxhbmFscGFzc3xjYXNoNGZpbGVzfGRyc3RpY2t5ZmluZ2Vyc3xmYXBvZmZ8ZnJlZWdheXNpdGVwYXNzfChnb25lfHR1YmUpdmlyYWx8KHBpY3x0bmEpYnVja3N8d2hhY2t5dmlkenxmdWVzdGZrYSlcLmNvbSQvLAogICAgL14oKFtcd117OH18d3d3KVwuKT8oYVttbl15fGRlYnxkeW98c2V4cGFsYWNlKVwuZ3MkLywKICAgIC9eKChbXHddezh9fHd3dylcLik/KGZpbGVzb250aGV8cG9vbnRvd258c2VyaW91c2RlYWxzfHVsdHJhZmlsZXN8dXJsYmVhdHxlYWZ5ZnN1aHxzYXNvbnRud2N8emF0bmF3cXkpXC5uZXQkLywKICAgIC9eKChbXHddezh9fHd3dylcLik/ZnJlZWFuXC51cyQvLAogICAgL14oKFtcd117OH18d3d3KVwuKT9nYWxsZXJpZXNcLmJ6JC8sCiAgICAvXigoW1x3XXs4fXx3d3cpXC4pP2hvcm55d29vZFwudHYkLywKICAgIC9eKChbXHddezh9fHd3dylcLik/bGluayhiYWJlc3xidWNrcylcLmNvbSQvLAogICAgL14oKFtcd117OH18d3d3KVwuKT8obWVnYWxpbmV8bWluaXVybHN8cXFjfHJxcXx0aW55bGlua3N8eXl2fHpmZilcLmNvJC8sCiAgICAvXigoW1x3XXs4fXx3d3cpXC4pPyh0aGVzZShibG9nfGZvcnVtKXMpXC5jb20kLywKICAgIC9eKChbXHddezh9fHd3dylcLik/eW91ZmFwXC5tZSQvLAogICAgL153YXJuaW5nLXRoaXMtbGlua2NvZGUtd2lsbC1jZWFzZS13b3JraW5nLXNvb25cLnd3d1wubGlua2J1Y2tzZG5zXC5jb20kLywKICBdOwogIChmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBmdW5jdGlvbiBmaW5kVG9rZW4gKGNvbnRleHQpIHsKICAgICAgdmFyIHNjcmlwdCA9ICQuc2VhcmNoU2NyaXB0cygnICAgIHZhciBmID0gd2luZG93W1wnaW5pdFwnICsgXCdMYlwnICsgXCdqc1wnICsgXCdcJ10nLCBjb250ZXh0KTsKICAgICAgaWYgKCFzY3JpcHQpIHsKICAgICAgICBfLndhcm4oJ3BhdHRlcm4gY2hhbmdlZCcpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHZhciBhZHVybCA9IHNjcmlwdC5tYXRjaCgvQWRVcmxccyo6XHMqJyhbXiddKyknLyk7CiAgICAgIGlmICghYWR1cmwpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICBhZHVybCA9IGFkdXJsWzFdOwogICAgICB2YXIgbTEgPSBzY3JpcHQubWF0Y2goL0FkUG9wVXJsXHMqOlxzKicuK1w/W149XSs9KFtcd1xkXSspJy8pOwogICAgICB2YXIgbTIgPSBzY3JpcHQubWF0Y2goL1Rva2VuXHMqOlxzKicoW1x3XGRdKyknLyk7CiAgICAgIHZhciB0b2tlbiA9IG0xWzFdIHx8IG0yWzFdOwogICAgICB2YXIgbSA9IHNjcmlwdC5tYXRjaCgvPVxzKihcZCspOy8pOwogICAgICB2YXIgYWsgPSBwYXJzZUludChtWzFdLCAxMCk7CiAgICAgIHZhciByZSA9IC9cK1xzKihcZCspOy9nOwogICAgICB2YXIgdG1wID0gbnVsbDsKICAgICAgd2hpbGUoKG0gPSByZS5leGVjKHNjcmlwdCkpICE9PSBudWxsKSB7CiAgICAgICAgdG1wID0gbVsxXTsKICAgICAgfQogICAgICBhayArPSBwYXJzZUludCh0bXAsIDEwKTsKICAgICAgcmV0dXJuIHsKICAgICAgICB0OiB0b2tlbiwKICAgICAgICBhSzogYWssCiAgICAgICAgYWR1cmw6IGFkdXJsLAogICAgICB9OwogICAgfQogICAgZnVuY3Rpb24gc2VuZFJlcXVlc3QgKHRva2VuKSB7CiAgICAgICQuZ2V0KHRva2VuLmFkdXJsKTsKICAgICAgZGVsZXRlIHRva2VuLmFkdXJsOwogICAgICB0b2tlbi5hX2IgPSBmYWxzZTsKICAgICAgXy5pbmZvKCd3YWl0aW5nIHRoZSBpbnRlcnZhbCcpOwogICAgICByZXR1cm4gXy53YWl0KDUwMDApLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF8uaW5mbygnc2VuZGluZyB0b2tlbjogJW8nLCB0b2tlbik7CiAgICAgICAgcmV0dXJuICQuZ2V0KCcvaW50ZXJtaXNzaW9uL2xvYWRUYXJnZXRVcmwnLCB0b2tlbiwgewogICAgICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiBfLm5vbmUsCiAgICAgICAgICBPcmlnaW46IF8ubm9uZSwKICAgICAgICB9KTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgICAgIHZhciBkYXRhID0gXy5wYXJzZUpTT04odGV4dCk7CiAgICAgICAgXy5pbmZvKCdyZXNwb25zZTogJW8nLCBkYXRhKTsKICAgICAgICBpZiAoIWRhdGEuU3VjY2VzcyAmJiBkYXRhLkVycm9yc1swXSA9PT0gJ0ludmFsaWQgdG9rZW4nKSB7CiAgICAgICAgICBfLndhcm4oJ2dvdCBpbnZhbGlkIHRva2VuJyk7CiAgICAgICAgICByZXR1cm4gcmV0cnkoKTsKICAgICAgICB9CiAgICAgICAgaWYgKGRhdGEuQWRCbG9ja1Nwb3R0ZWQpIHsKICAgICAgICAgIF8ud2FybignYWRibG9jayBzcG90dGVkJyk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChkYXRhLlN1Y2Nlc3MgJiYgIWRhdGEuQWRCbG9ja1Nwb3R0ZWQgJiYgZGF0YS5VcmwpIHsKICAgICAgICAgIHJldHVybiBkYXRhLlVybDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgZnVuY3Rpb24gcmV0cnkgKCkgewogICAgICByZXR1cm4gJC5nZXQod2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCksIHt9LCB7CiAgICAgICAgJ1gtRm9yd2FyZGVkLUZvcic6ICQuZ2VuZXJhdGVSYW5kb21JUCgpLAogICAgICB9KS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAgICAgdmFyIGQgPSAkLnRvRE9NKHRleHQpOwogICAgICAgIHZhciB0ID0gZmluZFRva2VuKGQpOwogICAgICAgIGlmICghdCkgewogICAgICAgICAgcmV0dXJuIF8ud2FpdCgxMDAwKS50aGVuKHJldHJ5KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHNlbmRSZXF1ZXN0KHQpOwogICAgICB9KTsKICAgIH0KICAgICQucmVnaXN0ZXIoewogICAgICBydWxlOiB7CiAgICAgICAgaG9zdDogaG9zdFJ1bGVzLAogICAgICAgIHBhdGg6IC9eXC9cdytcL3VybFwvKC4rKSQvLAogICAgICB9LAogICAgICByZWFkeTogZnVuY3Rpb24obSkgewogICAgICAgICQucmVtb3ZlQWxsVGltZXIoKTsKICAgICAgICAkLnJlc2V0Q29va2llcygpOwogICAgICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgICAgIHZhciB1cmwgPSBtLnBhdGhbMV0gKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoOwogICAgICAgIHZhciBtYXRjaCA9ICQuc2VhcmNoU2NyaXB0cygvVXJsRW5jb2RlZDogKFteLF0rKS8pOwogICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSA9PT0gJ3RydWUnKSB7CiAgICAgICAgICB1cmwgPSBFbmNvZGUoQ29udmVydEZyb21IZXgodXJsKSk7CiAgICAgICAgfQogICAgICAgICQub3BlbkxpbmsodXJsKTsKICAgICAgfQogICAgfSk7CiAgICAkLnJlZ2lzdGVyKHsKICAgICAgcnVsZTogewogICAgICAgIGhvc3Q6IGhvc3RSdWxlcywKICAgICAgfSwKICAgICAgc3RhcnQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAkLndpbmRvdy5YTUxIdHRwUmVxdWVzdCA9IF8ubm9wOwogICAgICB9LAogICAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICAgICQucmVtb3ZlQWxsVGltZXIoKTsKICAgICAgICAkLnJlc2V0Q29va2llcygpOwogICAgICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZigndmVyaWZ5JykgPj0gMCkgewogICAgICAgICAgdmFyIHBhdGggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgnL3ZlcmlmeScsICcnKTsKICAgICAgICAgICQub3BlbkxpbmsocGF0aCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIHZhciB0b2tlbiA9IGZpbmRUb2tlbihkb2N1bWVudCk7CiAgICAgICAgc2VuZFJlcXVlc3QodG9rZW4pLnRoZW4oZnVuY3Rpb24gKHVybCkgewogICAgICAgICAgJC5vcGVuTGluayh1cmwpOwogICAgICAgIH0pOwogICAgICB9LAogICAgfSk7CiAgICAkLnJlZ2lzdGVyKHsKICAgICAgcnVsZTogewogICAgICAgIHF1ZXJ5OiAvXiguKilbPyZdX2xiR2F0ZT1cZCskLywKICAgICAgfSwKICAgICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICAgJC5zZXRDb29raWUoJ19sYkdhdGVQYXNzZWQnLCAndHJ1ZScpOwogICAgICAgICQub3Blbkxpbmsod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgbS5xdWVyeVsxXSk7CiAgICAgIH0sCiAgICB9KTsKICB9KSgpOwp9KSgpOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiBbCiAgICAgIC9ed3d3XC5saW5rZGVjb2RlXC5jb20kLywKICAgICAgL153d3dcLmZhc3RkZWNvZGVcLmNvbSQvLAogICAgXSwKICAgIHBhdGg6IC9eXC8kLywKICAgIHF1ZXJ5OiAvXlw/KC4rKSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBsbmsgPSBtLnF1ZXJ5WzFdOwogICAgaWYgKG0ucXVlcnlbMV0ubWF0Y2goL15odHRwcz86XC9cLy8pKSB7CiAgICAJJC5vcGVuTGluayhsbmspOwogICAgCXJldHVybjsKICAgIH0KICAgIHZhciBiID0gJC4kKCcjcG9wdXAnKTsKICAgIGlmIChiICYmIGIuaHJlZikgewogICAgICAkLm9wZW5MaW5rKGIuaHJlZik7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGIgPSAkKCcjbSA+IC5WaXNpdF9MaW5rJyk7CiAgICBiID0gYi5vbmNsaWNrLnRvU3RyaW5nKCkubWF0Y2goL3dpbmRvd1wub3BlblwoXCcoW14nXSspXCcvKTsKICAgIGlmICghYikgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlcigncGF0dGVybiBjaGFuZ2VkJyk7CiAgICB9CiAgICBsbmsgPSBiWzFdLm1hdGNoKC9cPyhodHRwcz86XC9cLy4qKSQvKTsKICAgIGlmIChsbmspIHsKICAgICAgICAkLm9wZW5MaW5rKGxua1sxXSk7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgJC5vcGVuTGluayhiWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2xpbmtkcm9wXC5uZXQkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBtYXRjaGVzID0gJC5zZWFyY2hTY3JpcHRzKC9cJFwoImFcLnJlZGlyZWN0IlwpXC5hdHRyXCgiaHJlZiIsIihbXiJdKykiXClcLnRleHQvKTsKICAgIGlmICghbWF0Y2hlcykgewogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgbCA9IG1hdGNoZXNbMV07CiAgICAkLm9wZW5MaW5rKGwpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/bGlua3BsdWdhcHBcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JwogICAgdmFyIGEgPSAkKCcjbWNfZW1iZWRfc2lnbnVwX3Njcm9sbCBhJykKICAgICQub3BlbkxpbmsoYS5ocmVmKQogIH0sCn0pCiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ebGlua3Nhc1wudXMkLywKICAgIHBhdGg6IC9eKFwvXHcrKSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBfLnRyeSgxMDAwLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciByZWNhcHRjaGEgPSAkKCcjZy1yZWNhcHRjaGEtcmVzcG9uc2UnKTsKICAgICAgaWYgKCFyZWNhcHRjaGEpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICBpZiAoIXJlY2FwdGNoYS52YWx1ZSkgewogICAgICAgIHJldHVybiBfLm5vbmU7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlY2FwdGNoYS52YWx1ZTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlY2FwdGNoYSkgewogICAgICB2YXIgdXJsID0gXy5UKCdodHRwOi8vaXBpbmZvLmlvL3swfS9qc29uJykoJC5nZW5lcmF0ZVJhbmRvbUlQKCkpOwogICAgICByZXR1cm4gJC5nZXQodXJsKS50aGVuKGZ1bmN0aW9uIChpcGluZm8pIHsKICAgICAgICBpcGluZm8gPSBfLnBhcnNlSlNPTihpcGluZm8pOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb2RlQWRzOiAxLAogICAgICAgICAgY291bnRyeTogaXBpbmZvLmNvdW50cnksCiAgICAgICAgICBpcEFkZHJlc3M6IGlwaW5mby5pcCwKICAgICAgICAgIHJlY2FwdGNoYTogcmVjYXB0Y2hhLAogICAgICAgIH07CiAgICAgIH0pOwogICAgfSkudGhlbihmdW5jdGlvbiAocGF5bG9hZCkgewogICAgICB2YXIgdG9rZW4gPSAkLmdldENvb2tpZSgnWFNSRi1UT0tFTicpOwogICAgICByZXR1cm4gJC5wb3N0KCcvZ28nICsgbS5wYXRoWzFdLCBwYXlsb2FkLCB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAnWC1YU1JGLVRPS0VOJzogdG9rZW4sCiAgICAgIH0pOwogICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICBkYXRhID0gXy5wYXJzZUpTT04oZGF0YSk7CiAgICAgICQub3BlbkxpbmsoZGF0YS5tZXNzYWdlKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgIF8ud2FybihlKTsKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmxpbmtzYXNcLnVzJC8sCiAgICBwYXRoOiAvXlwvZ29cLy8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkLiQoJyNidG5TdWJtaXQnKTsKICAgIGlmICghYSkgewogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgdXJsID0gYS5ocmVmOwogICAgdmFyIHBhdHRlcm4gPSAvaHR0cHM/OlwvXC8vZzsKICAgIHZhciBsYXN0VVJMID0gJyc7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICB2YXIgbWF0Y2hlZCA9IHBhdHRlcm4uZXhlYyh1cmwpOwogICAgICBpZiAoIW1hdGNoZWQpIHsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBsYXN0VVJMID0gbWF0Y2hlZCArIHVybC5zdWJzdHJpbmcocGF0dGVybi5sYXN0SW5kZXgpOwogICAgfQogICAgJC5vcGVuTGluayhsYXN0VVJMKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15saW5rc2hyaW5rXC5uZXQkLywKICAgIHBhdGg6IC9eXC9bYS16QS1aMC05XSskLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLndpbmRvdy5faW1wc3BjYWJlID0gMDsKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbCA9ICQoJyNza2lwIC5idCcpOwogICAgJC5vcGVuTGluayhsLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmxpbmtzaHJpbmtcLm5ldCQvLAogICAgcGF0aDogLz0oLispJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsobS5wYXRoWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9saXguaW4vLSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQuJCgnI2liZGMnKTsKICAgIGlmIChpKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGkgPSAkLiQoJ2Zvcm0nKTsKICAgIGlmIChpKSB7CiAgICAgIGkuc3VibWl0KCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGkgPSAkKCdpZnJhbWUnKTsKICAgICQub3BlbkxpbmsoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmxua1wuaW4kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNkaXZSZWRpcmVjdFRleHQgYScpOwogICAgJC5vcGVuTGluayhhLmlubmVySFRNTCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHJkPylsbmtcLmNvfHJlZHVjZWxua1wuY29tJC8sCiAgICBwYXRoOiAvXlwvW14uXSskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQuJCgnaWZyYW1lI2Rlc3QnKTsKICAgIGlmIChmKSB7CiAgICAgICQub3BlbkxpbmsoZi5zcmMpOwogICAgICByZXR1cm47CiAgICB9CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciBvID0gJC4kKCcjdXJsaG9sZGVyJyk7CiAgICBpZiAobykgewogICAgICAkLm9wZW5MaW5rKG8udmFsdWUpOwogICAgICByZXR1cm47CiAgICB9CiAgICBvID0gJC4kKCcjc2tpcEJ0bicpOwogICAgaWYgKG8pIHsKICAgICAgbyA9IG8ucXVlcnlTZWxlY3RvcignYScpOwogICAgICAkLm9wZW5MaW5rKG8uaHJlZik7CiAgICAgIHJldHVybjsKICAgIH0KICAgIG8gPSBkb2N1bWVudC50aXRsZS5yZXBsYWNlKC8oTE5LLmNvfExpbmtiZWUpXHMqOlxzKi8sICcnKTsKICAgICQub3Blbkxpbmsobyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ebG54XC5sdXx1cmxcLmZtfHpcLmdzJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjY2xpY2tidG4gYScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/bG9vb2tcLmdhJC8sCiAgICBwYXRoOiAvXlwvXGQrJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjZG93bmxvYWRfbGluayA+IGEuYnRuJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgICdodHRwOi8vbWFkbGluay5zay8nLAogICAgJ2h0dHA6Ly9tYWRsaW5rLnNrLyouaHRtbCcsCiAgXSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vbWFkbGluay5zay8qJywKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgJC5wb3N0KCcvYWpheC9jaGVja19yZWRpcmVjdC5waHAnLCB7CiAgICAgIGxpbms6IG1bMV0sCiAgICB9KS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAgICQub3BlbkxpbmsodGV4dCk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogWwogICAgICAvXm1hbnRbYWVdW3BiXVwuaW4kLywKICAgICAgL15zdFwub3Bsb3ZlcnpcLm5ldCQvLAogICAgICAvXm1pbmlkcm9pZFwubmV0JC8sCiAgICAgIC9ec3VzdXRpblwuY29tJC8sCiAgICAgIC9ed3czXC5hd2FyZW1teHZcLmNvbSQvLAogICAgXSwKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2EucmVkaXJlY3QsIGFbdGFyZ2V0PV9ibGFua11bcmVsPW5vZm9sbG93XScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnd3d1wubWlqZVwubmV0JC8sCiAgICBwYXRoOiAvXlwvXHcrXC8oLispJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB1cmwgPSBhdG9iKG0ucGF0aFsxXSk7CiAgICAkLm9wZW5MaW5rKHVybCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IFsKICAgICAgL15tb2VcLmdvZFwuanAkLywKICAgICAgL15tb2VzdWJzXC5ha3VyYXBvcG9cLnBybyQvLAogICAgICAvXmRsXC5uc2ZrXC5pbiQvLAogICAgXQogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnZGl2IGRpdiBjZW50ZXIgYScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXm10MFwub3JnJC8sCiAgICBwYXRoOiAvXlwvW15cL10rXC8kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdmcmFtZVtuYW1lPWJvdHRvbV0nKTsKICAgIHZhciBmID0gJCgnZnJhbWVbbmFtZT10b3BdJyk7CiAgICB2YXIgaSA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGEgPSAkLiQoJ2RpdiBhJywgZi5jb250ZW50RG9jdW1lbnQpOwogICAgICBpZiAoIWEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgY2xlYXJJbnRlcnZhbChpKTsKICAgICAgJC5vcGVuTGluayhhLmhyZWYpCiAgICB9LCAxMDAwKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9teS1saW5rLnByby8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCdpZnJhbWVbc2Nyb2xsaW5nPWF1dG9dJyk7CiAgICBpZiAoaSkgewogICAgICAkLm9wZW5MaW5rKGkuc3JjKTsKICAgIH0KICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15uc2Z3XC5pbiQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnI2xvbmdfdXJsIGEnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15udXRzaGVsbHVybFwuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGlmcmFtZSA9ICQoJ2lmcmFtZScpOwogICAgJC5vcGVuTGluayhpZnJhbWUuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP29obGVlY2hcLmNvbSQvLAogICAgcGF0aDogL15cL2RsXC8kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLndpbmRvdy5zdGFydGRsKCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5vbmlcLnZuJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgZGF0YSA9ICQuc2VhcmNoU2NyaXB0cygvZGF0YToiKFteIl0rKSIvKTsKICAgIGlmICghZGF0YSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdwYXR0ZXJuIGNoYW5nZWQnKTsKICAgIH0KICAgIGRhdGEgPSBkYXRhWzFdOwogICAgJC5nZXQoJy9jbGljay5odG1sJywgZGF0YSkudGhlbihmdW5jdGlvbiAodXJsKSB7CiAgICAgICQub3BlbkxpbmsodXJsKTsKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/b3VvXC5pbyQvLAogICAgcGF0aDogL15cL2dvXC9cdyskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjYnRuLW1haW4nKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15veHlsXC5tZSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBsID0gJC4kJCgnLmxpbmtzLWNvbnRhaW5lci5yZXN1bHQtZm9ybSA+IGEucmVzdWx0LWEnKTsKICAgIGlmIChsLnNpemUoKSA+IDEpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgJC5vcGVuTGluayhsLmF0KDApLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnBcLnB3JC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvd2luZG93XC5sb2NhdGlvbiA9ICIoLiopIjsvKTsKICAgIG0gPSBtWzFdOwogICAgJC5vcGVuTGluayhtKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP1x3K1wucmFwZWl0XC5uZXQkLywKICAgIHBhdGg6IC9eXC8oZ298cHJlcGFpcnxyZXF1ZXN0fGNvbGxlY3R8YW5hbHl6ZSlcL1thLWYwLTldKyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2EjZG93bmxvYWRfbGluaycpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL3JlZmZidXguY29tL3JlZmZsaW54L3ZpZXcvKicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIG0gPSAkLnNlYXJjaFNjcmlwdHMoL3NraXBfdGhpc19hZF8oXGQrKV8oXGQrKS8pOwogICAgdmFyIGlkID0gbVsxXTsKICAgIHZhciBzaGFyZSA9IG1bMl07CiAgICB2YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24udG9TdHJpbmcoKTsKICAgICQucG9zdCgnaHR0cDovL3JlZmZidXguY29tL3JlZmZsaW54L3JlZ2lzdGVyJywgewogICAgICBpZDogaWQsCiAgICAgIHNoYXJlOiBzaGFyZSwKICAgICAgZnA6IDAsCiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbiwKICAgICAgcmVmZXJlcjogJycsCiAgICB9KS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAgIHZhciBtID0gdGV4dC5tYXRjaCgvJyhbXiddKyknLyk7CiAgICAgIGlmICghbSkgewogICAgICAgIHRocm93IG5ldyBfLkFkc0J5cGFzc2VyRXJyb3IoJ3BhdHRlcm4gY2hhbmdlZCcpOwogICAgICB9CiAgICAgICQub3BlbkxpbmsobVsxXSk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9yaWNobGluay5jb20vYXBwL3dlYnNjcj9jbWQ9X2NsaWNrJmtleT0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkKCdmcmFtZXNldCcpOwogICAgZiA9IGYub25sb2FkLnRvU3RyaW5nKCk7CiAgICBmID0gZi5tYXRjaCgvdXJsPShbXiZdKykvKTsKICAgIGlmIChmKSB7CiAgICAgIGYgPSBkZWNvZGVVUklDb21wb25lbnQoZlsxXSk7CiAgICB9IGVsc2UgewogICAgICBmID0gJCgnZnJhbWVbbmFtZT1zaXRlXScpOwogICAgICBmID0gZi5zcmM7CiAgICB9CiAgICAkLm9wZW5MaW5rKGYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL3JpamFsaXRpLmluZm8vKi5waHAnLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNtYWluIHRkW2FsaWduPSJjZW50ZXIiXSBhJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ecml1cmxcLmNvbSQvLAogICAgcGF0aDogL15cLy4rLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgcyA9ICQuJCgnYm9keSBzY3JpcHQnKTsKICAgIGlmIChzKSB7CiAgICAgIHMgPSBzLmlubmVySFRNTC5pbmRleE9mKCd3aW5kb3cubG9jYXRpb24ucmVwbGFjZScpOwogICAgICBpZiAocyA+PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9CiAgICAkLm9wZW5MaW5rKCcnLCB7CiAgICAgIHBhdGg6IHsKICAgICAgICBoaWRkZW46ICcxJywKICAgICAgICBpbWFnZTogJyAnLAogICAgICB9LAogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ecHJldmlld1wucmx1XC5ydSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnI2NvbnRlbnQgPiAubG9uZ191cmwgPiBhJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ecm9ib1wudXMkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciB1cmwgPSBhdG9iKCQud2luZG93LmZsKTsKICAgICQub3BlbkxpbmsodXJsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLnJvblwudm4kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgc2NyaXB0ID0gJC5zZWFyY2hTY3JpcHRzKCdsaW5rbmV4dHRvcCcpOwogICAgdmFyIGRhdGEgPSBzY3JpcHQubWF0Y2goL2RhdGE6IihbXiJdKykiLyk7CiAgICB2YXIgdXJsID0gJC53aW5kb3cuZG9tYWluICsgJ2NsaWNrLmh0bWw/JyArIGRhdGFbMV07CiAgICAkLmdldCh1cmwsIHt9LCB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsCiAgICB9KS50aGVuKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgJC5vcGVuTGluayh1cmwpOwogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9zYVwuYWUkLywKICAgIHBhdGg6IC9eXC9cdytcLyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBtID0gJC5zZWFyY2hTY3JpcHRzKC92YXIgcmVhbF9saW5rID0gJyhbXiddKyknOy8pOwogICAgJC5vcGVuTGluayhtWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3NhZmV1cmxcLmV1JC8sCiAgICBwYXRoOiAvXC9cdysvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBkaXJlY3RVcmwgPSAkLnNlYXJjaFNjcmlwdHMoL3dpbmRvd1wub3BlblwoIihbXiJdKykiXCk7Lyk7CiAgICBpZiAoIWRpcmVjdFVybCkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzY3JpcHQgY29udGVudCBjaGFuZ2VkJyk7CiAgICB9CiAgICBkaXJlY3RVcmwgPSBkaXJlY3RVcmxbMV07CiAgICAkLm9wZW5MaW5rKGRpcmVjdFVybCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IFsKICAgICAgL15zZWdtZW50bmV4dFwuY29tJC8sCiAgICAgIC9eKHd3d1wuKT92aWRlb2dhbWVzYmxvZ2dlci5jb20kLywKICAgIF0sCiAgICBwYXRoOiAvXlwvaW50ZXJzdGl0aWFsXC5odG1sJC8sCiAgICBxdWVyeTogL3JldHVybl91cmw9KFteJl0rKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsoZGVjb2RlVVJJQ29tcG9uZW50KG0ucXVlcnlbMV0pKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pPyhhcHBsb2FkelwucnV8c2VvbWFmaWFcLm5ldCkkLwogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGEgPSAkKCd0YWJsZSBhJyk7CiAgICAkLm9wZW5MaW5rKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IC9odHRwOlwvXC9zZXRsaW5rc1wudXNcLyhwfHR8ZCkuKi8sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBrID0gJC5zZWFyY2hTY3JpcHRzKC93aW5kb3dcLmxvY2F0aW9uPScoW14nXSspJy8pOwogICAgaWYgKGspIHsKICAgICAgJC5vcGVuTGluayhrWzFdKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGFMaW5rcyA9ICQuJCQoJ2Rpdi5saW5rcy1jb250YWluZXIucmVzdWx0LWZvcm06bm90KC5wLWxpbmtzLWNvbnRhaW5lcikgPiBzcGFuLmRsaW5rcyA+IGEnKTsKICAgIGlmIChhTGlua3Muc2l6ZSgpID09PSAxKSB7CiAgICAgICQub3BlbkxpbmsoYUxpbmtzLmF0KDApLmhyZWYpOwogICAgICByZXR1cm47CiAgICB9CiAgICBrID0gJCgnaW1nW2FsdD1jYXB0Y2hhXScpOwogICAgJC5jYXB0Y2hhKGsuc3JjLCBmdW5jdGlvbiAoYSkgewogICAgICB2YXIgYiA9ICQoJyNjYXB0Y2hhJyk7CiAgICAgIHZhciBjID0gJCgnaW5wdXRbbmFtZT1TdWJtaXRdJyk7CiAgICAgIGIudmFsdWUgPSBhOwogICAgICBjLmNsaWNrKCk7CiAgICB9KTsKICB9LAp9KTsKKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgZnVuY3Rpb24gYWZ0ZXJHb3RTZXNzaW9uSWQgKHNlc3Npb25JZCkgewogICAgdmFyIFhfTmV3UmVsaWNfSUQgPSAkLnNlYXJjaFNjcmlwdHMoL3hwaWQ6IihbXiJdKykiLyk7CiAgICB2YXIgZGF0YSA9IHsKICAgICAgYWRTZXNzaW9uSWQ6IHNlc3Npb25JZCwKICAgIH07CiAgICB2YXIgaGVhZGVyID0gewogICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQnLAogICAgfTsKICAgIGlmIChYX05ld1JlbGljX0lEKSB7CiAgICAgIGhlYWRlclsnWC1OZXdSZWxpYy1JRCddID0gWF9OZXdSZWxpY19JRDsKICAgIH0KICAgIHZhciBpID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAkLmdldCgnL3Nob3J0ZXN0LXVybC9lbmQtYWRzZXNzaW9uJywgZGF0YSwgaGVhZGVyKS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAgICAgdmFyIHIgPSBfLnBhcnNlSlNPTih0ZXh0KTsKICAgICAgICBpZiAoci5zdGF0dXMgPT0gIm9rIiAmJiByLmRlc3RpbmF0aW9uVXJsKSB7CiAgICAgICAgICBjbGVhckludGVydmFsKGkpOwogICAgICAgICAgJC5yZW1vdmVBbGxUaW1lcigpOwogICAgICAgICAgdmFyIHVybCA9IGRlY29kZVVSSUNvbXBvbmVudChyLmRlc3RpbmF0aW9uVXJsKTsKICAgICAgICAgICQub3BlbkxpbmsodXJsKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwgMTAwMCk7CiAgfQogIHZhciBob3N0UnVsZXMgPSAvXnNoXC5zdHwoZGgxMHRoYnZ1fHUya3N8am53MClcLmNvbXxkaWdnXC50byQvOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0UnVsZXMsCiAgICAgIHBhdGg6IC9eXC9mcmVlemVcLy4rLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgbyA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHsKICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobXV0YXRpb24pIHsKICAgICAgICAgIGlmIChtdXRhdGlvbi50YXJnZXQuZ2V0QXR0cmlidXRlKCdjbGFzcycpLm1hdGNoKC9hY3RpdmUvKSkgewogICAgICAgICAgICBvLmRpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgJC5vcGVuTGluayhtdXRhdGlvbi50YXJnZXQuaHJlZik7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBvLm9ic2VydmUoJCgnI3NraXBfYnV0dG9uJyksIHsKICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLAogICAgICAgIGF0dHJpYnV0ZUZpbHRlcjogWydjbGFzcyddLAogICAgICB9KTsKICAgIH0sCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IGhvc3RSdWxlcywKICAgICAgcGF0aDogL2h0dHBzPzpcL1wvLywKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgd2luZG93LmxvY2F0aW9uLnNlYXJjaCArIHdpbmRvdy5sb2NhdGlvbi5oYXNoOwogICAgICB1cmwgPSB1cmwubWF0Y2goLyhodHRwcz86XC9cLy4qKSQvKTsKICAgICAgdXJsID0gdXJsWzFdOwogICAgICAkLm9wZW5MaW5rKHVybCk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0UnVsZXMsCiAgICAgIHBhdGg6IC9eXC9bXGRcd10rLywKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKCkgewogICAgICAkLndpbmRvdy5faW1wc3BjYWJlID0gMDsKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgICAgJC5yZW1vdmVBbGxUaW1lcigpOwogICAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvc2Vzc2lvbklkOiAiKFtcZFx3XSspIiwvKTsKICAgICAgaWYgKG0pIHsKICAgICAgICBhZnRlckdvdFNlc3Npb25JZChtWzFdKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIG8gPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAobXV0YXRpb25zKSB7CiAgICAgICAgbXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24gKG11dGF0aW9uKSB7CiAgICAgICAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvc2Vzc2lvbklkOiAiKFtcZFx3XSspIiwvKTsKICAgICAgICAgIGlmIChtKSB7CiAgICAgICAgICAgIG8uZGlzY29ubmVjdCgpOwogICAgICAgICAgICBhZnRlckdvdFNlc3Npb25JZChtWzFdKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIG8ub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCB7CiAgICAgICAgY2hpbGRMaXN0OiB0cnVlLAogICAgICB9KTsKICAgIH0sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9zaGlua1wuaW4kLywKICAgIHBhdGg6IC9eXC9cdyskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJyNza2lwJyk7CiAgICBpZiAoISQuJCgnI2NhcHRjaGEnKSkgewogICAgICBmLnN1Ym1pdCgpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgZW52aW8gPSAkKCcjZW52aW8nKTsKICAgIGVudmlvLmRpc2FibGVkID0gZmFsc2U7CiAgICBlbnZpby5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7CiAgICBlbnZpby5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgdmFyIGVudmlvMiA9ICQoJyNlbnZpbzInKTsKICAgIGVudmlvMi5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnOwogICAgZW52aW8yLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgJC53aW5kb3cuJCgnI215TW9kYWwnKS5yZXZlYWwoKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3NoaW5rXC5pbiQvLAogICAgcGF0aDogL15cL2dvXC9cdyskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNidG4tbWFpbicpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiBbCiAgICAgIC9eKHd3d1wuKT9zaG9ydGVudXJsXC50ayQvLAogICAgICAvXih3d3dcLik/cGVuZ2FtYW5cLmxpbmskLywKICAgIF0sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBsID0gJCgnYS5idG4tYmxvY2sucmVkaXJlY3QnKTsKICAgICQub3BlbkxpbmsobC5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3Nob3J0aVwuZ2EkLywKICAgIHBhdGg6IFsKICAgICAgL15cL1x3KyQvLAogICAgICAvXlwvdXJsX3JlZGlyZWN0b3JcLmh0bWwkLywKICAgIF0sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkLiQkKCdmcmFtZScpOwogICAgdmFyIGZsID0gZi5maW5kKGZ1bmN0aW9uKHZhbHVlLCBrZXksIHNlbGYpIHsKICAgICAgaWYgKHZhbHVlLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSkgewogICAgICAgIHJldHVybiBfLm5vbmU7CiAgICAgIH0KICAgICAgcmV0dXJuICdUYXJnZXQgZnJhbWUgZm91bmQnOwogICAgfSk7CiAgICAkLm9wZW5MaW5rKGZsLnZhbHVlLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5zaG9ydHNraXBcLmNvbSQvLAogICAgcGF0aDogL15cL3Nob3J0XC5waHAkLywKICAgIHF1ZXJ5OiAvaT0oW14mXSspLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIHVybCA9IGRlY29kZVVSSUNvbXBvbmVudChtLnF1ZXJ5WzFdKTsKICAgICQub3BlbkxpbmsodXJsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15zaHRcLmlvJC8sCiAgICBwYXRoOiAvXlwvXGQrXC8oLispJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB1cmwgPSBhdG9iKG0ucGF0aFsxXSk7CiAgICB1cmwgPSB1cmwubWF0Y2goL1x7c2h0LWlvXH0oLispJC8pOwogICAgJC5vcGVuTGluayh1cmxbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/c2ltaWxhcnNpdGVzXC5jb20kLywKICAgIHBhdGg6IC9eXC9nb3RvXC8oW14/XSspLwogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbCA9IG0ucGF0aFsxXTsKICAgIGlmICghL15odHRwcz86XC9cLy8udGVzdChsKSkgewogICAgICBsID0gJ2h0dHA6Ly8nICsgbDsKICAgIH0KICAgICQub3BlbkxpbmsobCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5zcGFzdGVcLmNvbSQvLAogICAgcGF0aDogL15cL2dvXC9cdyskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaWQgPSAkLnNlYXJjaFNjcmlwdHMoL1x7aWQ6JyhcZCspJ1x9Lyk7CiAgICBfLndhaXQoMjAwMCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkLnBvc3QoJy9zaXRlL2dldFJlZGlyZWN0TGluaycsIHsKICAgICAgICBpZDogaWQsCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHVybCkgewogICAgICAgICQub3BlbkxpbmsodXJsKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15zcm5rXC5jbyQvLAogICAgcGF0aDogL15cL2lcLy8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkLiQoJyNidG4td2l0aC1saW5rJyk7CiAgICBpZiAoIWEpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGhyZWYgPSBhLmhyZWY7CiAgICB2YXIgbWV0aG9kID0gYS5kYXRhc2V0Lm1ldGhvZDsKICAgIGlmIChtZXRob2QpIHsKICAgICAgdmFyIGNzcmZQYXJhbSA9ICQoJ21ldGFbbmFtZT0iY3NyZi1wYXJhbSJdJykuY29udGVudDsKICAgICAgdmFyIGNzcmZUb2tlbiA9ICQoJ21ldGFbbmFtZT0iY3NyZi10b2tlbiJdJykuY29udGVudDsKICAgICAgdmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7CiAgICAgIGZvcm0ubWV0aG9kID0gJ3Bvc3QnOwogICAgICBmb3JtLmFjdGlvbiA9IGhyZWY7CiAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICAgIGlucHV0Lm5hbWUgPSAnX21ldGhvZCc7CiAgICAgIGlucHV0LnZhbHVlID0gbWV0aG9kOwogICAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0KTsKICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOwogICAgICBpbnB1dC5uYW1lID0gY3NyZlBhcmFtOwogICAgICBpbnB1dC52YWx1ZSA9IGNzcmZUb2tlbjsKICAgICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dCk7CiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7CiAgICAgIGZvcm0uc3VibWl0KCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgICQucG9zdChsb2NhdGlvbi5wYXRobmFtZSArICcuanMnKS50aGVuKGZ1bmN0aW9uIChzY3JpcHQpIHsKICAgICAgdmFyIG0gPSBzY3JpcHQubWF0Y2goL3ZhciBsaW5rID0gIihbXiJdKykiOy8pOwogICAgICBpZiAoIW0pIHsKICAgICAgICBfLndhcm4oJ3NjcmlwdCBjaGFuZ2VkJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgICQub3BlbkxpbmsobVsxXSk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15zdGFzaC1jb2luc1wuY29tJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi50b1N0cmluZygpOwogICAgdmFyIGkgPSB1cmwubGFzdEluZGV4T2YoJ2h0dHAnKTsKICAgIHVybCA9IHVybC5zdWJzdHIoaSk7CiAgICAkLm9wZW5MaW5rKHVybCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ec3RyZWFtaW5nZnJlbmNoXC5uZXQkLywKICAgIHBhdGg6IC9eXC8kLywKICAgIHF1ZXJ5OiAvXlw/eGI9KC4rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KG0ucXVlcnlbMV0pOwogICAgJC5vcGVuTGluayh1cmwpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/c3VwZXJjaGVhdHNcLmNvbSQvLAogICAgcGF0aDogL15cL2ludGVyc3RpdGlhbFwuaHRtbCQvLAogICAgcXVlcnk6IC8oPzpcP3wmKW9sZHVybD0oW14mXSspKD86JHwmKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsobS5xdWVyeVsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgIHsKICAgICAgaG9zdDogWwogICAgICAgIC9eKHd3d1wuKT9zeWxua1wubmV0JC8sCiAgICAgICAgL15kbG5la29cLihjb218bmV0fG9yZykkLywKICAgICAgICAvXnJ1bWFoc2ltcGVsXC5jb20kLywKICAgICAgXSwKICAgICAgcXVlcnk6IC9saW5rPShbXiZdKykvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogL14od3d3XC4pP2NvbXB1bFwuaW4kLywKICAgICAgcGF0aDogL15cL25cLnBocCQvLAogICAgICBxdWVyeTogL3Y9KFteJl0rKS8sCiAgICB9LAogICAgewogICAgICBob3N0OiAvXih3d3dcLik/c2FmZWxpbmthaXJcLmNvbSQvLAogICAgICBwYXRoOiAvXlwvY29kZSQvLAogICAgICBxdWVyeTogLyg/Olw/fCYpbGluaz0oW2EtekEtWjAtOT1dKykoPzokfCYpLywKICAgIH0sCiAgICB7CiAgICAgIGhvc3Q6IC9ebGlua1wuZmlsbWt1XC5uZXQkLywKICAgICAgcGF0aDogL15cL3BcL2dvXC5odG1sJC8sCiAgICAgIHF1ZXJ5OiAvXlw/dXJsPShbYS16QS1aMC05PV0rKSQvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogWwogICAgICAgIC9eKGdhZGdldHxhdXRvKTE0XC5wdyQvLAogICAgICAgIC9ebW90b3Nwb3J0XC5wdyQvLAogICAgICAgIC9ebmFyLTA0XC50ayQvLAogICAgICAgIC9ebGluZHVuZ1wuaW4kLywKICAgICAgXSwKICAgICAgcXVlcnk6IC9eXD9kPShbYS16QS1aMC05PV0rKSQvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogL153d3dcLmFuaXN1YnNpYVwudGskLywKICAgICAgcGF0aDogL15cL3BcL2xpbmtcLmh0bWwkLywKICAgICAgcXVlcnk6IC9eXD91cmw9KFthLXpBLVowLTk9XSspJC8sCiAgICB9LAogIF0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgcmF3TGluayA9IGF0b2IobS5xdWVyeVsxXSk7CiAgICAkLm9wZW5MaW5rKHJhd0xpbmspOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiBbCiAgICB7CiAgICAgIGhvc3Q6IFsKICAgICAgICAvXih3d3dcLik/KGxpbmtcLik/c2FmZWxpbmsoY29udmVydGVyMj98cz9yZXZpZXcpXC5jb20kLywKICAgICAgICAvXnN1c3V0aW5cLmNvbSQvLAogICAgICBdLAogICAgICBxdWVyeTogL2lkPShcdys9KikvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogWwogICAgICAgIC9eKHd3d1wuKT9kbG5la29cLmNvbSQvLAogICAgICAgIC9eKHNhdHVhc2lhfHRhd2FrdSlcLmNvbSQvLAogICAgICAgIC9ed3czXC5tYW50ZWJcLmluJC8sCiAgICAgICAgL15saW5rXC5maWxta3VcLm5ldCQvLAogICAgICAgIC9ed3d3XC5tdXVjaWhcLmNvbSQvLAogICAgICAgIC9eKG5haXNob3xmaWxta3UpXC5sb21wYXRcLmluJC8sCiAgICAgIF0sCiAgICAgIHF1ZXJ5OiAvZ289KFx3Kz0qKS8sCiAgICB9LAogIF0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbCA9IGF0b2IobS5xdWVyeVsxXSk7CiAgICB2YXIgdGFibGUgPSB7CiAgICAgICchJzogJ2EnLAogICAgICAnKSc6ICdlJywKICAgICAgJ18nOiAnaScsCiAgICAgICcoJzogJ28nLAogICAgICAnKic6ICd1JywKICAgIH07CiAgICBsID0gbC5yZXBsYWNlKC9bISlfKCpdL2csIGZ1bmN0aW9uIChtKSB7CiAgICAgIHJldHVybiB0YWJsZVttXTsKICAgIH0pOwogICAgJC5vcGVuTGluayhsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3NhZmVsaW5rcmV2aWV3XC5jb20kLywKICAgIHBhdGg6IC9eXC9cdytcL2Nvc3RcLyhbXHdcLl0rKVwvPyQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbCA9ICdodHRwOi8vJyArIG0ucGF0aFsxXTsKICAgICQub3BlbkxpbmsobCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9edGhpbmZpXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2RpdiBwIGEnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL150aW55YXJyb3dzXC5jb20kLywKICAgIHBhdGg6IC9eXC9wcmV2aWV3XC5waHAkLywKICAgIHF1ZXJ5OiAvXlw/cGFnZT0oW14mXSspLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5vcGVuTGluayhkZWNvZGVVUklDb21wb25lbnQobS5xdWVyeVsxXSkpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/dG90YWxkZWJyaWRcLm9yZyQvLAogICAgcGF0aDovXC9sXC8obFwucGhwKT8kLywKICAgIHF1ZXJ5OiAvXD9hZHM9KFthLXpBLVowLTk9XSspJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBsID0gYXRvYihtLnF1ZXJ5WzFdKTsKICAgICQub3BlbkxpbmsobCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT90eXBcLm1lJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnI3NraXBBZEJ0bicpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/dWx0c2hhcmVcLmNvbSQvLAogICAgcGF0aDogL15cLyg/Oig/OlxkLSk/KFxkKyl8aW5kZXhcLnBocCkkLywKICAgIHF1ZXJ5OiAvXig/Olw/YT1cZCZjPShcZCspKT8kLwogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbGlua0lkID0gbS5wYXRoWzFdP20ucGF0aFsxXTptLnF1ZXJ5WzFdOwogICAgdmFyIGRpcmVjdExpbmsgPSAnLzMtJyArIGxpbmtJZDsKICAgICQub3BlbkxpbmsoZGlyZWN0TGluayk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9edW5mYWtlXC5pdCQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBmcmFtZSA9ICQoJ2ZyYW1lJyk7CiAgICB2YXIgaSA9IGZyYW1lLnNyYy5sYXN0SW5kZXhPZignaHR0cDovLycpOwogICAgJC5vcGVuTGluayhmcmFtZS5zcmMuc3Vic3RyKGkpKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pPyh1cGFufGd4cClcLnNvJC8sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCd0YWJsZS50ZF9saW5lIGFbb25jbGljaz0iZG93bl9wcm9jZXNzX3MoKTsiXScpOwogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnVybFwuaWUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJ2FbdGl0bGU9IkxpbmsgdG8gb3JpZ2luYWwgVVJMIl0nKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL3VybGNhc2hcLihjb218bmV0fG9yZyl8KGJhdDV8ZGV0b25hdGluZ3xjZWxlYmNsa3xlaWdodHRlZW58c21pbGluZ2xpbmtzfHBlZWthdG15Z2lybGZyaWVuZHxwb3JueWhvc3R8Y2xiMXx1cmxnYWxsZXJpZXMpXC5jb218bG9vYmxlXC5uZXR8eHh4c1wub3JnJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgaWYgKCQud2luZG93ICYmICQud2luZG93LmxpbmtEZXN0VXJsKSB7CiAgICAgICQub3BlbkxpbmsoJC53aW5kb3cubGlua0Rlc3RVcmwpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgbWF0Y2hlcyA9IGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MLm1hdGNoKC9saW5rRGVzdFVybCA9ICcoLispJy8pOwogICAgaWYgKG1hdGNoZXMpIHsKICAgICAgJC5vcGVuTGluayhtYXRjaGVzWzFdKTsKICAgICAgcmV0dXJuOwogICAgfQogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnVybGlublwuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIG0gPSAkKCdNRVRBW0hUVFAtRVFVSVY9cmVmcmVzaF0nKS5nZXRBdHRyaWJ1dGUoJ0NPTlRFTlQnKS5tYXRjaCgvdXJsPScoW14nXSspJy8pOwogICAgaWYgKG0pIHsKICAgICAgJC5vcGVuTGluayhtWzFdKTsKICAgIH0KICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL151cmxtc1wuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGlmcmFtZSA9ICQoJyNjb250ZW50Jyk7CiAgICAkLm9wZW5MaW5rKGlmcmFtZS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/dXJsdjJcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoJ2xvY2tlZCcpID49IDApIHsKICAgICAgdmFyIHBhdGggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgnL2xvY2tlZCcsICcnKTsKICAgICAgJC5vcGVuTGluayhwYXRoKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIG0gPSAkLnNlYXJjaFNjcmlwdHMoL2pldG9uPShbXHddKykvKTsKICAgIHZhciBsID0gJ2h0dHA6Ly91cmx2Mi5jb20vYWxnby5waHA/YWN0aW9uPXBhc3NlciZweD0wJnNvPTEmamV0b249JyArIG1bMV07CiAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHskLm9wZW5MaW5rKGwpfSwgNTAwMCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT92aWN0bHlcLmNvbSQvLAogICAgcGF0aDogL15cL1x3KyQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucG9zdChkb2N1bWVudC5sb2NhdGlvbi5ocmVmLCB7CiAgICAgIGhpZGRlbjogJycsCiAgICAgIGltYWdlOiAnU2tpcCtBZHMnLAogICAgfSkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgICB2YXIgbSA9IHRleHQubWF0Y2goL3dpbmRvd1wubG9jYXRpb25cLnJlcGxhY2VcKCcoW14nXSspJ1wpLyk7CiAgICAgICQub3BlbkxpbmsobVsxXSk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLnZpaWRpaVwuaW5mbyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBvID0gJCgnI2RpcmVjdGxpbmsnKTsKICAgICQub3Blbkxpbmsoby5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3ZpclwuYWwkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvdmFyIHRhcmdldF91cmwgPSAnKFteJ10rKSc7Lyk7CiAgICBpZiAoIW0pIHsKICAgICAgdGhyb3cgbmV3IF8uQWRzQnlwYXNzZXJFcnJvcignc2l0ZSBjaGFuZ2VkJyk7CiAgICB9CiAgICAkLm9wZW5MaW5rKG1bMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/d3p6cVwubWUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB0cnkgewogICAgICB2YXIgbCA9ICQoJyNpbWdfbG9hZGluZ190YWJsZTIgIGRpdi53el9pbWdfaGl0IGFbdGFyZ2V0PV9ibGFua10nKS5ocmVmOwogICAgICAkLm9wZW5MaW5rKGwpOwogICAgfSBjYXRjaCAoZSkgewogICAgfQogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnhsaW5rLm1lJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNtYWluX2Zvcm0gPiBjZW50ZXIgPiBhJyk7CiAgICBpZiAoIWEpIHtyZXR1cm47fQogICAgJC5vcGVuTGluayhhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL3llcC5pdC9wcmV2aWV3LnBocD9wPSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbGluayA9ICQoJ2ZvbnRbY29sb3I9ImdyZXkiXScpLmlubmVySFRNTDsKICAgICQub3BlbkxpbmsobGluayk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3Lnlvb2NsaWNrLmNvbS9sLyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUnKTsKICAgIHZhciB1bmlxID0gJC53aW5kb3cudW5pcSB8fCAkLndpbmRvdy51bmlxaTsKICAgIGlmICghdW5pcSkge3JldHVybjt9CiAgICB2YXIgcGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsKICAgIHZhciB1cmwgPSBfLlQoJ3swfT9hamF4PXRydWUmYWRibG9jaz1mYWxzZSZvbGQ9ZmFsc2UmZnJhbWVkPWZhbHNlJnVuaXE9ezF9JykocGF0aCwgdW5pcSk7CiAgICB2YXIgZ2V0VVJMID0gZnVuY3Rpb24oKSB7CiAgICAgICQuZ2V0KHVybCkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgICAgIHZhciBnb29kVVJMID0gL14oaHR0cHM/fGZ0cCk6XC9cLygoKChbYS16XXxcZHwtfFwufF98fnxbXHUwMEEwLVx1RDdGRlx1RjkwMC1cdUZEQ0ZcdUZERjAtXHVGRkVGXSl8KCVbXGRhLWZdezJ9KXxbIVwkJidcKFwpXCpcKyw7PV18OikqQCk/KCgoXGR8WzEtOV1cZHwxXGRcZHwyWzAtNF1cZHwyNVswLTVdKVwuKFxkfFsxLTldXGR8MVxkXGR8MlswLTRdXGR8MjVbMC01XSlcLihcZHxbMS05XVxkfDFcZFxkfDJbMC00XVxkfDI1WzAtNV0pXC4oXGR8WzEtOV1cZHwxXGRcZHwyWzAtNF1cZHwyNVswLTVdKSl8KCgoW2Etel18XGR8W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pfCgoW2Etel18XGR8W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pKFthLXpdfFxkfC18XC58X3x+fFtcdTAwQTAtXHVEN0ZGXHVGOTAwLVx1RkRDRlx1RkRGMC1cdUZGRUZdKSooW2Etel18XGR8W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pKSlcLikrKChbYS16XXxbXHUwMEEwLVx1RDdGRlx1RjkwMC1cdUZEQ0ZcdUZERjAtXHVGRkVGXSl8KChbYS16XXxbXHUwMEEwLVx1RDdGRlx1RjkwMC1cdUZEQ0ZcdUZERjAtXHVGRkVGXSkoW2Etel18XGR8LXxcLnxffH58W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pKihbYS16XXxbXHUwMEEwLVx1RDdGRlx1RjkwMC1cdUZEQ0ZcdUZERjAtXHVGRkVGXSkpKVwuPykoOlxkKik/KShcLygoKFthLXpdfFxkfC18XC58X3x+fFtcdTAwQTAtXHVEN0ZGXHVGOTAwLVx1RkRDRlx1RkRGMC1cdUZGRUZdKXwoJVtcZGEtZl17Mn0pfFshXCQmJ1woXClcKlwrLDs9XXw6fEApKyhcLygoW2Etel18XGR8LXxcLnxffH58W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pfCglW1xkYS1mXXsyfSl8WyFcJCYnXChcKVwqXCssOz1dfDp8QCkqKSopPyk/KFw/KCgoW2Etel18XGR8LXxcLnxffH58W1x1MDBBMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0pfCglW1xkYS1mXXsyfSl8WyFcJCYnXChcKVwqXCssOz1dfDp8QCl8W1x1RTAwMC1cdUY4RkZdfFwvfFw/KSopPyhcIygoKFthLXpdfFxkfC18XC58X3x+fFtcdTAwQTAtXHVEN0ZGXHVGOTAwLVx1RkRDRlx1RkRGMC1cdUZGRUZdKXwoJVtcZGEtZl17Mn0pfFshXCQmJ1woXClcKlwrLDs9XXw6fEApfFwvfFw/KSopPyQvaS50ZXN0KHRleHQpOwogICAgICAgIGlmIChnb29kVVJMKSB7CiAgICAgICAgICAkLm9wZW5MaW5rKHRleHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzZXRUaW1lb3V0KGdldFVSTCwgNTAwKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgZ2V0VVJMKCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eeXNmXC5wbCQvLAogICAgcGF0aDogL15cLzNcLyguKykkLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIHVybCA9IGF0b2IobS5wYXRoWzFdKTsKICAgICQub3BlbkxpbmsodXJsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL155c2ZcLnBsJC8sCiAgICBwYXRoOiAvXlwvMlwvKC4rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdXJsID0gbS5wYXRoWzFdLm1hdGNoKC8uezJ9L2cpLm1hcChmdW5jdGlvbiAoaCkgewogICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChoLCAxNikpOwogICAgfSkuam9pbignJyk7CiAgICAkLm9wZW5MaW5rKHVybCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vem8ubXUvcmVkaXJlY3Rvci9wcm9jZXNzP2xpbms9KicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnp6elwuZ2wkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvdmFyIGRvbWFpbnVybCA9ICcoW14nXSspJzsvKTsKICAgIGlmICghbSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdzaXRlIGNoYW5nZWQnKTsKICAgIH0KICAgICQub3BlbkxpbmsobVsxXSk7CiAgfSwKfSk7CihmdW5jdGlvbiAoY29udGV4dCwgZmFjdG9yeSkgewogIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjb250ZXh0LCBHTSkgewogICAgICB2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpOwogICAgICB2YXIgY29yZSA9IHJlcXVpcmUoJy4vY29yZS5qcycpOwogICAgICB2YXIgZG9tID0gcmVxdWlyZSgnLi9kb20uanMnKTsKICAgICAgdmFyIGNvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnLmpzJyk7CiAgICAgIHZhciBsaW5rID0gcmVxdWlyZSgnLi9saW5rLmpzJyk7CiAgICAgIHZhciBtaXNjID0gcmVxdWlyZSgnLi9taXNjLmpzJyk7CiAgICAgIHZhciBtb2R1bGVzID0gW2RvbSwgY29uZmlnLCBsaW5rLCBtaXNjXS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdi5jYWxsKG51bGwsIGNvbnRleHQsIEdNKTsKICAgICAgfSk7CiAgICAgIHZhciAkID0gXy5hc3NpZ24uYXBwbHkoXywgbW9kdWxlcyk7CiAgICAgIHJldHVybiBmYWN0b3J5KGNvbnRleHQsIEdNLCBjb3JlLCAkKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIGZhY3RvcnkoY29udGV4dCwgewogICAgICBnZXRSZXNvdXJjZVRleHQ6IEdNX2dldFJlc291cmNlVGV4dCwKICAgICAgYWRkU3R5bGU6IEdNX2FkZFN0eWxlLAogICAgICBnZXRSZXNvdXJjZVVSTDogR01fZ2V0UmVzb3VyY2VVUkwsCiAgICB9LCBjb250ZXh0Ll8sIGNvbnRleHQuJCk7CiAgfQp9KHRoaXMsIGZ1bmN0aW9uIChjb250ZXh0LCBHTSwgXywgJCkgewogICd1c2Ugc3RyaWN0JzsKICB2YXIgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50OwogICQub3BlbkltYWdlID0gZnVuY3Rpb24gKGltZ1NyYywgb3B0aW9ucykgewogICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307CiAgICB2YXIgcmVwbGFjZSA9ICEhb3B0aW9ucy5yZXBsYWNlOwogICAgdmFyIHJlZmVyZXIgPSAhIW9wdGlvbnMucmVmZXJlcjsKICAgIGlmIChyZXBsYWNlKSB7CiAgICAgIHJlcGxhY2VCb2R5KGltZ1NyYyk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICgkLmNvbmZpZy5yZWRpcmVjdEltYWdlKSB7CiAgICAgICQub3BlbkxpbmsoaW1nU3JjLCB7CiAgICAgICAgcmVmZXJlcjogcmVmZXJlciwKICAgICAgfSk7CiAgICB9CiAgfTsKICBmdW5jdGlvbiBlbmFibGVTY3JvbGxpbmcgKCkgewogICAgdmFyIG8gPSBkb2N1bWVudC5jb21wYXRNb2RlID09PSAnQ1NTMUNvbXBhdCcgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgOiBkb2N1bWVudC5ib2R5OwogICAgby5zdHlsZS5vdmVyZmxvdyA9ICcnOwogIH07CiAgZnVuY3Rpb24gdG9nZ2xlU2hyaW5raW5nICgpIHsKICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYWRzYnlwYXNzZXItc2hyaW5rZWQnKTsKICB9CiAgZnVuY3Rpb24gY2hlY2tTY2FsaW5nICgpIHsKICAgIHZhciBudyA9IHRoaXMubmF0dXJhbFdpZHRoOwogICAgdmFyIG5oID0gdGhpcy5uYXR1cmFsSGVpZ2h0OwogICAgdmFyIGN3ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoOwogICAgdmFyIGNoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDsKICAgIGlmICgobncgPiBjdyB8fCBuaCA+IGNoKSAmJiAhdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2Fkc2J5cGFzc2VyLXJlc2l6YWJsZScpKSB7CiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnYWRzYnlwYXNzZXItcmVzaXphYmxlJyk7CiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnYWRzYnlwYXNzZXItc2hyaW5rZWQnKTsKICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZVNocmlua2luZyk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlU2hyaW5raW5nKTsKICAgICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKCdhZHNieXBhc3Nlci1zaHJpbmtlZCcpOwogICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2Fkc2J5cGFzc2VyLXJlc2l6YWJsZScpOwogICAgfQogIH0KICBmdW5jdGlvbiBzY2FsZUltYWdlIChpKSB7CiAgICB2YXIgc3R5bGUgPSBHTS5nZXRSZXNvdXJjZVRleHQoJ3NjYWxlSW1hZ2UnKTsKICAgIEdNLmFkZFN0eWxlKHN0eWxlKTsKICAgIGlmIChpLm5hdHVyYWxXaWR0aCAmJiBpLm5hdHVyYWxIZWlnaHQpIHsKICAgICAgY2hlY2tTY2FsaW5nLmNhbGwoaSk7CiAgICB9IGVsc2UgewogICAgICBpLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBjaGVja1NjYWxpbmcpOwogICAgfQogICAgdmFyIGg7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkgewogICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGgpOwogICAgICBoID0gd2luZG93LnNldFRpbWVvdXQoY2hlY2tTY2FsaW5nLmJpbmQoaSksIDEwMCk7CiAgICB9KTsKICB9CiAgZnVuY3Rpb24gY2hhbmdlQmFja2dyb3VuZCAoKSB7CiAgICB2YXIgYmdJbWFnZSA9IEdNLmdldFJlc291cmNlVVJMKCdiZ0ltYWdlJyk7CiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMjIyMjIyJzsKICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXy5UKCd1cmwoXCd7MH1cJyknKShiZ0ltYWdlKTsKICB9CiAgZnVuY3Rpb24gYWxpZ25DZW50ZXIgKCkgewogICAgdmFyIHN0eWxlID0gR00uZ2V0UmVzb3VyY2VUZXh0KCdhbGlnbkNlbnRlcicpOwogICAgR00uYWRkU3R5bGUoc3R5bGUpOwogIH0KICBmdW5jdGlvbiBpbmplY3RTdHlsZSAoZCwgaSkgewogICAgJC5yZW1vdmVOb2Rlcygnc3R5bGUsIGxpbmtbcmVsPXN0eWxlc2hlZXRdJyk7CiAgICBkLmlkID0gJ2Fkc2J5cGFzc2VyLXdyYXBwZXInOwogICAgaS5pZCA9ICdhZHNieXBhc3Nlci1pbWFnZSc7CiAgfQogIGZ1bmN0aW9uIHJlcGxhY2VCb2R5IChpbWdTcmMpIHsKICAgIGlmICghJC5jb25maWcucmVkaXJlY3RJbWFnZSkgewogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoIWltZ1NyYykgewogICAgICBfLndhcm4oJ2ZhbHNlIHVybCcpOwogICAgICByZXR1cm47CiAgICB9CiAgICBfLmluZm8oXy5UKCdyZXBsYWNpbmcgYm9keSB3aXRoIGB7MH1gIC4uLicpKGltZ1NyYykpOwogICAgJC5yZW1vdmVBbGxUaW1lcigpOwogICAgZW5hYmxlU2Nyb2xsaW5nKCk7CiAgICBkb2N1bWVudC5ib2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9keScpOwogICAgdmFyIGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZCk7CiAgICB2YXIgaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOwogICAgaS5zcmMgPSBpbWdTcmM7CiAgICBkLmFwcGVuZENoaWxkKGkpOwogICAgaWYgKCQuY29uZmlnLmFsaWduQ2VudGVyIHx8ICQuY29uZmlnLnNjYWxlSW1hZ2UpIHsKICAgICAgaW5qZWN0U3R5bGUoZCwgaSk7CiAgICB9CiAgICBpZiAoJC5jb25maWcuYWxpZ25DZW50ZXIpIHsKICAgICAgYWxpZ25DZW50ZXIoKTsKICAgIH0KICAgIGlmICgkLmNvbmZpZy5jaGFuZ2VCYWNrZ3JvdW5kKSB7CiAgICAgIGNoYW5nZUJhY2tncm91bmQoKTsKICAgIH0KICAgIGlmICgkLmNvbmZpZy5zY2FsZUltYWdlKSB7CiAgICAgIHNjYWxlSW1hZ2UoaSk7CiAgICB9CiAgfTsKICByZXR1cm4gJDsKfSkpOwokLnJlZ2lzdGVyKHsKICBydWxlOiBbCiAgICB7CiAgICAgIGhvc3Q6IC9eMWRsXC5iaXokLywKICAgICAgcGF0aDogL15cLyhcdylcLnBocCQvLAogICAgICBxdWVyeTogL15cPyhbXGRcL10rKSQvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogL15pbWdcLjFkbFwuYml6JC8sCiAgICAgIHBhdGg6IC9eXC8oXHcpXC5waHAkLywKICAgICAgcXVlcnk6IC9eXD9cd1wvKFtcZFwvXSspJC8sCiAgICB9LAogIF0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnLm1haW4gYSwgLm1haW4tbCBhJyk7CiAgICAkLm9wZW5JbWFnZShhLmhyZWYsIHsKICAgICAgcmVmZXJlcjogdHJ1ZSwKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXjFwaWNzXC5ydSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpbWcgPSAkKCdpbWdbYWx0JD0iMVBpY3MuUnUiXScpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC4oMmlcLihza3xjeil8MmltZ3NcLmNvbSkkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaW1nID0gJCgnI3dyYXAzIGltZycpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgIHsKICAgICAgaG9zdDogL15hXC5wb21mXC5zZSQvLAogICAgICBwYXRoOiAvXlwvLitcLmh0bSQvLAogICAgICBxdWVyeTogL14kLywKICAgIH0sCiAgICB7CiAgICAgIGhvc3Q6IC9eZW1waXJlbG9hZFwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC9zZXh5XC8uK1wuaHRtJC8sCiAgICAgIHF1ZXJ5OiAvXiQvLAogICAgfSwKICBdLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQuJCgnYm9keSA+IGEnKTsKICAgIGlmIChhKSB7CiAgICAgICQub3BlbkltYWdlKGEuaHJlZik7CiAgICAgIHJldHVybjsKICAgIH0KICAgICQucmVtb3ZlTm9kZXMoJyNib3hlcywgaWZyYW1lJyk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIGZ1bmN0aW9uIHJ1biAoKSB7CiAgICB2YXIgaSA9ICQoJyNpbWFnZScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL14od3d3XC4pP2ltYWdlKHBlYXJsfGJlcnlsKVwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC8odmVyaWZ5fHZpZXcpXC8oLispJC8sCiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICQub3BlbkxpbmsoJy9pbWFnZS8nICsgbS5wYXRoWzJdLCB7CiAgICAgICAgcmVmZXJlcjogZmFsc2UsCiAgICAgIH0pOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IFsKICAgICAgJ2h0dHA6Ly8qLmFibG9hZC5kZS9pbWFnZS5waHA/aW1nPSonLAogICAgICAnaHR0cDovL3d3dy5pbWFnZXVwLnJ1LyovKi8qLmh0bWwnLAogICAgICAnaHR0cDovL2l0bWFnZXMucnUvaW1hZ2Uvdmlldy8qLyonLAogICAgICB7CiAgICAgICAgaG9zdDogL14od3d3XC4pP2ltYWdlKHBlYXJsfGJlcnlsKVwuY29tJC8sCiAgICAgICAgcGF0aDogL15cL2ltYWdlXC8vLAogICAgICB9LAogICAgXSwKICAgIHJlYWR5OiBydW4sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eYXZlbnVleHh4XC5jb20kLywKICAgIHBhdGg6IC9eXC9hcmNoaXZlc1wvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNjb250ZW50IGltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmZyZWVpbWd1cFwuY29tJC8sCiAgICBwYXRoOiAvXlwveHh4LywKICAgIHF1ZXJ5OiAvXlw/dj0oW14mXSspLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5vcGVuSW1hZ2UoJy94eHgvaW1hZ2VzLycgKyBtLnF1ZXJ5WzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14oYjRoZXxmcmVlaW1ndXB8ZnVsbGltZylcLmNvbXxmYXN0cGljc1wubmV0fGlmYXBcLmNvJC8sCiAgICBxdWVyeTogL15cP3Y9KFteJl0rKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkltYWdlKCcvaW1hZ2VzLycgKyBtLnF1ZXJ5WzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15iYXlpbWdcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI21haW5JbWFnZScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmJlZWltZ1wuY29tJC8sCiAgICBwYXRoOiAvXC92aWV3XC8uKi8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGltZyA9ICQoJ2ltZy5pbWctcmVzcG9uc2l2ZScpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LmJpbGRlci1zcGFjZS5kZS8qLmh0bScsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGltZyA9ICQoJ2ltZy5waWN0dXJlJyk7CiAgICAkLm9wZW5JbWFnZShpbWcuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly93d3cuYmlsZGVyLXVwbG9hZC5ldS9zaG93LnBocD9maWxlPSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2lucHV0W3R5cGU9aW1hZ2VdJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vYmxhY2tjYXRwaXguY29tL3YucGhwPyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaW1nID0gJCgndGQgY2VudGVyIGltZycpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LmNhc2ltYWdlcy5jb20vaW1nLnBocD8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGltZyA9ICQoJ3RkIGEgaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpbWcuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLng0NXhcLmluZm98KGltYWR1bHxteXBpeHh4XC5sb25lc3Rhcm5hdWdodHlnaXJscylcLmNvbXxnaGFuYWltYWdlc1wuY298aW1ndXJiYW5cLmluZm98ZDY5XC5pbiQvLAogICAgcXVlcnk6IC9cP3BbbXRdPSguKykvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5JbWFnZSgnLz9kaT0nICsgbS5xdWVyeVsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vamF2ZWxpdGUudGsvdmlld2VyLnBocD9pZD0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCd0YWJsZSBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15pbWdjaGlsaVwuKGNvbXxuZXQpfHd3d1wucGl4aG9zdFwub3JnJC8sCiAgICBwYXRoOiAvXlwvc2hvd1wvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUsICNhZCcpOwogICAgdHJ5IHsKICAgICAgJCgnI2FsbCcpLnN0eWxlLmRpc3BsYXkgPSAnJzsKICAgIH0gY2F0Y2ggKGUpIHsKICAgIH0KICAgIHZhciBvID0gJCgnI3Nob3dfaW1hZ2UnKTsKICAgICQub3BlbkltYWdlKG8uc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15jcmRcLmh0JC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcuY29udGludWUgPiBmb3JtID4gaW5wdXRbbmFtZT1saW5rXScpOwogICAgJC5vcGVuSW1hZ2UoaS52YWx1ZSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vY3ViZXVwbG9hZC5jb20vaW0vKicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpbWcgPSAkKCdpbWcuZ2FsbGVyeUJpZ0ltZycpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IFsKICAgICAgL15kYWlseXNzXC5uZXQkLywKICAgICAgL2RhaWx5LWltZ1wuY29tJC8sCiAgICAgIC9pbWctMzY1XC5jb20kLywKICAgICAgL14zNjUtaW1nXC5jb20kLywKICAgICAgL15pXC5oZW50YWktZGRsXC5vcmckLywKICAgIF0sCiAgICBwYXRoOiAvXlwvaW1hZ2VcLy4rJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjaW1hZ2Utdmlld2VyLWNvbnRhaW5lciBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14oZGVwaWNcLm1lfCh3d3dcLik/cGljYW1hdGljXC5jb20pJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjcGljJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaW1nKGRpbm98dGlnZXJ8emFwKVwuY29tJC8sCiAgICBwYXRoOiAvXlwvdmlld2VyXC5waHAkLywKICAgIHF1ZXJ5OiAvXlw/ZmlsZT0vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBvID0gJCgnI2N1cnNvcl9sdXBhJyk7CiAgICAkLm9wZW5JbWFnZShvLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vKi5kaXJlY3R1cGxvYWQubmV0L2ZpbGUvKi5odG0nLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNJbWdGcmFtZScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmVoZHdhbGxwYXBlcnNcLm9yZyQvLAogICAgcGF0aDogL15cL2ltYWdlc1wvLiokLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJy5lbnRyeS1jb250ZW50LmNsZWFyZml4IGltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/ZW1waXJlbG9hZFwuY29tJC8sCiAgICBwYXRoOiAvXihcL2ltYWdlcyhcL2ZpbGVzXC9cdyk/KVwvLlwucGhwJC8sCiAgICBxdWVyeTogL15cP2xpbms9KC4rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5JbWFnZShtLnBhdGhbMV0gKyAnL2xpbmsvJyArIG0ucXVlcnlbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiBbCiAgICB7CiAgICAgIGhvc3Q6IFsKICAgICAgICAvXmVtcHR5cGl4XC5jb218b3ZlcmRyZWFtXC5jeiQvLAogICAgICAgIC9ed3d3XC5zZXhzZWVpbWFnZVwuY29tJC8sCiAgICAgIF0sCiAgICAgIHBhdGg6IC9eXC9pbWFnZVwvLywKICAgIH0sCiAgICB7CiAgICAgIGhvc3Q6IC9eMTBcLmltYWdlbGVvblwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC9pbWctKC4rKVwuaHRtbCQvLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogL15zZXh5eHBpeGVsc1wuY29tJC8sCiAgICAgIHF1ZXJ5OiAvXlw/dj0vLAogICAgfSwKICBdLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaW1nID0gJCgnI2Z1bGxfaW1hZ2UnKTsKICAgICQub3BlbkltYWdlKGltZy5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmZhc3RwaWNcLnJ1JC8sCiAgICBwYXRoOiAvXlwvdmlld1wvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaW1nID0gJCgnI3BpY0NvbnRhaW5lciAjaW1hZ2UnKTsKICAgICQub3BlbkltYWdlKGltZy5zcmMsIHsKICAgICAgcmVmZXJlcjogdHJ1ZSwKICAgIH0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL3d3dy5mb3RvbGluay5zdS92LnBocD9pZD0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjY29udGVudCBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly93d3cuZm90b3Npay5wbC9wb2thel9vYnJhemVrL3BlbG55LyouaHRtbCcsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnYS5ub2JvcmRlciBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15mcmVha2ltYWdlXC5jb218d3d3XC5ob3N0cGljXC5vcmckLywKICAgIHBhdGg6IC9eXC92aWV3XC5waHAkLywKICAgIHF1ZXJ5OiAvXlw/ZmlsZW5hbWU9KFteJl0rKS8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkltYWdlKCcvaW1hZ2VzLycgKyBtLnF1ZXJ5WzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15mcmVlaW1ndXBcLmNvbSQvLAogICAgcGF0aDogL15cL3h4eFwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaW1nID0gJCgnI21haW5pbWFnZScpOwogICAgJC5vcGVuSW1hZ2UoaW1nLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgICdodHRwOi8vZnVua3lpbWcuY29tL3ZpZXdlci5waHA/aW1nPSonLAogICAgJ2h0dHA6Ly9mdW5reWltZy5jb20vdmlldy8qJywKICBdLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyN2aWV3ZXIgaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9nYWxsZXJ5KG5vdmF8c2Vuc2UpXC5zZSQvLAogICAgcGF0aDogL15cL3NpdGVcL3ZcLy8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjbXlVbmlxdWVJbWcnKS5wYXJlbnROb2RlOwogICAgJC5vcGVuSW1hZ2UoaS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2dhbGxlcnlub3ZhXC5zZSQvLAogICAgcGF0aDogL15cL3NpdGVcL3ZpZXdJbWFnZVwvKFx3KykvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgY29uZmlybSA9ICQuc2VhcmNoU2NyaXB0cygvXCRcKCIjY29uZmlybUltYWdlIlwpLnZhbFwoIihbXiJdKykiXCkvKVsxXTsKICAgICQucG9zdCgnL3NpdGUvdmlld0NvbmZpcm1Db2RlLycgKyBtLnBhdGhbMV0sIHsKICAgICAgY29uZmlybTogY29uZmlybQogICAgfSkudGhlbihmdW5jdGlvbiAocmF3SnNvbikgewogICAgICB2YXIganNvbiA9IF8ucGFyc2VKU09OKHJhd0pzb24pOwogICAgICB2YXIgZGVjb2RlZEhUTUwgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShqc29uLmNvbnRlbnQpLmRhdGE7CiAgICAgIHZhciBpbWdVUkwgPSBkZWNvZGVkSFRNTC5tYXRjaCgvPGEgaHJlZj0iKFteIl0rKSIgdGFyZ2V0PSJfYmxhbmsiPi8pWzFdOwogICAgICAkLm9wZW5JbWFnZShpbWdVUkwpOwogICAgfSk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIHZhciBob3N0UnVsZSA9IC9eZ29pbWFnZWhvc3RcLmNvbSQvOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0UnVsZSwKICAgICAgcGF0aDogL15cL3h4eFwvaW1hZ2VzXC8vLAogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogaG9zdFJ1bGUsCiAgICAgIHBhdGg6IC9eXC94eHhcLyguKykvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgICAkLm9wZW5JbWFnZSgnL3h4eC9pbWFnZXMvJyArIG0ucGF0aFsxXSk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0UnVsZSwKICAgICAgcXVlcnk6IC9eXD92PSguKykvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgICAkLm9wZW5JbWFnZSgnL3h4eC9pbWFnZXMvJyArIG0ucXVlcnlbMV0pOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL3d3d1wuKGgtYW5pbWVzfGFkdWx0bW92ZSlcLmluZm8vLAogICAgcGF0aDogL15cLy4rXC8uK1wvLitcLmh0bWwkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJy5kbGJ1dHRvbjIgPiBhJyk7CiAgICAkLm9wZW5JbWFnZShhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2hlbnRhaW1nLmNvbS9tZy9sbmRleC0xLnBocD9pbWc9KicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsoJ2luZGV4LTEucGhwJyArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2hlbnRhaW1nLmNvbS9tZy9pbmRleC0xLnBocD9pbWc9KicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI2NvbnRlbnQgaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3Lmhvc3RpbmdwaWNzLm5ldC92aWV3ZXIucGhwP2lkPSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNpbWdfdmlld2VyJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaWNoYW5cLm9yZyQvLAogICAgcGF0aDogL15cL2ltYWdlXC5waHAkLywKICAgIHF1ZXJ5OiAvcGF0aD0oLispJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkltYWdlKCcvJyArIG0ucXVlcnlbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvaWNoYW5cLm9yZyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQuJCQoJ2EnKS5lYWNoKGZ1bmN0aW9uIChhKSB7CiAgICAgIGlmIChhLmhyZWYuaW5kZXhPZignL3VybC9odHRwOi8vJykgPiAtMSkgewogICAgICAgIGEuaHJlZiA9IGEuaHJlZi5yZXBsYWNlKC9odHRwOlwvXC8uK1wvdXJsXC8oPz1odHRwOlwvXC8pLywgJycpOwogICAgICB9CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9pZm90b3MucGwvem9iYWN6LyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQoJ21ldGFbcHJvcGVydHk9Im9nOmltYWdlIl0nKTsKICAgICQub3BlbkltYWdlKG0uY29udGVudCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaW1hXC5zbyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnI2ltYWdlX2Jsb2NrIGEnKTsKICAgICQub3BlbkltYWdlKGEuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgICdodHRwOi8vaW1hZ2UxOC5vcmcvc2hvdy8qJywKICAgICdodHRwOi8vc2NyZWVubGlzdC5ydS9kZXRhaWxzLnBocD9pbWFnZV9pZD0qJywKICAgICdodHRwOi8vd3d3LmltYWdlbmV0ei5kZS8qLyouaHRtbCcsCiAgXSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGltZyA9ICQoJyNwaWN0dXJlJyk7CiAgICAkLm9wZW5JbWFnZShpbWcuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15pbWFnZTJ5b3VcLnJ1JC8sCiAgICBwYXRoOiAvXlwvXGQrXC9cZCsvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJC4kKCdkaXYudF90aXBzMiBkaXYgPiBpbWcnKTsKICAgIGlmICghaSkgewogICAgICAkLm9wZW5MaW5rKCcnLCB7CiAgICAgICAgcG9zdDogewogICAgICAgICAgX2NvbmZpcm06ICcnLAogICAgICAgIH0sCiAgICAgIH0pOwogICAgICByZXR1cm47CiAgICB9CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vaW1hZ2Vhcm4uY29tL2ltYWdlLnBocD9pZD0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LmltYWdlYmFtLmNvbS9pbWFnZS8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIG8gPSAkKCcuaW1hZ2UtY29udGFpbmVyIGltZ1tpZF0nKTsKICAgICQub3BlbkltYWdlKG8uc3JjLCB7CiAgICAgIHJlcGxhY2U6IHRydWUsCiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15pbWFnZWhlbGlcLmNvbXxpbWd0dWJlXC5uZXR8cGl4bGl2XC5jb20kLywKICAgIHBhdGg6IC9eXC9pbWctKFthLXpBLVowLTlcLV0rKVwuLiskLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQuJCgnYVtyZWw9ImxpZ2h0Ym94Il0nKTsKICAgIGlmICghYSkgewogICAgICAkLm9wZW5MaW5rKCcnLCB7CiAgICAgICAgcG9zdDogewogICAgICAgICAgYnJvd3Nlcl9maW5nZXJwcmludDogJycsCiAgICAgICAgICBhZHM6ICcwJywKICAgICAgICB9LAogICAgICB9KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgJC5vcGVuSW1hZ2UoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly93d3cuaW1hZ2Vob3VzaW5nLmNvbS9pbWFnZS8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCd0ZC50ZXh0X2l0ZW0gaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vaW1hZ2Vuby5jb20vKi5odG1sJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjaW1hZ2VfZGl2IGltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2ltYWdlcGl4Lm9yZy9pbWFnZS8qLmh0bWwnLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2ltZ1tib3JkZXI9IjAiXScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICBmdW5jdGlvbiBydW4gKCkgewogICAgdmFyIG8gPSAkKCcjZG93bmxvYWRfYm94IGltZ1tpZF0nKTsKICAgICQub3BlbkltYWdlKG8uc3JjKTsKICB9CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9ed3d3XC5pbWFnZXBvcnRlclwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC9cd3sxMn1cLy4qXC5odG1sJC8sCiAgICB9LAogICAgcmVhZHk6IHJ1biwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL14od3d3XC4pPyhpbWFnZShjYXJyeXxkdW5rfHBvcnRlcnxzd2l0Y2gpfHBpYyhsZWV0fHR1cmVkaXB8dHVyZXR1cm4pfGltZ3NwaWNlKVwuY29tfChwaWNsYW1ib3x5YW5rb2ltYWdlcylcLm5ldCQvLAogICAgfSwKICAgIHJlYWR5OiBydW4sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgIHsKICAgICAgaG9zdDogL15pbWFnZXNjcmVhbVwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC9pbWdcLyhzb2Z0XC8pPy8sCiAgICB9LAogICAgewogICAgICBob3N0OiAvXih3d3dcLik/KHBpY3R1cmVzY3JlYW18cGljdHVyZXZpcClcLmNvbSQvLAogICAgICBwYXRoOiAvXlwveFwvLywKICAgIH0sCiAgICB7CiAgICAgIGhvc3Q6IFsKICAgICAgICAvXnBpY3R1cmVzY3JlYW1cLmFzaWEkLywKICAgICAgICAvXnVwbG9hZGltYWdlXC5ldSQvLAogICAgICBdLAogICAgfSwKICAgIHsKICAgICAgaG9zdDogL15wb3N0c2NyZWVuc1wuaW5mby8sCiAgICAgIHBhdGg6IC9eXC8uKi8sCiAgICB9LAogIF0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI3Nob3J0VVJMLWNvbnRlbnQgaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKGltYWdlc2NyZWFtfGFub25waWMpXC5jb218YWxsLXBvc3RlclwucnUkLywKICAgIHF1ZXJ5OiAvXlw/dj0vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI2ltYWdlbiBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15idW5ueWZvcnVtXC5vcmckLywKICAgIHF1ZXJ5OiAvXlw/dj0vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnaW1nW3RpdGxlXj1DbGlja10nKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIGhvc3QgPSAvXmltYWdlc2hhY2tcLnVzJC87CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IGhvc3QsCiAgICAgIHBhdGg6IC9eXC9waG90b1wvLitcLyguKylcLyhbXlwvXSspLywKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICAgJC5vcGVuSW1hZ2UoXy5UKCcvZi97MH0vezF9LycpKG0ucGF0aFsxXSwgbS5wYXRoWzJdKSk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBob3N0LAogICAgICBwYXRoOiAvXlwvZlwvLitcL1teXC9dKy8sCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGkgPSAkKCcjZnVsbGltZycpOwogICAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgICB9LAogIH0pOwp9KSgpOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2ltYWdlc2hvc3QucnUvcGhvdG8vKi9pZCouaHRtbCcsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnI2JwaG90byBhJyk7CiAgICAkLm9wZW5JbWFnZShhLmhyZWYpOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICBmdW5jdGlvbiBydW4gKCkgewogICAgdmFyIGkgPSAkKCcjaW1nX29iaicpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0KICBmdW5jdGlvbiBydW4yICgpIHsKICAgIHZhciBpID0gJCgnI2ltZ19vYmonKTsKICAgICQub3BlbkltYWdlKGkuc3JjLCB7CiAgICAgIHJlcGxhY2U6IHRydWUsCiAgICB9KTsKICB9CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiBbCiAgICAgIHsKICAgICAgICBob3N0OiAvXnd3d1wuKGZyZWVidW5rZXJ8aW1hZ2VzbmFrZXxpbWdjYXJyeXxpbWdzaG90cylcLmNvbSQvLAogICAgICAgIHBhdGg6IC9eXC9zaG93XC5waHAkLywKICAgICAgICBxdWVyeTogL15cPy8sCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBob3N0OiAvXnd3d1wuZnJlZWJ1bmtlclwuY29tJC8sCiAgICAgICAgcGF0aDogL15cL3Nob3dcLy8sCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBob3N0OiAvXnd3d1wuKGltYWdlc25ha2V8aW1hZ2VmcnVpdClcLmNvbSQvLAogICAgICAgIHBhdGg6IC9eXC8oaW1nfHNob3cpXC8uKy8sCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBob3N0OiAvXmltYWdlYmFuXC4ocnV8bmV0KSQvLAogICAgICAgIHBhdGg6IC9eXC9zaG93XC9cZHs0fVwvXGR7Mn1cL1xkezJ9XC8uKy8sCiAgICAgIH0sCiAgICAgICdodHRwOi8vZm90b28ucGwvc2hvdy5waHA/aW1nPSouaHRtbCcsCiAgICAgIHsKICAgICAgICBob3N0OiAvXnd3d1wuKGZvdG9zem9rXC5wbHxpbWFnZXN0aW1lKVwuY29tJC8sCiAgICAgICAgcGF0aDogL15cL3Nob3dcLnBocFwvLipcLmh0bWwkLywKICAgICAgfSwKICAgIF0sCiAgICByZWFkeTogcnVuLAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXnd3d1wuaW1nY2FycnlcLmNvbSQvLAogICAgICBwYXRoOiAvXlwvc2hvd1wvLywKICAgIH0sCiAgICByZWFkeTogcnVuMiwKICB9KTsKfSkoKTsKKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgZnVuY3Rpb24gcnVuIChycCkgewogICAgJC53aW5kb3cualF1ZXJ5LnByb3RvdHlwZS5hcHBlbmQgPSB1bmRlZmluZWQ7CiAgICB2YXIgaSA9ICQoJ2ltZy5waWMnKTsKICAgICQub3BlbkltYWdlKGkuc3JjLCB7CiAgICAgIHJlcGxhY2U6IHJwLAogICAgfSk7CiAgfQogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXmltYWdlbnBpY1wuY29tJC8sCiAgICAgIHBhdGg6IC9eXC8uKlwvLitcLmh0bWwkLywKICAgIH0sCiAgICByZWFkeTogXy5QKHJ1biwgdHJ1ZSksCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eaW1hZ2VjaGVycnlcLmNvbSQvLAogICAgfSwKICAgIHJlYWR5OiBfLlAocnVuLCB0cnVlKSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL15pbWFnZXR3aXN0XC5jb20kLywKICAgIH0sCiAgICByZWFkeTogXy5QKHJ1biwgZmFsc2UpLAogIH0pOwp9KSgpOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2ltYWdldXBwZXIuY29tL2kvPyonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogWwogICAgJ2h0dHA6Ly8qLmltYWdldmVudWUuY29tL2ltZy5waHA/KicsCiAgICAnaHR0cDovL2hvdGNoeXguY29tL2QvYWR1bHQtaW1hZ2UtaG9zdGluZy12aWV3LTA4LnBocD9pZD0qJywKICAgICdodHRwOi8vd3d3Lmhvc3RpbmdmYWlsb3YuY29tL3Bob3RvLyonLAogIF0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI3RoZXBpYycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmltYWdlemlsbGFcLm5ldCQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI3Bob3RvJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYywgewogICAgICByZWZlcmVyOiB0cnVlLAogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaW1hZ2lrXC5mciQvLAogICAgcGF0aDogL15cL3ZpZXcoLXJsKT9cLyguKykvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5JbWFnZSgnL3VwbG9hZHMvJyArIG0ucGF0aFsyXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vaW1nLjNlenkubmV0LyouaHRtJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGwgPSAkKCdsaW5rW3JlbD0iaW1hZ2Vfc3JjIl0nKTsKICAgICQub3BlbkltYWdlKGwuaHJlZik7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vaW1nMS5pbWFnaWxpdmUuY29tLyovKicsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJC4kKCcjcGFnZSBhLmJ1dHRvbicpOwogICAgaWYgKGEpIHsKICAgICAgJC5yZWRpcmVjdChhLmhyZWYpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgaSA9ICQoJyNwYWdlID4gaW1nOm5vdChbaWRdKScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmltZzI0XC5vcmckLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQuJCgnaW1nLmltZy1wb2xhcm9pZCArIGZvcm0nKTsKICAgIGlmIChmKSB7CiAgICAgIGYuc3VibWl0KCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGYgPSAkKCdpbWcuaW1nLXBvbGFyb2lkJyk7CiAgICAkLm9wZW5JbWFnZShmLnNyYywgewogICAgICByZWZlcmVyOiB0cnVlLAogICAgfSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaW1nM3hcLm5ldCQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBmID0gJC4kKCdmb3JtJyk7CiAgICBpZiAoZikgewogICAgICBmLnN1Ym1pdCgpOwogICAgICByZXR1cm47CiAgICB9CiAgICBmID0gJCgnI3Nob3dfaW1hZ2UnKTsKICAgICQub3BlbkltYWdlKGYuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLmltZyhiYWJlc3xmbGFyZSlcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJC4kKCdpbnB1dFtvbmNsaWNrXScpOwogICAgaWYgKGkpIHsKICAgICAgJC53aW5kb3cuRGVjb2RlKCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHZhciBpID0gJCgnI3RoaXNfaW1hZ2UnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15pbWdiYXJcLm5ldCQvLAogICAgcGF0aDogL15cL2ltZ19zaG93XC5waHAkLywKICAgIHF1ZXJ5OiAvXlw/dmlld19pZD0vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnY2VudGVyIGltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmltZ2JhclwubmV0JC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCdkaXYucGFuZWwudG9wIGZvcm0gaW5wdXRbbmFtZT1zaWRdJyk7CiAgICAkLm9wZW5MaW5rKCcvaW1nX3Nob3cucGhwP3ZpZXdfaWQ9JyArIGkudmFsdWUpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmltZ2JpblwubWUkLywKICAgIHBhdGg6IC9eXC92aWV3XC8oW0EtWl0rKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdHBsID0gXy5UKCcvaW1hZ2UvezB9LmpwZycpOwogICAgJC5vcGVuSW1hZ2UodHBsKG0ucGF0aFsxXSkpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmltZ2JveFwuY29tJC8sCiAgICBwYXRoOiAvXlwvW1xkXHddKyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGkgPSAkKCcjaW1nJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIGZ1bmN0aW9uIGhlbHBlciAoZG9SZXBsYWNlKSB7CiAgICBpZiAoJC53aW5kb3cuY29uZmlybUFnZSkgewogICAgICAkLndpbmRvdy5jb25maXJtQWdlKDEpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgaSA9ICQoJyNjb250YWluZXItaG9tZSBpbWdbb25jbGlja10nKTsKICAgICQub3BlbkltYWdlKGkuc3JjLCB7CiAgICAgIHJlcGxhY2U6IGRvUmVwbGFjZSwKICAgIH0pOwogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogWwogICAgICAgIC9eaW1nKGZhbnRhc3l8bGVlY2h8XC5wb3JubGVlY2h8c21pbGV8bmVtb3xzZW5zZSlcLmNvbSQvLAogICAgICAgIC9eKGltYWdlZG9taW5vfGxvdmVjaGl4KVwuY29tJC8sCiAgICAgICAgL15pbWFnZXBvcm5cLmV1JC8sCiAgICAgICAgL14waW1nXC5uZXQkLywKICAgICAgICAvXmRhaWx5LWltZ1wuY29tJC8sCiAgICAgICAgL15waWNhbmdlbFwuaW4kLywKICAgICAgICAvXmltYWdlYmljXC5jb20kLywKICAgICAgXSwKICAgICAgcXVlcnk6IC9eXD9bcHZdPS8sCiAgICB9LAogICAgcmVhZHk6IF8uUChoZWxwZXIsIGZhbHNlKSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL15pbWdzYXlcLmNvbSQvLAogICAgICBxdWVyeTogL15cP1twdl09LywKICAgIH0sCiAgICByZWFkeTogXy5QKGhlbHBlciwgdHJ1ZSksCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eaW1nbG9ja2VyXC5jb20kLywKICAgIHBhdGg6IFsKICAgICAgL14oXC9cdyspXC8oLispXC5odG1sJC8sCiAgICAgIC9eKFwvXHcrKVwvKC4rKSQvLAogICAgXSwKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIHVybCA9IF8uVCgnLy9pbWcuaW1nbG9ja2VyLmNvbXswfV97MX0nKTsKICAgICQub3BlbkltYWdlKHVybChtLnBhdGhbMV0sIG0ucGF0aFsyXSkpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiBbCiAgICAgIC9eaW1nbm92YVwueHl6JC8sCiAgICAgIC9ed3d3XC5oZW50YWktaG90XC54eXokLywKICAgICAgL153d3dcLmhlbnRhaS1raW5nXC5vbmxpbmUkLywKICAgIF0sCiAgICBwYXRoOiAvXlwvaVwvLitcLnBocCQvLAogICAgcXVlcnk6IC9mPSguKykkLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5vcGVuSW1hZ2UoJ2YvJyArIG0ucXVlcnlbMV0pOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICBmdW5jdGlvbiB3YWl0RE9NIChlbGVtZW50LCBmbikgewogICAgcmV0dXJuIF8uRChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHsKICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobXV0YXRpb24pIHsKICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlICE9PSAnY2hpbGRMaXN0JykgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICB2YXIgcmVzdWx0ID0gXy5DKG11dGF0aW9uLmFkZGVkTm9kZXMpLmZpbmQoZnVuY3Rpb24gKGNoaWxkKSB7CiAgICAgICAgICAgIHJldHVybiBmbihjaGlsZCkgPyBjaGlsZCA6IF8ubm9uZTsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQogICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogICAgICAgICAgcmVzb2x2ZShyZXN1bHQucGF5bG9hZCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBvYnNlcnZlci5vYnNlcnZlKGVsZW1lbnQsIHsKICAgICAgICBjaGlsZExpc3Q6IHRydWUsCiAgICAgIH0pOwogICAgfSk7CiAgfQogIHZhciBwYXRoUnVsZSA9IC9eXC8oWzAtOWEtel0rKShcLnxcL3wkKS87CiAgZnVuY3Rpb24gZ28gKGlkLCBwcmUsIG5leHQpIHsKICAgICQub3BlbkxpbmsoJycsIHsKICAgICAgcG9zdDogewogICAgICAgIG9wOiAndmlldycsCiAgICAgICAgaWQ6IGlkLAogICAgICAgIHByZTogcHJlLAogICAgICAgIG5leHQ6IG5leHQsCiAgICAgIH0sCiAgICB9KTsKICB9CiAgZnVuY3Rpb24gZ2V0TmV4dDEgKGkpIHsKICAgIHJldHVybiBpLnZhbHVlOwogIH0KICBmdW5jdGlvbiBnZXROZXh0MiAoaSkgewogICAgdmFyIG5leHQgPSBpLm9uY2xpY2sgJiYgaS5vbmNsaWNrLnRvU3RyaW5nKCkubWF0Y2goL3ZhbHVlPScoW14nXSspJy8pOwogICAgaWYgKG5leHQpIHsKICAgICAgbmV4dCA9IG5leHRbMV07CiAgICAgIHJldHVybiBuZXh0OwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGkudmFsdWU7CiAgICB9CiAgfQogIGZ1bmN0aW9uIGhlbHBlciAoaWQsIGdldE5leHQpIHsKICAgIHZhciByZWNhcHRjaGEgPSAkLiQoJyNyZWNhcHRjaGFfd2lkZ2V0Jyk7CiAgICBpZiAocmVjYXB0Y2hhKSB7CiAgICAgIF8uaW5mbygnc3RvcCBiZWNhdXNlIHJlY2FwdGNoYScpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgaSA9ICQuJCgnaW5wdXRbbmFtZT0ibmV4dCJdJyk7CiAgICBpZiAoaSkgewogICAgICB2YXIgbmV4dCA9IGdldE5leHQoaSk7CiAgICAgIGdvKGlkLCAkKCdpbnB1dFtuYW1lPSJwcmUiXScpLnZhbHVlLCBuZXh0KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgaSA9ICQuJCgnaW1nLnBpYycpOwogICAgaWYgKGkpIHsKICAgICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogICAgICByZXR1cm47CiAgICB9CiAgICBfLmluZm8oJ2RvIG5vdGhpbmcnKTsKICB9CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IFsKICAgICAgICAvXmltZyh1bml2ZXJzYWx8cGF5aW5nfG1lZ2F8emV1c3xtb25rZXl8dHJleHx2ZXxkZXd8ZGlhbW9uZClcLmNvbSQvLAogICAgICAgIC9eKHd3d1wuKT9pbWdzZWVcLm1lJC8sCiAgICAgICAgL15pbWcoY2xpY2t8bWFpZClcLm5ldCQvLAogICAgICAgIC9eKHVwbG9hZHJyfGltYWdlZWVyfGltemRyb3B8d3d3XC51aW1nc2hhcmV8cGljLW1hbmlhYylcLmNvbSQvLAogICAgICAgIC9eaW1nZHJpdmVcLmNvJC8sCiAgICAgICAgL15jdXRlaW1nXC5jYyQvLAogICAgICAgIC9eaW1nKHRpZ2VyfGdvbGQpXC5vcmckLywKICAgICAgICAvXm15aW1nXC5jbHViJC8sCiAgICAgICAgL15mb3h5aW1nXC5saW5rJC8sCiAgICAgICAgL15odWxraW1nZVwuY29tJC8sCiAgICAgICAgL15jb3JlaW1nXC5uZXQkLywKICAgICAgXSwKICAgICAgcGF0aDogcGF0aFJ1bGUsCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAgIGhlbHBlcihtLnBhdGhbMV0sIGdldE5leHQxKTsKICAgIH0sCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IFsKICAgICAgICAvXmltZyhyb2NrfHRvd24pXC5uZXQkLywKICAgICAgICAvXmltZyhtYXplfG91dGxldClcLmNvbSQvLAogICAgICBdLAogICAgICBwYXRoOiBwYXRoUnVsZSwKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgaSA9ICQuJCgnaW1nLnBpYycpOwogICAgICBpZiAoaSkgewogICAgICAgICQub3BlbkltYWdlKGkuc3JjKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIGQgPSAkKCdkaXZbaWRePSJpbWFnZXZpZXdpIl0nKTsKICAgICAgd2FpdERPTShkLCBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlLm5vZGVOYW1lID09PSAnRk9STScgJiYgJC4kKCdpbnB1dFtuYW1lPSJpZCJdJywgbm9kZSk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICBub2RlLnN1Ym1pdCgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF8ud2FybihlKTsKICAgICAgfSk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiAvXmNocm9ub3NcLnRvJC8sCiAgICAgIHBhdGg6IHBhdGhSdWxlLAogICAgfSwKICAgIHJlYWR5OiBmdW5jdGlvbiAobSkgewogICAgICBoZWxwZXIobS5wYXRoWzFdLCBnZXROZXh0Mik7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogJ2h0dHA6Ly9pbWd2aWV3Lm5ldC90cGluZC5waHAnLAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGkgPSAkLiQoJ2ltZy5waWMnKTsKICAgICAgaWYgKGkpIHsKICAgICAgICAkLm9wZW5JbWFnZShpLnNyYywge3JlcGxhY2U6IHRydWV9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIGQgPSAkKCdkaXZbaWRePSJpbWFnZXZpZXdpIl0gaW5wdXRbdHlwZT0ic3VibWl0Il1bc3R5bGU9IiJdJyk7CiAgICAgIGQgPSBkLnBhcmVudE5vZGU7CiAgICAgIGQuc3VibWl0KCk7CiAgICB9LAogIH0pOwp9KSgpOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXihpbWdzdXJlfHBpY2V4cG9zZWQpXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2ltZy5waWMnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogJ2h0dHA6Ly9pbWd0aGVpZi5jb20vaW1hZ2UvKi5odG1sJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCdkaXYuY29udGVudC1jb250YWluZXIgYScpOwogICAgJC5vcGVuSW1hZ2UoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15pbWd2YXVsdFwucHckLywKICAgIHBhdGg6IC9eXC92aWV3LWltYWdlXC8vLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJCgnYXJ0aWNsZSBkaXYuc3BhbjcgYVt0YXJnZXQ9Il9ibGFuayJdJyk7CiAgICAkLm9wZW5JbWFnZShhLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL2lwaWMuc3UvP3BhZ2U9aW1nJnBpYz0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjZnonKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15qYXZjaXR5XC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJy5lbnRyeS1jb250ZW50ID4gaDE6bnRoLWNoaWxkKDEpID4gYTpudGgtY2hpbGQoMSknKTsKICAgIHZhciB1cmwgPSBhLm9uY2xpY2sudG9TdHJpbmcoKTsKICAgIHVybCA9IHVybC5tYXRjaCgvd2luZG93XC5vcGVuXCgnKFteJ10rKSdcKS8pOwogICAgaWYgKCF1cmwpIHsKICAgICAgXy5pbmZvKCdwYXR0ZXJuIGNoYW5nZWQnKQogICAgICByZXR1cm47CiAgICB9CiAgICAkLm9wZW5JbWFnZSh1cmxbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAva2VwdGFyb2xvXC5odSQvLAogICAgcGF0aDogL14oXC9bXlwvXStcL1teXC9dK1wuanBnKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5JbWFnZSgnaHR0cDovL3d3dy5rZXB0YXJvbG8uaHUva2VwJyArIG0ucGF0aFsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ebG9zdHBpY1wubmV0JC8sCiAgICBxdWVyeTogL15cP3Bob3RvPVxkKyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnaW1nLm5vdGlubGluZS5jaXJjbGUnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgZnVuY3Rpb24gaGVscGVyIChtKSB7CiAgICAkLm9wZW5JbWFnZSgnL2ltYWdlcy8nICsgbS5xdWVyeVsxXSk7CiAgfQogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBbCiAgICAgICAgL14oaGVudGFpLWhvc3Rpbmd8bWlyYWdlcGljc3xmdW5leHRyYVwuaG9zdHppfGltZ3JleClcLmNvbSQvLAogICAgICAgIC9eYmlsZGVyXC5uaXhoZWxwXC5kZSQvLAogICAgICAgIC9eaW1hZ2VjdXJsXC4oY29tfG9yZykkLywKICAgICAgICAvXmltYWdldmF1XC5ldSQvLAogICAgICAgIC9eaW1nXC5kZWxpXC5zaCQvLAogICAgICAgIC9eaW1nKGRyZWFtfHNvb3xubXxzaWxvKVwubmV0JC8sCiAgICAgICAgL15pbWdzaWNpbHlcLml0JC8sCiAgICAgICAgL153d3dcLmltZ2hlcmVcLm5ldCQvLAogICAgICBdLAogICAgICBwYXRoOiAvXlwvdmlld2VyXC5waHAkLywKICAgICAgcXVlcnk6IC9maWxlPShbXiZdKykvLAogICAgfSwKICAgIHN0YXJ0OiBoZWxwZXIsCiAgfSk7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eKGR3aW1nfGltZ3Npbnx3d3dcLnBpY3R1cmVzaG9zdGVyKVwuY29tJC8sCiAgICAgIHBhdGg6IC9eXC92aWV3ZXJcLnBocCQvLAogICAgICBxdWVyeTogL2ZpbGU9KFteJl0rKS8sCiAgICB9LAogICAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAgICQub3BlbkltYWdlKCcvZmlsZXMvJyArIG0ucXVlcnlbMV0pOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogWwogICAgICAgIC9pbWcobmlwfGNlbnRyYWx8Y3JlYW0pXC5jb20kLywKICAgICAgICAvaW1hZ2V2aWV3XC5tZXwyNDRwaXhcLmNvbXxwb3N0aW1nXC5uZXQkLywKICAgICAgXSwKICAgICAgcGF0aDogL15cL3ZpZXdlcnIuKlwucGhwJC8sCiAgICAgIHF1ZXJ5OiAvZmlsZT0oW14mXSspLywKICAgIH0sCiAgICBzdGFydDogaGVscGVyLAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogWwogICAgICAnaHR0cDovL3d3dy5vdmVycGljLm5ldC92aWV3ZXIucGhwP2ZpbGU9KicsCiAgICBdLAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGkgPSAkKCcjbWFpbl9pbWcnKTsKICAgICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogLyhlbXBpcmVsb2FkfGxvYWRzYW5vb2spXC5jb20kLywKICAgICAgcXVlcnk6IC9maWxlPShbXiZdKykvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAobSkgewogICAgICAkLm9wZW5JbWFnZSgnZmlsZXMvJyArIG0ucXVlcnlbMV0pOwogICAgfSwKICB9KTsKfSkoKTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLm1yamhcLm9yZyQvLAogICAgcGF0aDogL15cL2dhbGxlcnlcLnBocCQvLAogICAgcXVlcnk6IC9eXD9lbnRyeT0oLispJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB1cmwgPSBtLnF1ZXJ5WzFdOwogICAgJC5vcGVuSW1hZ2UoJy8nICsgdXJsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLm5vZWxzaGFja1wuY29tJC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgaSA9ICQoJyNlbHRfdG9fYWZmJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vcGljLW1vbmV5LnJ1LyouaHRtbCcsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBmID0gZG9jdW1lbnQuZm9ybXNbMF07CiAgICB2YXIgc2lnID0gJCgnaW5wdXRbbmFtZT0ic2lnIl0nLCBmKS52YWx1ZTsKICAgIHZhciBwaWNfaWQgPSAkKCdpbnB1dFtuYW1lPSJwaWNfaWQiXScsIGYpLnZhbHVlOwogICAgdmFyIHJlZmVyZXIgPSAkKCdpbnB1dFtuYW1lPSJyZWZlcmVyIl0nLCBmKS52YWx1ZTsKICAgIHZhciB1cmwgPSBfLlQoJy9waWMuanBlZz9waWNfaWQ9e3BpY19pZH0mc2lnPXtzaWd9JnJlZmVyZXI9e3JlZmVyZXJ9Jyk7CiAgICAkLm9wZW5JbWFnZSh1cmwoewogICAgICBzaWc6IHNpZywKICAgICAgcGljX2lkOiBwaWNfaWQsCiAgICAgIHJlZmVyZXI6IHJlZmVyZXIsCiAgICB9KSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LnBpYy11cGxvYWQuZGUvdmlldy0qLmh0bWwnLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCcuYWR2ZXJ0Jyk7CiAgICB2YXIgaSA9ICQoJ2ltZy5wcmV2aWV3X3BpY3R1cmVfMmIsIGltZy5vcmlnaW5hbF9waWN0dXJlXzJiJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ecGljKDJwcm9maXR8cDIpXC5jb20kLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2Zvcm0gPiAjZDEgfiBpbnB1dFtuYW1lPWJpZ2ltZ10nKTsKICAgICQub3BlbkltYWdlKGkudmFsdWUpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnBpYyg0fDUpeW91LnJ1JC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgaWYgKCQuJCgnI2QxID4gaW1nJykgIT0gbnVsbCkgewogICAgdmFyIFVSTHBhcmFtcyA9IGxvY2F0aW9uLmhyZWYuc3BsaXQoIi8iLCA1KTsKICAgIHZhciBuZXh0ID0gVVJMcGFyYW1zWzBdICsgJy8nICsgVVJMcGFyYW1zWzFdICsgJy8nICsgVVJMcGFyYW1zWzJdICsgJy8nICsgVVJMcGFyYW1zWzNdICsgJy8nICsgVVJMcGFyYW1zWzRdICsgJy8xLyc7IAogICAgJC5zZXRDb29raWUoJ3A0eWNsaWNrJywnMScpOwogICAgJC5vcGVuTGluayhuZXh0KTsKICB9IGVsc2UgewogICAgdmFyIGkgPSAkKCcjZDEgaW1nJykuc3JjOwogICAgJC5vcGVuSW1hZ2UoaSk7CiAgfQogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/cGljY2FzaFwubmV0JC8KICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgdmFyIGkgPSAkKCcuY29udGFpbmVyID4gaW1nJyk7CiAgdmFyIG0gPWkub25jbGljay50b1N0cmluZygpLm1hdGNoKC9tc2hvd1woJyhbXiddKyknXCk7Lyk7CiAgJC5vcGVuSW1hZ2UobVsxXSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IFsKICAgICdodHRwOi8vYW1hdGV1cmZyZWFrLm9yZy9zaGFyZS0qLmh0bWwnLAogICAgJ2h0dHA6Ly9hbWF0ZXVyZnJlYWsub3JnL3NoYXJlLnBocD9pZD0qJywKICAgICdodHRwOi8vaW1hZ2VzLm1heGlnYW1lLmJ5L3NoYXJlLSouaHRtbCcsCiAgICAnaHR0cDovL3BpY2ZveC5vcmcvKicsCiAgICAnaHR0cDovL3d3dy5ldXJvLXBpYy5ldS9zaGFyZS5waHA/aWQ9KicsCiAgICAnaHR0cDovL3d3dy5ncmF0aXNpbWFnZS5kay9zaGFyZS0qLmh0bWwnLAogICAgJ2h0dHA6Ly94eHguZnJlZWltYWdlLnVzL3NoYXJlLnBocD9pZD0qJywKICAgICdodHRwOi8vbnBpY3R1cmUubmV0L3NoYXJlLSouaHRtbCcsCiAgICAnaHR0cDovL3d3dy5vbmxpbmVwaWMubmV0L3NoYXJlLnBocD9pZD0qJywKICAgICdodHRwOi8vd3d3LnBpeHNvci5jb20vc2hhcmUucGhwP2lkPSonLAogICAgJ2h0dHA6Ly93d3cucGl4c29yLmNvbS9zaGFyZS0qLmh0bWwnLAogICAgJ2h0dHA6Ly9waXhzb3IuY29tL1hYWC9zaGFyZS0qLmh0bWwnLAogICAgJ2h0dHA6Ly9ob2xkdGhlbW9hbi5uZXQveC9zaGFyZS0qLmh0bWwnLAogICAgJ2h0dHA6Ly9pbWd1cngubmV0L3gvc2hhcmUtKi5odG1sJywKICBdLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbyA9ICQoJyNpaW1nJyk7CiAgICAkLm9wZW5JbWFnZShvLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vcGljbW9lLm5ldC9kLnBocD9pZD0qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCdpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogWwogICAgJ2h0dHA6Ly9waWNzLW1vbmV5LnJ1L2FsbHBpY2ZyZWUvKicsCiAgICAnaHR0cDovL3d3dy5waWNzLW1vbmV5LnJ1L2FsbGltYWdlLyonLAogIF0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnBpY3MtbW9uZXlcLnJ1JC8sCiAgICBwYXRoOiAvXlwvdlwucGhwJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICB2YXIgaSA9ICQoJ2NlbnRlciBpbWc6bm90KFtpZF0pJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5waWNzLW1vbmV5XC5ydSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQucmVtb3ZlTm9kZXMoJ2lmcmFtZScpOwogICAgdmFyIGkgPSAkKCcjZDEgaW1nJyk7CiAgICBpID0gaS5vbmNsaWNrLnRvU3RyaW5nKCk7CiAgICBpID0gaS5tYXRjaCgvbXNob3dcKCcoLispJ1wpLyk7CiAgICBpID0gaVsxXTsKICAgICQub3BlbkltYWdlKGkpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiAnaHR0cDovL3BpY3NoYXJlLmdlZW56YS5jb20vcGljcy8qJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjcGljU2hhcmVfaW1hZ2VfY29udGFpbmVyJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ecGljc3RyZWFtXC50diQvLAogICAgcGF0aDogL15cLy4qXC8uKlwuaHRtbCQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpbWcgPSAkKCcjdmlldzEgPiBkaXY6bnRoLWNoaWxkKDEpID4gYTpudGgtY2hpbGQoMSkgPiBpbWc6bnRoLWNoaWxkKDEpJyk7CiAgICAkLm9wZW5JbWFnZShpbWcuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3BpbXBhbmRob3N0XC5jb20kLywKICAgIHBhdGg6IC9eXC9pbWFnZVwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNpbWFnZV9vcmlnaW5hbCcpOwogICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICBlbC5pbm5lckhUTUwgPSBhLnZhbHVlOwogICAgdmFyIGltZyA9ICQoJ2ltZycsIGVsKTsKICAgICQub3BlbkltYWdlKGltZy5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnBpeGh1YlwuZXUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUsIC5hZHVsdHBhZ2UsICNGRk5fQmFubmVyX0hvbGRlcicpOwogICAgdmFyIGkgPSAkKCcuaW1hZ2Utc2hvdyBpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP3BpeHJvdXRlXC5jb20kLwogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBvID0gJCgnLmZyNG1lID4gZGl2Om50aC1jaGlsZCgyMCkgPiBhOm50aC1jaGlsZCgxKSA+IGltZzpudGgtY2hpbGQoMSknKTsKICAgICQub3BlbkltYWdlKG8uc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLnBpeHNlbnNlXC5uZXQkLywKICAgIHBhdGg6IC9eXC9zaXRlXC92XC8oXGQrKSQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5MaW5rKCcvc2l0ZS92aWV3RmluYWxJbWFnZS8nICsgbS5wYXRoWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLnBpeHNlbnNlXC5uZXQkLywKICAgIHBhdGg6IC9eXC9zaXRlXC92aWV3RmluYWxJbWFnZVwvXGQrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjbXlVbmlxdWVJbWcnKTsKICAgICQub3BlbkxpbmsoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnd3d1wucG9ybmltYWdleFwuY29tJC8sCiAgICBwYXRoOiAvXlwvaW1hZ2VcLy4qJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGltZyA9ICQoJyNmaXhlZCBpbWcuYm9yZGVyMnB4Jyk7CiAgICAkLm9wZW5JbWFnZShpbWcuc3JjKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15wb3N0aW1nXC5vcmckLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQuJCgnYm9keSA+IGNlbnRlciA+IGEgPiBpbWcnKTsKICAgIGlmKGEpewogICAgICAkLm9wZW5MaW5rKGEucGFyZW50Tm9kZS5ocmVmKTsKICAgIH0KICAgIHZhciBpID0gJCgnYm9keSA+IGNlbnRlciA+IGltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnBybnRzY3JcLmNvbSQvCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCcjc2NyZWVuc2hvdC1pbWFnZScpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXnByb25waWNcLm9yZyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpbWcgPSAkKCd0YWJsZS5uZXdfdGFibGUyOm50aC1jaGlsZCgyKSBpbWcubGluaycpOwogICAgdmFyIHVybCA9IGltZy5zcmMucmVwbGFjZSgndGhfJywgJycpOwogICAgJC5vcGVuSW1hZ2UodXJsKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14ocXJycm98Z3JlZW5waWNjcylcLmNvbSQvLAogICAgcGF0aDogL14oXC9pbWFnZXNcLy4rKVwuaHRtbCQvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uIChtKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLm9wZW5JbWFnZShtLnBhdGhbMV0pOwogIH0sCn0pOwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKICBmdW5jdGlvbiByZWFkeSAoKSB7CiAgICAkLnJlbW92ZU5vZGVzKCdpZnJhbWUsICNhZGJsb2NrX2RldGVjdCwgLnBvcHVwT3ZlcmxheScpOwogICAgdmFyIG5vZGUgPSAkLiQoJyNjb250aW51ZXRvaW1hZ2UgPiBmb3JtIGlucHV0Jyk7CiAgICBpZiAobm9kZSkgewogICAgICBfLndhaXQoNTAwKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTsKICAgICAgICByZXR1cm4gXy53YWl0KDUwMCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIG5vZGUuZm9jdXMoKTsKICAgICAgICBub2RlLmNsaWNrKCk7CiAgICAgICAgbm9kZS5jbGljaygpOwogICAgICB9KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGkgPSAkKCdpbWdbY2xhc3NePWNlbnRyZWRdJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfQogICQucmVnaXN0ZXIoewogICAgcnVsZTogWwogICAgICB7CiAgICAgICAgaG9zdDogWwogICAgICAgICAgL15pbWFnZShvbnRpbWV8Y29ybnxwaWNzYXxob3JzZSlcLmNvbSQvLAogICAgICAgICAgL14oem9uZXplZWR8emVsamV8Y3JvZnR8bXlob3R8Ym9rfGhvc3R1cnxncmVhc3kpaW1hZ2VcLmNvbSQvLAogICAgICAgICAgL15pbWcoaWN5fG5leHR8c2F2dnl8XC5zcGljeXppbGxhfHR3eXRpfHh5enxkZXZpbHx0emFyfGJhbnxwdXxiZWVyfHdldHx0b3JuYWRvfGtpY2tzfC1wYXl8bmltenxiaW5ib3V8MnNoYXJlfDIyfGNvdmVyfGhpdHxtYWlufHRyaWFsKVwuY29tJC8sCiAgICAgICAgICAvXmltZy0oem9uZXxwbGFuZXQpXC5jb20kLywKICAgICAgICAgIC9ed3d3XC5pbWcoYmxvd3xsZW1vbnw0c2hhcmluZylcLmNvbSQvLAogICAgICAgICAgL153d3dcLmltYWdlZm9sa3NcLmNvbSQvLAogICAgICAgICAgL154eHgoXC5wb3JucHJpbWVoZHxpbWFnZW5vd3xzY3JlZW5zKVwuY29tJC8sCiAgICAgICAgICAvXihwaWNzdHdpc3R8ZXJpY3Nvbnl8d3BjOHx1cGxpbWd8bGV4aWl0fHRodW1ibmFpbHVzfG5ld2ltYWdlcG9zdHxmYXBpbmdwaWNzfGRpbXR1c3x0aW5pem8pXC5jb20kLywKICAgICAgICAgIC9eKChpfGhlbnRhaSlcLik/aW1nc2xpcFwuY29tJC8sCiAgICAgICAgICAvXihpfHh4eClcLmhlbnRhaXlvdXR1YmVcLmNvbSQvLAogICAgICAgICAgL14oZ298ZXIpaW1nZVwuY29tJC8sCiAgICAgICAgICAvXihsaWtlXC4pPzA4bGtrXC5jb20kLywKICAgICAgICAgIC9eKHd3d1wuKT9cLmltZ3VsdFwuY29tJC8sCiAgICAgICAgICAvXm5pbShwbHVzfHpzaGFyZSlcLmNvbSQvLAogICAgICAgICAgL15udWRleGltZ1wuY29tJC8sCiAgICAgICAgICAvaW1nc2VlZHM/XC5jb20kLywKICAgICAgICAgIC94eHhzcGFycm93P1wuY29tJC8sCiAgICAgICAgICAvZGFtaW1hZ2VcLmNvbSQvLAogICAgICAgICAgL2ltYWdlZGVjb2RlXC5jb20kLywKICAgICAgICAgIC9eaW1nKHNlcnZlfGNvaW58ZmFwfGNhbmR5fG1hc3Rlcnwtdmlld3xydW58Ym9vbXxwcm9qZWN0fHB5dGhvbnxwaWNzKVwubmV0JC8sCiAgICAgICAgICAvXihuYXVnaHR5Z2F0ZXxnYWxsZXJ5Y2xvdWR8aW1hZ2VsYXNlcnxwaWN0dXJlLWJhbmd8cHJvamVjdC1waG90b3xwaXgtbGlua3xmdW5pbWd8Z29sZnBpdHx4eGltZylcLm5ldCQvLAogICAgICAgICAgL14oc2hvdHxhZHVsdClpbWdcLm9yZyQvLAogICAgICAgICAgL15pbWcoc3R1ZGlvfHNwb3QpXC5vcmckLywKICAgICAgICAgIC9eaW1hZ2UoXC5hZGxvY2t8b258dGVhbSlcLm9yZyQvLAogICAgICAgICAgL14oZHJhZ3x0ZWVufG1lZ2EpaW1hZ2VcLm9yZyQvLAogICAgICAgICAgL150ZWVuc2hvdFwub3JnJC8sCiAgICAgICAgICAvXihob3RpbWFnZXN8NTU4ODgpXC5ldSQvLAogICAgICAgICAgL15pbWcoY2xvdWR8bWFnKVwuY28kLywKICAgICAgICAgIC9ecGl4dXBcLnVzJC8sCiAgICAgICAgICAvXihidWxraW1nfHBob3RvLXVwfG15aW1nfHBvcC1pbWd8aW1nLXBvcHxhZHMtaW1nKVwuaW5mbyQvLAogICAgICAgICAgL15pbWdcLnl0JC8sCiAgICAgICAgICAvXnZhdmFcLmluJC8sCiAgICAgICAgICAvXihwaXh4eHxwaWNzcG9ybmZyZWV8aW1nbG9hZHxmYXBhdClcLm1lJC8sCiAgICAgICAgICAvXihwaWMycGljfHBvcm5vLXBpcmF0fDI0YXZhcmlpfGxvZnRsbXwxOHByb258aW1ncGx1cylcLnJ1JC8sCiAgICAgICAgICAvXnd3d1wuaG90aW1hZ2VcLnVrJC8sCiAgICAgICAgICAvXmltZ2Vhc2VcLnJlJC8sCiAgICAgICAgICAvXmdvaW1nXC54eXokLywKICAgICAgICAgIC9ecGljMnBpY1wuc2l0ZSQvLAogICAgICAgICAgL15kYXJwaXhcLmdhJC8sCiAgICAgICAgICAvXnN4cGljc1wubmwkLywKICAgICAgICAgIC9eZGFycGl4XC5kZXNpJC8sCiAgICAgICAgICAvXnBpYzR5b3VcLnRvcCQvLAogICAgICAgICAgL15pbWdzZW5cLnNlJC8sCiAgICAgICAgXSwKICAgICAgICBwYXRoOiAvXlwvaW1nLS4qXC5odG1sLywKICAgICAgfSwKICAgICAgewogICAgICAgIGhvc3Q6IFsKICAgICAgICAgIC9eaW1nKHJ1bnx0d3l0aSlcLm5ldCQvLAogICAgICAgICAgL15pbWd0d3l0aVwuY29tJC8sCiAgICAgICAgXSwKICAgICAgICBwYXRoOiAvXlwvdFwvaW1nLS4qXC5odG1sLywKICAgICAgfSwKICAgICAgewogICAgICAgIGhvc3Q6IC9eaW1na2luZ1wuY28kLywKICAgICAgICBwYXRoOiAvXlwvaW1nLS4qXC5odG1sLywKICAgICAgfSwKICAgICAgewogICAgICAgIGhvc3Q6IC9eaW1nYmJcLm5ldCQvLAogICAgICAgIHBhdGg6IC9eXC8uLS4rJC8sCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBob3N0OiAvXmNkblwuamF2dG90YWxcLmNvbSQvLAogICAgICAgIHBhdGg6IC9eXC9pbWdcLy4rJC8sCiAgICAgIH0sCiAgICBdLAogICAgcmVhZHk6IHJlYWR5LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogewogICAgICBob3N0OiBbCiAgICAgICAgL153d3dcLmltZyh0YXhpfGFkdWx0fHdhbGxldClcLmNvbSQvLAogICAgICAgIC9ed3d3XC5pbWdkcml2ZVwubmV0JC8sCiAgICAgIF0sCiAgICAgIHBhdGg6IC9eXC9pbWctLipcLmh0bWwkLywKICAgIH0sCiAgICBzdGFydDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgYyA9ICQuZ2V0Q29va2llKCdpbWdfY19kJykgfHwgJC5nZXRDb29raWUoJ2ltZ19wX2QnKTsKICAgICAgaWYgKGMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgJC5wb3N0KHdpbmRvdy5sb2NhdGlvbi5ocmVmLnRvU3RyaW5nKCksIHsKICAgICAgICBjdGk6IDEsCiAgICAgICAgcmVmOiAnJywKICAgICAgICByYzogMSwKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICAgJC5yZW1vdmVOb2RlcygnaWZyYW1lJyk7CiAgICAgIHZhciBub2RlID0gJC4kKCcjY29udGludWV0b2ltYWdlID4gZm9ybSBpbnB1dCcpOwogICAgICBpZiAobm9kZSkgewogICAgICAgIG5vZGUuY2xpY2soKTsKICAgICAgICBub2RlLmNsaWNrKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgICQucmVzZXRDb29raWVzKCk7CiAgICAgIHZhciBpID0gJCgnaW1nW2NsYXNzXj1jZW50cmVkXScpOwogICAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgICB9LAogIH0pOwogIGZ1bmN0aW9uIGhlbHBlciAoKSB7CiAgICAkLndpbmRvdy5zZXRUaW1lb3V0ID0gXy5ub3A7CiAgICByZXR1cm4gJC5nZXQod2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCkpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmV0dXJuICQudG9ET00oZGF0YSk7CiAgICB9KTsKICB9CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eMDhsa2tcLmNvbSQvLAogICAgICBwYXRoOiAvXlwvUGhvdG9cL2ltZy0uK1wuaHRtbCQvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAgIGhlbHBlcigpLnRoZW4oZnVuY3Rpb24gKHBhZ2UpIHsKICAgICAgICB2YXIgaSA9ICQoJ2ltZ1tjbGFzc149Y2VudHJlZF0nLCBwYWdlKTsKICAgICAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgICAgIH0pOwogICAgfSwKICB9KTsKICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL14wOGxra1wuY29tJC8sCiAgICAgIHBhdGg6IC9eXC9cZCtcL2ltZy0uKlwuaHRtbCQvLAogICAgfSwKICAgIHN0YXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAgIGhlbHBlcigpLnRoZW4oZnVuY3Rpb24gKHBhZ2UpIHsKICAgICAgICB2YXIgYmJjb2RlID0gJC4kKCcjaW1hZ2Vjb2RlcyBpbnB1dCcsIHBhZ2UpOwogICAgICAgIGJiY29kZSA9IGJiY29kZS52YWx1ZS5tYXRjaCgvLitcW0lNR1xdKFteXFtdKylcW1wvSU1HXF0uKy8pOwogICAgICAgIGJiY29kZSA9IGJiY29kZVsxXTsKICAgICAgICBiYmNvZGUgPSBiYmNvZGUucmVwbGFjZSgnc21hbGwnLCAnYmlnJyk7CiAgICAgICAgJC5vcGVuSW1hZ2UoYmJjb2RlKTsKICAgICAgfSk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogWwogICAgICB7CiAgICAgICAgaG9zdDogL15pbWdraW5nXC5jbyQvLAogICAgICAgIHBhdGg6IC9eXC9pbWczLS4qXC5odG1sLywKICAgICAgfSwKICAgICAgewogICAgICAgIGhvc3Q6IC9eaW1na2luZ3NcLmNvbSQvLAogICAgICAgIHBhdGg6IC9eXC9pbWctLipcLmh0bWwvLAogICAgICB9LAogICAgXSwKICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB1cmwgPSAkLndpbmRvdy5saW5raWQ7CiAgICAgICQub3BlbkltYWdlKHVybCk7CiAgICB9LAogIH0pOwogICQucmVnaXN0ZXIoewogICAgcnVsZTogWwogICAgICB7CiAgICAgICAgaG9zdDogL15pbWdraW5nXC5jbyQvLAogICAgICAgIHBhdGg6IC9eXC9pbWc0LS4qXC5odG1sLywKICAgICAgfSwKICAgICAgewogICAgICAgIGhvc3Q6IC9eaW1na2luZ3NcLmNvbSQvLAogICAgICAgIHBhdGg6IC9eXC9pbWcyLS4qXC5odG1sLywKICAgICAgfSwKICAgIF0sCiAgICByZWFkeTogcmVhZHksCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vd3d3LnN1YmlyaW1hZ2VuZXMuY29tLyouaHRtbCcsCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBpID0gJCgnI0ltYWdlblZpc3VhbGl6YWRhJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vdGlueXBpYy5jb20vdmlldy5waHA/cGljPSonLAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNpbWdFbGVtZW50Jyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC50dXJib2ltYWdlaG9zdFwuY29tJC8sCiAgICBwYXRoOiAvXlwvcFwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJyNpbWFnZWlkJyk7CiAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6ICdodHRwOi8vdnZjYXAubmV0L2RiLyouaHRwJywKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGkgPSAkKCdpbWcnKTsKICAgICQub3BlbkltYWdlKGkuc3JjLCB7CiAgICAgIHJlcGxhY2U6IHRydWUsCiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL154XC5waXhmYXJtXC5uZXQkLywKICAgIHBhdGg6IC9eXC9zZXh5XC9cZCtcL1xkK1wvLitcLmh0bWwkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgaSA9ICQoJ2ltZycpOwogICAgJC5vcGVuSW1hZ2UoaS5zcmMpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXC55ZnJvZ1wuY29tJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgaWYgKC9eXC96Ly50ZXN0KHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSkpIHsKICAgICAgdmFyIGkgPSAkKCcjdGhlLWltYWdlIGltZycpOwogICAgICAkLm9wZW5JbWFnZShpLnNyYyk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHZhciBhID0gJC4kKCcjY29udGludWUtbGluayBhLCAjbWFpbl9pbWFnZScpOwogICAgaWYgKGEpIHsKICAgICAgJC5vcGVuTGluaygnL3onICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTsKICAgICAgcmV0dXJuOwogICAgfQogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmFrb2FtXC5jb20kLywKICAgIHBhdGg6IC9eXC9kb3dubG9hZFwvLywKICB9LAogIHN0YXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbG9jYXRpb25fbGluayA9IGxvY2F0aW9uLmhhc2g7CiAgICAkLnBvc3QobG9jYXRpb25fbGluaykudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTsKICAgICAgaWYgKCFkYXRhLmhhc2hfZGF0YSkgewogICAgICAgIF8ud2FybigncnVsZSBjaGFuZ2VkJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgICQub3BlbkxpbmsoZGF0YS5kaXJlY3RfbGluayk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL153d3dcLmFuYWZpbGVcLmNvbSQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBiID0gJC4kKCcjYnRuX2Rvd25sb2FkJyk7CiAgICBpZiAoYikgewogICAgICBiLmRpc2FibGVkID0gZmFsc2U7CiAgICAgICQucmVtb3ZlTm9kZXMoJ2RpdlthbGlnbj1jZW50ZXJdJyk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGIgPSAkKCcjcGxhbnNfZnJlZSBmb3JtIFt0eXBlPXN1Ym1pdF0nKTsKICAgIGIuY2xpY2soKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2FyYWJcLnNoJC8sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGYgPSAkKCdmb3JtW25hbWU9RjFdJyk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgIGYuc3VibWl0KCk7CiAgICB9LCAyMDAwMCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9jb29scm9tXC5jb20kLywKICAgIHBhdGg6IC9eXC9kbHBvcFwucGhwJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIG1hdGNoZXMgPSAkLnNlYXJjaFNjcmlwdHMoLzxmb3JtIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIoW14iXSspIj4vKTsKICAgICQub3BlbkxpbmsobWF0Y2hlc1sxXSk7CiAgfSwKfSk7CihmdW5jdGlvbigpIHsKICAndXNlIHN0cmljdCc7CiAgJC5yZWdpc3Rlcih7CiAgICBydWxlOiB7CiAgICAgIGhvc3Q6IC9eKHd3d1wuKT9kbC1wcm90ZWN0XC5jb20kLywKICAgICAgcGF0aDogL1wvW0EtWjAtOV0rLywKICAgIH0sCiAgICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgICBpZiAoJC4kKCcjY2FwdGNoYScpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBmID0gJC4kKCdmb3JtW25hbWU9Y2NlcnVyZV0nKTsKICAgICAgaWYgKGYpIHsKICAgICAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAobXV0YXRpb25zKSB7CiAgICAgICAgICB2YXIgaUluID0gJCgnaW5wdXRbaWQ9aW5dJyk7CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG11dGF0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAobXV0YXRpb25zW2ldLnRhcmdldC52YWx1ZSAmJiBtdXRhdGlvbnNbaV0uYXR0cmlidXRlTmFtZSA9PT0gJ3ZhbHVlJykgewogICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgICBpSW4udmFsdWUgPSAiVHJhY2tpbmcgdG9vIG11Y2ggaHVydHMgdXNlcnMnIHByaXZhY3kiOwogICAgICAgICAgICAgIGlmICghY2FuRmFzdFJlZGlyZWN0KCkpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGYuc3VibWl0KCk7CiAgICAgICAgICAgICAgfSwgNjAwKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHZhciBpSW4gPSAkKCdpbnB1dFtpZD1pbl0nKTsKICAgICAgICBpZiAoaUluLnZhbHVlKSB7CiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBmLnN1Ym1pdCgpOwogICAgICAgICAgfSwgNjAwKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShpSW4sIHsKICAgICAgICAgICAgYXR0cmlidXRlczogdHJ1ZSwKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIGwgPSAkLiQkKCcjc2xpbmtzID4gYScpOwogICAgICBpZiAobC5zaXplKCkgPT09IDEpIHsKICAgICAgICAkLm9wZW5MaW5rKGwuYXQoMCkuaHJlZik7CiAgICAgIH0KICAgIH0sCiAgfSk7CiAgZnVuY3Rpb24gY2FuRmFzdFJlZGlyZWN0ICgpIHsKICAgIHJldHVybiAhJC4kKCdmb3JtW25hbWU9Y2NlcnVyZV0nKS5vbnN1Ym1pdCAmJiAhJC4kKCdmb3JtW25hbWU9Y2NlcnVyZV0gaW5wdXRbbmFtZT1wd2RdJyk7CiAgfQp9KSgpOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/ZW1iZWR1cGxvYWRcLmNvbSQvLAogICAgcGF0aDogL15cLyQvLAogICAgcXVlcnk6IC9eXD9cd3syfT1cdyskLwogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBkb3dubG9hZFBhZ2UgPSAkKCcuY2F0ZWdvcmllcyBhW3RhcmdldD1fYmxhbmtdJyk7CiAgICAkLm9wZW5MaW5rKGRvd25sb2FkUGFnZSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5maWxlcHJvamVjdFwuY29tXC5iciQvLAogICAgcGF0aDogL15cL2ZpbGVzXC8rLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgbSA9ICQuc2VhcmNoU2NyaXB0cygvPGEgaWQ9ImRvd24iIGhyZWY9IihbXiJdKykiPi8pOwogICAgJC5vcGVuTGluayhtWzFdKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pPyhmaXJlZHJpdmV8cHV0bG9ja2VyKVwuY29tJC8sCiAgICBwYXRoOiAvXlwvZmlsZVwvWzAtOUEtRl0rJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGMgPSAkKCcjY29uZmlybV9mb3JtJyk7CiAgICBjLnN1Ym1pdCgpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXmlvcmlcLnVzJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGEgPSAkKCcjd3JhcHBlciAudG9tYm9sIGEnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2poZWJlcmdcLm5ldCQvLAogICAgcGF0aDogL15cL2NhcHRjaGFcLy8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJCgnLmRsLWJ1dHRvbicpLmNsaWNrKCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9qaGViZXJnXC5uZXQkLywKICAgIHBhdGg6IC9eXC9yZWRpcmVjdFwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICAkLnJlbW92ZUFsbFRpbWVyKCk7CiAgICB2YXIgbWF0Y2hlcyA9ICQuc2VhcmNoU2NyaXB0cygvJ3NsdWcnOlxzKicoW14nXSspJyxccyonaG9zdGVyJzpccyonKFteJ10rKScvKTsKICAgIHZhciBzbHVnID0gbWF0Y2hlc1sxXTsKICAgIHZhciBob3N0ZXIgPSBtYXRjaGVzWzJdOwogICAgJC5wb3N0KCcvZ2V0L2xpbmsvJywgewogICAgICAnc2x1Zyc6IHNsdWcsCiAgICAgICdob3N0ZXInOiBob3N0ZXIKICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsKICAgICAgdmFyIHJlc3BKU09OID0gXy5wYXJzZUpTT04ocmVzcG9uc2UpOwogICAgICAkLm9wZW5MaW5rKHJlc3BKU09OLnVybCk7CiAgICB9KTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP2xhcmFzaGFyZVwuY29tJC8sCiAgICBwYXRoOiAvXlwvZG9cLnBocCQvLAogICAgcXVlcnk6IC9pZD1cZCsvLAogIH0sCiAgc3RhcnQ6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsoZG9jdW1lbnQubG9jYXRpb24uaHJlZi5yZXBsYWNlKCdpZD0nLCdkb3duPScpKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL14od3d3XC4pP21heG1pcnJvclwuY29tJC8sCiAgICBwYXRoOiAvXlwvcmVkaXJlY3RcLy8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIGwgPSAkKCcjZG93bmxvYWRfdXJsID4gYScpOwogICAgJC5vcGVuTGluayhsLmhyZWYpOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXih3d3dcLik/bWlycm9yY3JlYXRvclwuY29tJC8sCiAgICBwYXRoOiAvXlwvc2hvd2xpbmtcLnBocCQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBhID0gJC4kKCcjcmVkaXJlY3RsaW5rIGEnKTsKICAgIGlmIChhKSB7CiAgICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgYSA9ICQoJyNyZWRpcmVjdGxpbmsgPiBkaXYucmVkaXJlY3R1cmwnKTsKICAgIGEgPSBhLmlubmVySFRNTDsKICAgIGlmICghYS5tYXRjaCgvXmh0dHAvKSkgewogICAgICB0aHJvdyBuZXcgXy5BZHNCeXBhc3NlckVycm9yKCdub3QgYSB2YWxpZCBVUkwnKTsKICAgIH0KICAgICQub3BlbkxpbmsoYSk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3Lm1pcnJvcnVwbG9hZC5uZXQkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYWNjZXNzRm9ybSA9ICQoJ2Zvcm1bbmFtZT1mb3JtX3VwbG9hZF0nKTsKICAgIHZhciBhY2Nlc3NJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICBhY2Nlc3NJbnB1dC50eXBlID0gJ2hpZGRlbic7CiAgICBhY2Nlc3NJbnB1dC5uYW1lID0gJ2FjY2Vzcyc7CiAgICBhY2Nlc3NJbnB1dC52YWx1ZSA9IE1hdGgucmFuZG9tKCk7CiAgICBhY2Nlc3NGb3JtLmFwcGVuZENoaWxkKGFjY2Vzc0lucHV0KTsKICAgIGFjY2Vzc0Zvcm0uc3VibWl0KCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ed3d3XC5tdWx0aXVwZmlsZVwuY29tJC8sCiAgICBwYXRoOiAvXlwvZlwvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJyN5dzAnKTsKICAgIGYuc3VibWl0KCk7CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9ebXlsaW5rZ2VuXC5jb20kLywKICAgIHBhdGg6IC9eXC9wXC8oLispJC8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQub3BlbkxpbmsoJy9nLycgKyBtLnBhdGhbMV0pOwogIH0sCn0pOwokLnJlZ2lzdGVyKHsKICBydWxlOiB7CiAgICBob3N0OiAvXm15bGlua2dlblwuY29tJC8sCiAgICBwYXRoOiAvXlwvZ1wvLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYSA9ICQoJyNtYWluLWNvbnRlbnQgYS5idG4uYnRuLWRlZmF1bHQnKTsKICAgICQub3BlbkxpbmsoYS5ocmVmKTsKICB9LAp9KTsKJC5yZWdpc3Rlcih7CiAgcnVsZTogewogICAgaG9zdDogL15vcGVubG9hZFwuY28kLywKICAgIHBhdGg6IC9eXC9mXC8uKi8sCiAgfSwKICBzdGFydDogZnVuY3Rpb24gKG0pIHsKICAgICQud2luZG93LmFkYmxvY2sgPSBmYWxzZTsKICAgICQud2luZG93LmFkYmxvY2syID0gZmFsc2U7CiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgdmFyIGEgPSAkKCcjcmVhbGRsPmEnKTsKICAgIGlmIChhLmhyZWYpIHsKICAgICAgJC5vcGVuTGluayhhLmhyZWYpOwogICAgfQogIH0KfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT91cG1pcnJvclwuaW5mbyQvLAogIH0sCiAgcmVhZHk6IGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQuc2V0Q29va2llKCd1c2VyJywgJ3BwcCcpOwogICAgaWYgKCQuJCgnI2NvdW50RG93blRleHQnKSkgewogICAgICAgICQub3BlbkxpbmsoZG9jdW1lbnQubG9jYXRpb24udG9TdHJpbmcoKSk7CiAgICB9CiAgfSwKfSk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT92aWR0b1wubWUkLywKICB9LAogIHJlYWR5OiBmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZiA9ICQoJyNidG5fZG93bmxvYWQnKS5mb3JtOwogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICBmLnN1Ym1pdCgpOwogICAgfSwgNjAwMCk7CiAgfSwKfSk7CihmdW5jdGlvbiAoKSB7CiAgJ3VzZSBzdHJpY3QnOwogIHZhciBzVXJsID0gJyhcXGIoaHR0cHM/fGZ0cHxmaWxlKTpcL1wvWy1BLVowLTkrJkAjXC8lPz1+X3whOiwuO10qWy1BLVowLTkrJkAjXC8lPX5ffF0pJzsKICBmdW5jdGlvbiBpc0xpbmsgKHRleHQpIHsKICAgIHZhciByVXJsID0gbmV3IFJlZ0V4cChfLlQoJ157MH0kJykoc1VybCksICdpJyk7CiAgICByZXR1cm4gclVybC50ZXN0KHRleHQpOwogIH0KICBmdW5jdGlvbiBsaW5raWZ5ICh0ZXh0KSB7CiAgICB2YXIgclVybCA9IG5ldyBSZWdFeHAoc1VybCwgJ2lnJyk7CiAgICByZXR1cm4gdGV4dC5yZXBsYWNlKHJVcmwsIGZ1bmN0aW9uKG1hdGNoKSB7CiAgICAgIHJldHVybiBfLlQoIjxhIGhyZWY9J3swfSc+ezB9PC9hPiIpKG1hdGNoKTsKICAgIH0pOwogIH0KICAkLnJlZ2lzdGVyKHsKICAgIHJ1bGU6IHsKICAgICAgaG9zdDogL14od3d3XC4pPyhbYS16QS1aMC05XStcLik/YmluYm94XC5pbyQvLAogICAgICBwYXRoOiAvXC8oW2EtekEtWjAtOV0rKS8sCiAgICAgIGhhc2g6IC8oPzojKFthLXpBLVowLTldKykpPy8sCiAgICB9LAogICAgcmVhZHk6IGZ1bmN0aW9uIChtKSB7CiAgICAgIHZhciBzamNsID0gJC53aW5kb3cuc2pjbDsKICAgICAgdmFyIHBhc3RlX2lkID0gbS5wYXRoWzFdOwogICAgICB2YXIgcGFzdGVfc2FsdCA9IG0uaGFzaFsxXTsKICAgICAgdmFyIEFQSV9VUkwgPSBfLlQoJ2h0dHBzOi8vYmluYm94LmlvL3swfS5qc29uJykocGFzdGVfaWQpOwogICAgICAkLmdldChBUElfVVJMLCBmYWxzZSwgewogICAgICAgIE9yaWdpbjogXy5ub25lLAogICAgICAgIFJlZmVyZXI6IF8ubm9uZSwKICAgICAgICBDb29raWU6ICdyZWZlcnJlcj0xJywKICAgICAgICAnWC1SZXF1ZXN0ZWQtV2l0aCc6IF8ubm9uZSwKICAgICAgfSkudGhlbihmdW5jdGlvbiAocGFzdGVJbmZvKSB7CiAgICAgICAgcGFzdGVJbmZvID0gXy5wYXJzZUpTT04ocGFzdGVJbmZvKTsKICAgICAgICBpZiAoIXBhc3RlSW5mby5vaykgewogICAgICAgICAgdGhyb3cgbmV3IF8uQWRzQnlwYXNzZXJFcnJvcigiZXJyb3Igd2hlbiBnZXR0aW5nIHBhc3RlIGluZm9ybWF0aW9uIik7CiAgICAgICAgfQogICAgICAgIGlmIChwYXN0ZUluZm8ucGFzdGUudXJsKSB7CiAgICAgICAgICAkLm9wZW5MaW5rKHBhc3RlSW5mby5wYXN0ZS51cmwpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB2YXIgcmF3X3Bhc3RlID0gc2pjbC5kZWNyeXB0KHBhc3RlX3NhbHQsIHBhc3RlSW5mby5wYXN0ZS50ZXh0KTsKICAgICAgICBpZiAoaXNMaW5rKHJhd19wYXN0ZSkpIHsKICAgICAgICAgICQub3BlbkxpbmsocmF3X3Bhc3RlKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdmFyIGVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ByZScpOwogICAgICAgIGVsbS5pZCA9ICdwYXN0ZS10ZXh0JzsKICAgICAgICBlbG0uaW5uZXJIVE1MID0gbGlua2lmeShyYXdfcGFzdGUpOwogICAgICAgIHZhciBmcmFtZSA9ICQoJyNwYXN0ZS1mcmFtZSwgI2NhcHRjaGEtcGFnZScpOwogICAgICAgIGZyYW1lLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGVsbSwgZnJhbWUpOwogICAgICB9KTsKICAgIH0sCiAgfSk7Cn0pKCk7CiQucmVnaXN0ZXIoewogIHJ1bGU6IHsKICAgIGhvc3Q6IC9eKHd3d1wuKT9wYXN0ZWRcLmNvJC8sCiAgICBwYXRoOiAvXlwvXHcrJC8sCiAgfSwKICByZWFkeTogZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgJC5yZW1vdmVOb2RlcygnI2NhcHRjaGFfb3ZlcmxheScpOwogIH0sCn0pOwooZnVuY3Rpb24gKGNvbnRleHQsIGZhY3RvcnkpIHsKICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0JykgewogICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGV4dCwgR00pIHsKICAgICAgdmFyIF8gPSByZXF1aXJlKCdsb2Rhc2gnKTsKICAgICAgdmFyIGNvcmUgPSByZXF1aXJlKCcuL2NvcmUuanMnKTsKICAgICAgdmFyIG1pc2MgPSByZXF1aXJlKCcuL21pc2MuanMnKTsKICAgICAgdmFyIGRpc3BhdGNoZXIgPSByZXF1aXJlKCcuL2Rpc3BhdGNoZXIuanMnKTsKICAgICAgdmFyIG1vZHVsZXMgPSBbbWlzYywgZGlzcGF0Y2hlcl0ubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIHYuY2FsbChudWxsLCBjb250ZXh0LCBHTSk7CiAgICAgIH0pOwogICAgICB2YXIgJCA9IF8uYXNzaWduLmFwcGx5KF8sIG1vZHVsZXMpOwogICAgICByZXR1cm4gZmFjdG9yeShjb250ZXh0LCBHTSwgY29yZSwgJCk7CiAgICB9OwogIH0gZWxzZSB7CiAgICBmYWN0b3J5KGNvbnRleHQsIHsKICAgICAgb3BlbkluVGFiOiBHTV9vcGVuSW5UYWIsCiAgICAgIHJlZ2lzdGVyTWVudUNvbW1hbmQ6IEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQsCiAgICB9LCBjb250ZXh0Ll8sIGNvbnRleHQuJCk7CiAgfQp9KHRoaXMsIGZ1bmN0aW9uIChjb250ZXh0LCBHTSwgXywgJCkgewogICd1c2Ugc3RyaWN0JzsKICB2YXIgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50OwogIHZhciBpc1NhZmFyaSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh3aW5kb3cuSFRNTEVsZW1lbnQpLmluZGV4T2YoJ0NvbnN0cnVjdG9yJykgPiAwOwogIGZ1bmN0aW9uIGRpc2FibGVXaW5kb3dPcGVuICgpIHsKICAgICQud2luZG93Lm9wZW4gPSBfLm5vcDsKICAgICQud2luZG93LmFsZXJ0ID0gXy5ub3A7CiAgICAkLndpbmRvdy5jb25maXJtID0gXy5ub3A7CiAgfQogIGZ1bmN0aW9uIGRpc2FibGVMZWF2ZVByb21wdCAoZWxlbWVudCkgewogICAgaWYgKCFlbGVtZW50KSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHZhciBzZWFsID0gewogICAgICBzZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICBfLmluZm8oJ2Jsb2NrZWQgb25iZWZvcmV1bmxvYWQnKTsKICAgICAgfSwKICAgIH07CiAgICBlbGVtZW50Lm9uYmVmb3JldW5sb2FkID0gdW5kZWZpbmVkOwogICAgaWYgKGlzU2FmYXJpKSB7CiAgICAgIGVsZW1lbnQuX19kZWZpbmVTZXR0ZXJfXygnb25iZWZvcmV1bmxvYWQnLCBzZWFsLnNldCk7CiAgICB9IGVsc2UgewogICAgICAkLndpbmRvdy5PYmplY3QuZGVmaW5lUHJvcGVydHkoZWxlbWVudCwgJ29uYmVmb3JldW5sb2FkJywgewogICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSwKICAgICAgICBnZXQ6IHVuZGVmaW5lZCwKICAgICAgICBzZXQ6IHNlYWwuc2V0LAogICAgICB9KTsKICAgIH0KICAgIHZhciBvYWVsID0gZWxlbWVudC5hZGRFdmVudExpc3RlbmVyOwogICAgdmFyIG5hZWwgPSBmdW5jdGlvbiAodHlwZSkgewogICAgICBpZiAodHlwZSA9PT0gJ2JlZm9yZXVubG9hZCcpIHsKICAgICAgICBfLmluZm8oJ2Jsb2NrZWQgYWRkRXZlbnRMaXN0ZW5lciBvbmJlZm9yZXVubG9hZCcpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICByZXR1cm4gb2FlbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciA9IG5hZWw7CiAgfQogIGZ1bmN0aW9uIGNoYW5nZVRpdGxlICgpIHsKICAgIGRvY3VtZW50LnRpdGxlICs9ICcgLSBBZHNCeXBhc3Nlcic7CiAgfQogIGZ1bmN0aW9uIGJlZm9yZURPTVJlYWR5IChoYW5kbGVyKSB7CiAgICBfLmluZm8oJ3dvcmtpbmcgb25cbiVzIFxud2l0aFxuJXMnLCB3aW5kb3cubG9jYXRpb24udG9TdHJpbmcoKSwgSlNPTi5zdHJpbmdpZnkoJC5jb25maWcpKTsKICAgIGRpc2FibGVMZWF2ZVByb21wdCgkLndpbmRvdyk7CiAgICBkaXNhYmxlV2luZG93T3BlbigpOwogICAgaGFuZGxlci5zdGFydCgpOwogIH0KICBmdW5jdGlvbiBhZnRlckRPTVJlYWR5IChoYW5kbGVyKSB7CiAgICBkaXNhYmxlTGVhdmVQcm9tcHQoJC53aW5kb3cuZG9jdW1lbnQuYm9keSk7CiAgICBjaGFuZ2VUaXRsZSgpOwogICAgaGFuZGxlci5yZWFkeSgpOwogIH0KICBmdW5jdGlvbiB3YWl0RE9NICgpIHsKICAgIHJldHVybiBfLkQoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2xvYWRpbmcnKSB7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkgewogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9KTsKICB9CiAgJC5fbWFpbiA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBmaW5kSGFuZGxlciA9ICQuX2ZpbmRIYW5kbGVyOwogICAgZGVsZXRlICQuX21haW47CiAgICBkZWxldGUgJC5fZmluZEhhbmRsZXI7CiAgICBpZiAod2luZG93LnRvcCAhPT0gd2luZG93LnNlbGYpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgR00ucmVnaXN0ZXJNZW51Q29tbWFuZCgnQWRzQnlwYXNzZXIgLSBDb25maWd1cmUnLCBmdW5jdGlvbiAoKSB7CiAgICAgIEdNLm9wZW5JblRhYignaHR0cHM6Ly9hZHNieXBhc3Nlci5naXRodWIuaW8vY29uZmlndXJlLmh0bWwnKTsKICAgIH0pOwogICAgdmFyIGhhbmRsZXIgPSBmaW5kSGFuZGxlcih0cnVlKTsKICAgIGlmIChoYW5kbGVyKSB7CiAgICAgIGlmICgkLmNvbmZpZy5sb2dMZXZlbCA8PSAwKSB7CiAgICAgICAgXy5fcXVpZXQgPSB0cnVlOwogICAgICB9CiAgICAgIGJlZm9yZURPTVJlYWR5KGhhbmRsZXIpOwogICAgICB3YWl0RE9NKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgYWZ0ZXJET01SZWFkeShoYW5kbGVyKTsKICAgICAgfSk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICgkLmNvbmZpZy5sb2dMZXZlbCA8IDIpIHsKICAgICAgXy5fcXVpZXQgPSB0cnVlOwogICAgfQogICAgXy5pbmZvKCdkb2VzIG5vdCBtYXRjaCBsb2NhdGlvbiBvbiBgJXNgLCB3aWxsIHRyeSBIVE1MIGNvbnRlbnQnLCB3aW5kb3cubG9jYXRpb24udG9TdHJpbmcoKSk7CiAgICB3YWl0RE9NKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIGhhbmRsZXIgPSBmaW5kSGFuZGxlcihmYWxzZSk7CiAgICAgIGlmICghaGFuZGxlcikgewogICAgICAgIF8uaW5mbygnZG9lcyBub3QgbWF0Y2ggSFRNTCBjb250ZW50IG9uIGAlc2AnLCB3aW5kb3cubG9jYXRpb24udG9TdHJpbmcoKSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGJlZm9yZURPTVJlYWR5KGhhbmRsZXIpOwogICAgICBhZnRlckRPTVJlYWR5KGhhbmRsZXIpOwogICAgfSk7CiAgfTsKICByZXR1cm4gJDsKfSkpOwokLl9tYWluKCk7Cg==","resources":[{"meta":{"name":"align_center.css","url":"https://raw.githubusercontent.com/adsbypasser/adsbypasser/v5.55.0/css/align_center.css","ts":1644870453697,"mimetype":"text/css"},"source":"aHRtbCB7CiAgaGVpZ2h0OiAxMDAlOwp9Cgpib2R5IHsKICBoZWlnaHQ6IDEwMCU7CiAgbWFyZ2luOiAwOwp9CgojYWRzYnlwYXNzZXItd3JhcHBlciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKI2Fkc2J5cGFzc2VyLWltYWdlIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbWFyZ2luOiBhdXRvOwogIHRvcDogMDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICByaWdodDogMDsKfQoKLyogdmltOiBzZXQgdHM9MiBzdHM9MiBzdz0yIGV0IDogKi8KLyogc3VibGltZTogdGFiX3NpemUgMjsgdHJhbnNsYXRlX3RhYnNfdG9fc3BhY2VzIHRydWU7IGRldGVjdF9pbmRlbnRhdGlvbiBmYWxzZTsgdXNlX3RhYl9zdG9wcyB0cnVlOyAqLwovKiBrYXRlOiBzcGFjZS1pbmRlbnQgb247IGluZGVudC13aWR0aCAyOyAqLwo="},{"meta":{"name":"scale_image.css","url":"https://raw.githubusercontent.com/adsbypasser/adsbypasser/v5.55.0/css/scale_image.css","ts":1644870453704,"mimetype":"text/css"},"source":"I2Fkc2J5cGFzc2VyLWltYWdlLmFkc2J5cGFzc2VyLXJlc2l6YWJsZSB7CiAgY3Vyc29yOiAtd2Via2l0LXpvb20tb3V0OwogIGN1cnNvcjogLW1vei16b29tLW91dDsKICBjdXJzb3I6IHpvb20tb3V0Owp9CgojYWRzYnlwYXNzZXItaW1hZ2UuYWRzYnlwYXNzZXItcmVzaXphYmxlLmFkc2J5cGFzc2VyLXNocmlua2VkIHsKICBtYXgtd2lkdGg6IDEwMCU7CiAgbWF4LWhlaWdodDogMTAwJTsKICBjdXJzb3I6IC13ZWJraXQtem9vbS1pbjsKICBjdXJzb3I6IC1tb3otem9vbS1pbjsKICBjdXJzb3I6IHpvb20taW47Cn0KCi8qIHZpbTogc2V0IHRzPTIgc3RzPTIgc3c9MiBldCA6ICovCi8qIHN1YmxpbWU6IHRhYl9zaXplIDI7IHRyYW5zbGF0ZV90YWJzX3RvX3NwYWNlcyB0cnVlOyBkZXRlY3RfaW5kZW50YXRpb24gZmFsc2U7IHVzZV90YWJfc3RvcHMgdHJ1ZTsgKi8KLyoga2F0ZTogc3BhY2UtaW5kZW50IG9uOyBpbmRlbnQtd2lkdGggMjsgKi8K"},{"meta":{"name":"imagedoc-darknoise.png","url":"https://raw.githubusercontent.com/adsbypasser/adsbypasser/v5.55.0/img/imagedoc-darknoise.png","ts":1644870454133,"mimetype":"image/png"},"source":"wolQTkcNChoKAAAADUlIRFIAAABYAAAAWAQDAAAAwoPCuy0HAAAAG1BMVEXDvsO+w74BAQHDv8O/w78KCgoDAwN/f3/DtcO1w7XCgMKAwoDDvMO8w7zDoQ8Ew7YAAAAJdFJOUwUFBQUFBQUFBcKHDsOTw70AAAvDgklEQVR4Xg3DijljwrJaEADDkBnDtnIue3lxL0HCjUkJwpp8wrEEw6NWwoJLTAkaE0swbj/Du8K9w64UB37DhS1uKsOzwqLDsMOCWHzDqMKfw4BICSlZwqjDvirCtsObw59Rw7MfQsKjc2tIwpfCtMKADcKlwpvCpcKQTxPCl13Cs8Kow4k3I13CjAzCilrCp2vCoMKIwrFZFAhjwqE/wpDDpjvChMKHIi/Dtl/CrAPCt1zDv8O0w6gLwpQnecKSd8O8w73DpMOgfcK8wobCpcOQM8OlacKVwoc/wrREw6gyF8KOYsKqKkvChsKvw6xNZylOwp49RkpVCsK+fFkME8KIw403w4x7R8OJwoDCnsOcw7xiCDnDlS4rFjIEVQ7DjsO2OgAuQF8fEcO6wo5Ow6EtI8OTCsKBND3DhMKswoYmw71xw4VtCMOtH1MXD8KXVG7CnX04V2PCkDlywrPDocOSw4LCsGAdG8OLw7cFTcO+wpjCvFYjwojDgcOLw78PUcKRW8KlLg7DskstADnClCI1w64lHcKwwqYpOsOmHzAEw4bCnsKZw79mw43DlsOqCi/Dp1HCvsO9Wz0DL8O/w4HDrmTCh8OLwrDCvEPDrsKbwqo5HkDDjA3CvcOZWsOpw7DCtsKvwpTDjENUw7DDmmENw5bDrzbDksKMw55Jw7HDpgjCulDDhMKQwpfDp8KGwrPDrcK7wprCtsKDwrcXwpZ0f8KTw6tlLMO8bMKlEsOaw7sKw58jwpXCt8KXKsOwH8OmwonDscOwPcKuVsOdScO8ZsOlV8Olw5DDiMKlCMKcw6UGw6PCh8Oqwo3DizMrbsK6w4h1woABwoHCvXpIb8OLwol4McKmwrjDojYVw4ldwpEUS8KSw6fCh8K2HcOLMMK2Y13CqR/DvlfCg8O0O8OXwrheelbCgxVSQkNXwqXCgwLDhMKeFXpdJcKaLnrCjnYIIMKQEDJ3RcO7NMOEwosrwqPDt2rDt8KKMlPDlMOtGsKUw7QnLWJvJMK0e18ew5fCg8OXw6bDtQPCqhbDryjDm8OZwrdBCsKFw4HCk3huSMK/RsKKazbDkwoqw5EET8OYwozCsMKcworCpkjCoMK4CivCn2zCs8KSw70wG3M1EEVDJMO+VTfCucKuLjYCwoJcw50ZDsObwqHCgcKgRmorw44UQ8Krw43DoMKCWDLClC/CoQTCsTLDi8KmUFjDnALCmmrCrcOow7vDhMOECsKGEA9Vw5lyE8Ojw7fDksO4wo3CnMOHWcO5wrXDnznCkMOgwqMdw7PDlk4Ow7YUwp/DvsK8wqPCssKCC37CrytFbEDDiVjCv8KmPwpgw4PCocOtFMKyB8Kawq4ow5ptZ2fDmxorCMKKEMOkw5Vmw5XCpcKewqHDjgzDu8K9w6PDlV8oP8Kzw47Cl8Oywp3Dn8OZZU5IWcKdHcKCesKRHC4uOBpBwrE/DcOtwobDhScwA8KJbcKewqPDtMO9w6/Dk8KKFxY8w45Pw74dH8ONNEkzwoEgbMKYDcO5ScKswrPDlm/Drm8YJmEDwqZ9w7zCkcKHw5gdw4fCjcKmUVXDucOXaipaR8OxAzzCrkgsccOVw4zCsMOHeMOIXsOlw4kQRsOswrMpwqjDkxMyw60rJCVvQsOkwoPDmMKuwoPDsELDqcOtw63DvkUQw7PDlyTCtcKRbGHDnC/ChDfCsx3DkywDelvCrsO2wq/DsjkIwqkLw6s0wrDDgk0AI8OPwqIEJMKvw5XCjsOQQMO+UUrCgsOEw5tuw67Di8OLw6fDm2Y6dhLDgcKASxHCh18cTGjDiMK/fMK+w6tCwqbCt3YAZQXDvMKpw73DmyQ1HMO/wppdwo7DmMK+KwAZw7Rsw7NDN3bDncOdSQQJw5LCvWkWB8OGH8KwwoHCpcKywpHDosK0w5jCjD3Cg8OFfR/CjnnDhG4/LGB+woPDvcO8eRHDncOEdsOswoohwonCoMOXCk/Dt1TDk8O6wpTCjE/DtTBnwrDDh8KAAUZlwqLCrsKPw7DCpREsGw0Ww6jCgMOcwrsNw73Dn2rCpCfCiijCgGBLOw3Dpk/Cq3Ydw67Ch0VbwrzDi8KOIsKJwokPV8OBOiDCqiLDi8OkwpUuWzkITGnCqEkLw6Rcw7vCqXPDuUvDscKawq05Py/Ci8KgYhDClMKywq/ClcOGwofCsFHCvVIuwrofw7rCnR8+wrvCsMO0RsKGwo/Cq8K4L3ZCA3kkQyYuw4ZREEjCicK7wr8FJcK8wrNPw4FsdMKvdF7CgRx7OcO2R8KYwotTNmFzMmZ/XMKNY3gJNMKVEMK9wrpTw450w4BudXknw4jCi8Oiwq3CjlrDqEkSd1ZVPMKEwq/DgzlUZMOWwrbDs8KmUsKNQ8Kyc8KswqlxOWcywoTDsMKuP8Oxw4l8w7nDjVcCwrp1RULCs8O6IsKPw7fCqMO2FcOFJgPDq8O0HnErw5IlHUrCtErDpcObwoDCj1FQamvDqcKJwqXDkcOYwpddD8KoPMKfwoTCshcfw5/CjT4LwpAvwqDChMKXJMKPV8K1w4DDv8KDwqx6w6kiIxo8fkXDlsK3GkbDvBlZw7Enw6nDvH7DvC7Dj3VwARjCs0rCjsK9VEnCnlfDiHjDrGnDtcOMEsKFw63CgsOgH8KPKQzCisKDDBzChMKXVAc9w4kGOcKjwpQgw7DDgzTCnhXCggNhw6jCiEgBc1EHw7sGwqsuPEfDnMK5w7rDsMOPw5zCiFrCiMOVwrHCtMKYE8KxwojDmsOeOsOkwqERw7/DvcKkwozDocKbUGHDmcOGw5hXGcO2IcKEO3pYw5jCpcKmw7/DpEdPF2PDksKZw4zCvsOraMO6e2HDgTzDlsOew7vDglUyw6RQBsK1wp0vw5vCgcKHwobDmG0GwpAnTsOFw4nDtykKw6vDksK7FTJiM8O6asO7w7DDtgTDnAI9Lk1aIUsDwocMNsKHTsOPJ8OJwqchMBcWwqFQw5bCp3/DpVoKwp4IwrMneAUhSsOoQ8OZEmnCucOyw45KLsOewpsTwpXChcKLDhrCicKVw5jCkMKEKjXCrsOuS8Kqw4LDp8KyFEnCg8KBWFHDkl4oHn8Ww7PCtRnCuxbDvMKJw554SxHDlsKJKcOPKnMyAhzDncKGLcKwN8OwKB9zwpjDgMK2wqPCuybDgcOyH8OQeMKSYl9YCMK3w6dfwoo/wqDCr0DCiUV0NmNOEMOqwq8xHzfDlsKbw5FIwoHDiGJbT8KXw7PCq0jCosOSBsONEcK1woBDWirCiRDCkMK5w74VdnbDh3LClHLCnsOdw7zDlSzCmMOpwoUIb8Oiw5N2AcOywpjCtHojUsOgwrUIfA06AMKrw59CY8O/VAXDksOUA8O2wpMyfsO0wrAaTcKnw68XI8K7bz8Uw7TDoMKpwpXDncKqw5XDocOGwrbDj8KZFsK7dMOgCcKIwpbDpsOOPMO+w5drJ8Oiw77CvS3CiX3CmmjDtMO9Dz4+TVPDgcKheyMcPMOWfsK5wprDgMOrGX5gU8O+TcK+c8KrM8O+G8ODw6cIw6vCjT7Dl8KBGWcTM8OuZcOqw6bCi1jDqn1Kw4TDnsKuw5V0V8OJwrvCmhPDtAd+VUh1fMKMCBYQcsOxOcKMwroSHl9lw6nCmsKIJsK9LULDncKbwrDCiyR8w63ClMKrwo9Cb8OUOkQBwokbcMK9w5HCpjZXwpnCmk9XwonClx/DjMO8Nh8CS8Okfj7ClxPCnkhywq/ClQlpKMKzw5MIw4rDm2EwwpfDrMOSw7rClMOuwoNDw5DDkCTCpyUOS33DlHvDrsO1WcK5w7gjwpEPw7J1w74Vw6c6RGjDmsK+JcKZwqtAwq7ClnXCkFpyYwcvw5RmLnPDlMKzT8OMYwYFw47CjMKrXcKEDExxwoBQwpPCn8K6ZHnCr8K/TGTDrcK8DMKBF0FUw7nDgGw9w7U2NU9Bwo4IL8OBw41rw7xEQAPDgMKAwp3DkMK4w5Q0wqnDhMOow6RVa0lOwp7CqGg7S8O3w55cFnMBdMOKdMOgTsKRccOLw60OKcOaYTQ1wonClH8ubMKqBsOpYlfCtMKsQMOBwrsiwpbCkEkHw6HCgcOCKcKvTsOAwqvCv1R7LSXDvRMZAMODwo4ZEcOMVMOcwr50OHnDigMiwpk1w61fwoofwqFWwqItRGDCg3/CuyHCusO5wp7DulTDlsK1w6XDucKhwovCnMOnw4NrCcKqwqNgworDiFdDw4XDiQfCocOZwpzDmRLCo1LDq0LDrsKGc8O5w4MHwozCkkbClMO3ekMDw7RWPMOXwobCpMOwwoHCgiUeDsO1dC9TX3UTw78efmLDrsK1CsOuR8OtwpTChcKeIUIYbsOcw7MWX2fClMKHwpo1w7oXw7sfw6rDiWzDiAASw5NkNsOewqvDuENmwpxgw5oJIcO4woDCn0lPDlLCknzDiWY1w67DpDkQZsK+GGXChcKaesOBd8Obw5fDnMKjwq15wokJaMOKT8OAwp4Two8ww6NuGQ4wwqnCligpc1TCncKgw7NWBhZfw5zDkxPDiCp3ICRnVCrDtmhRQm7DkgYaIAh6E0xNeQ15wqrCklfDjMOSE8KBw74Ww7sPw6hRwqLCjjPCngQxSMK1wo/CnMKvOCsEe8OCWMKnBUbCj8Kdw6U2I8OMY8OUZcK2B3jCicOKfMOZw7vDjcOrw5zDpEgVCMOjScOJSRTDnh8+w6HDlMKFw7jDmCrDtMKSVcKjw4YzwrTDpMOEwpfDlMKGwpN4OcKTRGEeKsOwL8K1wqbCgWjCtCfCjcO7Ric/wrhyMXLDi8Kvw6IKMsOGF2/DoFvDqMOQwoRFMWxAT8OJDMOXwovDoFvDokc9w4DCriMjA0tZwrwQAMOrWCkSw5rCisKQw4fDuX4TPMOzwobDsDDCjWPCggLDtyBkw5bCpyJuOFTCgRnDg3HDvcO5wqZfXcOmwotbwr0Iw44heUTCu8KXVcK2bktFwqLCuSlnA8O8w7XDui3CocKdw5vCkMKuNHHCv8K+B8KIB1kcwqQpwp7DuMKfInZXI3wQCwDClMKgwoM5w6wYccKOAMKYHRnDm8KMwp3CmD5sBsKeGATChlfDlsOhw719wrA+w4VTwpgSw7HCmTTDkMKwEcKFwpBDwqRkwpTDrBgJwr4ewrtMDcK1wrDCvTXDjsK6w5XDtcK7wrBxIsKvV8KJwr7Cg8KQUxtSK012wrYsUMK5GsKGw4AhBEh9FjdzL8OQTQEcU0rCvsOTw57DrWsTw6IWUmDCiMKnBMOZHcKQwq7Dpl9THCvCgnDDqFnCqcO3wqTCuQxjQ8KxKMOIZQkDAMKvw77CrUk6w6JeCcOPw7fClknDm8OvwqzDgMKqw6PCvwwEISvDvsK2cMO/F8Oaw43DviASw4jChsOyw7xEeinCoHpIAsKycsKxwoTDk8KYw4MewrnCs8OXwofDhcK7w6tALzFRw7rDrjrCoMKDTsK+w753wrkxwp7Ct8OXPsKyRMOoZcKiHcOdPQjCq2bCgSnCr8ONMMKCw5/DnBHCuFsBBMOmRMK7RsKHw4lxCwDDgQXCvk54wp4aEsKtwrlcE0xPasOzWcOnVsObMjPCj8OgwoIMwqlnwpciQcONPzXCqBXCqcOrw5h7wr5Ww7dOYRXDuDNmw5rCusKjw5Ykw7sFC8KwVVsuPkwqw5XDrk/DssOYDcKNVsOIwpTDjMOwXcOjNcOWRmrCjx3DiihTwonDjcONw4IDIVXChi8fw4VWeRbDuF0Aw45mM8KpEsOow6gKwrtewowWCWrDn8O2w79BUjB3DsOHUCzCnltOCT4wwrl0w6/ChgvDk8KfwqnDsHhVf8Kww4LDqMKfwrfDq2HCs2TCrMOeLsKnwpDDoT4kXMKDw7sCwoUvw6XCjF/CqcOww4A7w5rDkS1/O8ODJcKeJ1rDq8OTw6HDt8Knw64Ww7DCqETDi8OXwpwnw6wsw7PDpgvDuEDDpRnDjDROHwzCrSlUw6Q4BHLDmhLCvMOvw78Aw73DtABmwozDlmTDkAAAAABJRU5Ewq5CYMKC"}]}]}